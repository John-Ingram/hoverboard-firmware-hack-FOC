ARM GAS  /tmp/ccVzdWer.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"BLDC_controller.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.plook_u8s16_evencka,"ax",%progbits
  16              		.align	1
  17              		.global	plook_u8s16_evencka
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	plook_u8s16_evencka:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "Src/BLDC_controller.c"
   1:Src/BLDC_controller.c **** /*
   2:Src/BLDC_controller.c ****  * File: BLDC_controller.c
   3:Src/BLDC_controller.c ****  *
   4:Src/BLDC_controller.c ****  * Code generated for Simulink model 'BLDC_controller'.
   5:Src/BLDC_controller.c ****  *
   6:Src/BLDC_controller.c ****  * Model version                  : 1.1296
   7:Src/BLDC_controller.c ****  * Simulink Coder version         : 8.13 (R2017b) 24-Jul-2017
   8:Src/BLDC_controller.c ****  * C/C++ source code generated on : Tue Oct 20 17:29:57 2020
   9:Src/BLDC_controller.c ****  *
  10:Src/BLDC_controller.c ****  * Target selection: ert.tlc
  11:Src/BLDC_controller.c ****  * Embedded hardware selection: ARM Compatible->ARM Cortex
  12:Src/BLDC_controller.c ****  * Emulation hardware selection:
  13:Src/BLDC_controller.c ****  *    Differs from embedded hardware (MATLAB Host)
  14:Src/BLDC_controller.c ****  * Code generation objectives:
  15:Src/BLDC_controller.c ****  *    1. Execution efficiency
  16:Src/BLDC_controller.c ****  *    2. RAM efficiency
  17:Src/BLDC_controller.c ****  * Validation result: Not run
  18:Src/BLDC_controller.c ****  */
  19:Src/BLDC_controller.c **** 
  20:Src/BLDC_controller.c **** #include "BLDC_controller.h"
  21:Src/BLDC_controller.c **** 
  22:Src/BLDC_controller.c **** /* Named constants for Chart: '<S5>/F03_02_Control_Mode_Manager' */
  23:Src/BLDC_controller.c **** #define IN_ACTIVE                      ((uint8_T)1U)
  24:Src/BLDC_controller.c **** #define IN_NO_ACTIVE_CHILD             ((uint8_T)0U)
  25:Src/BLDC_controller.c **** #define IN_OPEN                        ((uint8_T)2U)
  26:Src/BLDC_controller.c **** #define IN_SPEED_MODE                  ((uint8_T)1U)
  27:Src/BLDC_controller.c **** #define IN_TORQUE_MODE                 ((uint8_T)2U)
  28:Src/BLDC_controller.c **** #define IN_VOLTAGE_MODE                ((uint8_T)3U)
  29:Src/BLDC_controller.c **** #define OPEN_MODE                      ((uint8_T)0U)
  30:Src/BLDC_controller.c **** #define SPD_MODE                       ((uint8_T)2U)
  31:Src/BLDC_controller.c **** #define TRQ_MODE                       ((uint8_T)3U)
ARM GAS  /tmp/ccVzdWer.s 			page 2


  32:Src/BLDC_controller.c **** #define VLT_MODE                       ((uint8_T)1U)
  33:Src/BLDC_controller.c **** #ifndef UCHAR_MAX
  34:Src/BLDC_controller.c **** #include <limits.h>
  35:Src/BLDC_controller.c **** #endif
  36:Src/BLDC_controller.c **** 
  37:Src/BLDC_controller.c **** #if ( UCHAR_MAX != (0xFFU) ) || ( SCHAR_MAX != (0x7F) )
  38:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized uchar/char. \
  39:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  40:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  41:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
  42:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  43:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  44:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  45:Src/BLDC_controller.c **** preprocessor word size checks.
  46:Src/BLDC_controller.c **** #endif
  47:Src/BLDC_controller.c **** 
  48:Src/BLDC_controller.c **** #if ( USHRT_MAX != (0xFFFFU) ) || ( SHRT_MAX != (0x7FFF) )
  49:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized ushort/short. \
  50:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  51:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  52:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
  53:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  54:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  55:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  56:Src/BLDC_controller.c **** preprocessor word size checks.
  57:Src/BLDC_controller.c **** #endif
  58:Src/BLDC_controller.c **** 
  59:Src/BLDC_controller.c **** #if ( UINT_MAX != (0xFFFFFFFFU) ) || ( INT_MAX != (0x7FFFFFFF) )
  60:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized uint/int. \
  61:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  62:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  63:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
  64:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  65:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  66:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  67:Src/BLDC_controller.c **** preprocessor word size checks.
  68:Src/BLDC_controller.c **** #endif
  69:Src/BLDC_controller.c **** 
  70:Src/BLDC_controller.c **** #if ( ULONG_MAX != (0xFFFFFFFFU) ) || ( LONG_MAX != (0x7FFFFFFF) )
  71:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized ulong/long. \
  72:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  73:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  74:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
  75:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  76:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  77:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  78:Src/BLDC_controller.c **** preprocessor word size checks.
  79:Src/BLDC_controller.c **** #endif
  80:Src/BLDC_controller.c **** 
  81:Src/BLDC_controller.c **** #if 0
  82:Src/BLDC_controller.c **** 
  83:Src/BLDC_controller.c **** /* Skip this size verification because of preprocessor limitation */
  84:Src/BLDC_controller.c **** #if ( ULLONG_MAX != (0xFFFFFFFFFFFFFFFFULL) ) || ( LLONG_MAX != (0x7FFFFFFFFFFFFFFFLL) )
  85:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized ulong_long/long_long. \
  86:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  87:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  88:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
ARM GAS  /tmp/ccVzdWer.s 			page 3


  89:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  90:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  91:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  92:Src/BLDC_controller.c **** preprocessor word size checks.
  93:Src/BLDC_controller.c **** #endif
  94:Src/BLDC_controller.c **** #endif
  95:Src/BLDC_controller.c **** 
  96:Src/BLDC_controller.c **** uint8_T plook_u8s16_evencka(int16_T u, int16_T bp0, uint16_T bpSpace, uint32_T
  97:Src/BLDC_controller.c ****   maxIndex);
  98:Src/BLDC_controller.c **** uint8_T plook_u8u16_evencka(uint16_T u, uint16_T bp0, uint16_T bpSpace, uint32_T
  99:Src/BLDC_controller.c ****   maxIndex);
 100:Src/BLDC_controller.c **** int32_T div_nde_s32_floor(int32_T numerator, int32_T denominator);
 101:Src/BLDC_controller.c **** extern void Counter_Init(DW_Counter *localDW, int16_T rtp_z_cntInit);
 102:Src/BLDC_controller.c **** extern int16_T Counter(int16_T rtu_inc, int16_T rtu_max, boolean_T rtu_rst,
 103:Src/BLDC_controller.c ****   DW_Counter *localDW);
 104:Src/BLDC_controller.c **** extern void Low_Pass_Filter_Reset(DW_Low_Pass_Filter *localDW);
 105:Src/BLDC_controller.c **** extern void Low_Pass_Filter(const int16_T rtu_u[2], uint16_T rtu_coef, int16_T
 106:Src/BLDC_controller.c ****   rty_y[2], DW_Low_Pass_Filter *localDW);
 107:Src/BLDC_controller.c **** extern void Counter_b_Init(DW_Counter_b *localDW, uint16_T rtp_z_cntInit);
 108:Src/BLDC_controller.c **** extern void Counter_n(uint16_T rtu_inc, uint16_T rtu_max, boolean_T rtu_rst,
 109:Src/BLDC_controller.c ****                       uint16_T *rty_cnt, DW_Counter_b *localDW);
 110:Src/BLDC_controller.c **** extern void either_edge(boolean_T rtu_u, boolean_T *rty_y, DW_either_edge
 111:Src/BLDC_controller.c ****   *localDW);
 112:Src/BLDC_controller.c **** extern void Debounce_Filter_Init(DW_Debounce_Filter *localDW);
 113:Src/BLDC_controller.c **** extern void Debounce_Filter(boolean_T rtu_u, uint16_T rtu_tAcv, uint16_T
 114:Src/BLDC_controller.c ****   rtu_tDeacv, boolean_T *rty_y, DW_Debounce_Filter *localDW);
 115:Src/BLDC_controller.c **** extern void I_backCalc_fixdt_Init(DW_I_backCalc_fixdt *localDW, int32_T
 116:Src/BLDC_controller.c ****   rtp_yInit);
 117:Src/BLDC_controller.c **** extern void I_backCalc_fixdt_Reset(DW_I_backCalc_fixdt *localDW, int32_T
 118:Src/BLDC_controller.c ****   rtp_yInit);
 119:Src/BLDC_controller.c **** extern void I_backCalc_fixdt(int16_T rtu_err, uint16_T rtu_I, uint16_T rtu_Kb,
 120:Src/BLDC_controller.c ****   int16_T rtu_satMax, int16_T rtu_satMin, int16_T *rty_out, DW_I_backCalc_fixdt *
 121:Src/BLDC_controller.c ****   localDW);
 122:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_Init(DW_PI_clamp_fixdt *localDW);
 123:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_Reset(DW_PI_clamp_fixdt *localDW);
 124:Src/BLDC_controller.c **** extern void PI_clamp_fixdt(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I,
 125:Src/BLDC_controller.c ****   int32_T rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 126:Src/BLDC_controller.c ****   rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt *localDW);
 127:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_d_Init(DW_PI_clamp_fixdt_m *localDW);
 128:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_b_Reset(DW_PI_clamp_fixdt_m *localDW);
 129:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_l(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I,
 130:Src/BLDC_controller.c ****   int16_T rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 131:Src/BLDC_controller.c ****   rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt_m *localDW);
 132:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_f_Init(DW_PI_clamp_fixdt_g *localDW);
 133:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_g_Reset(DW_PI_clamp_fixdt_g *localDW);
 134:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_k(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I,
 135:Src/BLDC_controller.c ****   int16_T rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 136:Src/BLDC_controller.c ****   rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt_g *localDW);
 137:Src/BLDC_controller.c **** uint8_T plook_u8s16_evencka(int16_T u, int16_T bp0, uint16_T bpSpace, uint32_T
 138:Src/BLDC_controller.c ****   maxIndex)
 139:Src/BLDC_controller.c **** {
  28              		.loc 1 139 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 140:Src/BLDC_controller.c ****   uint8_T bpIndex;
ARM GAS  /tmp/ccVzdWer.s 			page 4


  33              		.loc 1 140 3 view .LVU1
 141:Src/BLDC_controller.c ****   uint16_T fbpIndex;
  34              		.loc 1 141 3 view .LVU2
 142:Src/BLDC_controller.c **** 
 143:Src/BLDC_controller.c ****   /* Prelookup - Index only
 144:Src/BLDC_controller.c ****      Index Search method: 'even'
 145:Src/BLDC_controller.c ****      Extrapolation method: 'Clip'
 146:Src/BLDC_controller.c ****      Use previous index: 'off'
 147:Src/BLDC_controller.c ****      Use last breakpoint for index at or above upper limit: 'on'
 148:Src/BLDC_controller.c ****      Remove protection against out-of-range input in generated code: 'off'
 149:Src/BLDC_controller.c ****    */
 150:Src/BLDC_controller.c ****   if (u <= bp0) {
  35              		.loc 1 150 3 view .LVU3
  36              		.loc 1 150 6 is_stmt 0 view .LVU4
  37 0000 8842     		cmp	r0, r1
  38 0002 09DD     		ble	.L4
 151:Src/BLDC_controller.c ****     bpIndex = 0U;
 152:Src/BLDC_controller.c ****   } else {
 153:Src/BLDC_controller.c ****     fbpIndex = (uint16_T)((uint32_T)(uint16_T)(u - bp0) / bpSpace);
  39              		.loc 1 153 5 is_stmt 1 view .LVU5
  40              		.loc 1 153 37 is_stmt 0 view .LVU6
  41 0004 401A     		subs	r0, r0, r1
  42              	.LVL1:
  43              		.loc 1 153 37 view .LVU7
  44 0006 80B2     		uxth	r0, r0
  45              		.loc 1 153 14 view .LVU8
  46 0008 B0FBF2F2 		udiv	r2, r0, r2
  47              	.LVL2:
 154:Src/BLDC_controller.c ****     if (fbpIndex < maxIndex) {
  48              		.loc 1 154 5 is_stmt 1 view .LVU9
  49              		.loc 1 154 8 is_stmt 0 view .LVU10
  50 000c 9A42     		cmp	r2, r3
  51 000e 01D2     		bcs	.L3
 155:Src/BLDC_controller.c ****       bpIndex = (uint8_T)fbpIndex;
  52              		.loc 1 155 7 is_stmt 1 view .LVU11
  53              		.loc 1 155 15 is_stmt 0 view .LVU12
  54 0010 D0B2     		uxtb	r0, r2
  55              	.LVL3:
  56              		.loc 1 155 15 view .LVU13
  57 0012 7047     		bx	lr
  58              	.LVL4:
  59              	.L3:
 156:Src/BLDC_controller.c ****     } else {
 157:Src/BLDC_controller.c ****       bpIndex = (uint8_T)maxIndex;
  60              		.loc 1 157 7 is_stmt 1 view .LVU14
  61              		.loc 1 157 15 is_stmt 0 view .LVU15
  62 0014 D8B2     		uxtb	r0, r3
  63              	.LVL5:
  64              		.loc 1 157 15 view .LVU16
  65 0016 7047     		bx	lr
  66              	.LVL6:
  67              	.L4:
 151:Src/BLDC_controller.c ****   } else {
  68              		.loc 1 151 13 view .LVU17
  69 0018 0020     		movs	r0, #0
  70              	.LVL7:
 158:Src/BLDC_controller.c ****     }
ARM GAS  /tmp/ccVzdWer.s 			page 5


 159:Src/BLDC_controller.c ****   }
 160:Src/BLDC_controller.c **** 
 161:Src/BLDC_controller.c ****   return bpIndex;
  71              		.loc 1 161 3 is_stmt 1 view .LVU18
 162:Src/BLDC_controller.c **** }
  72              		.loc 1 162 1 is_stmt 0 view .LVU19
  73 001a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE0:
  77              		.section	.text.plook_u8u16_evencka,"ax",%progbits
  78              		.align	1
  79              		.global	plook_u8u16_evencka
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	plook_u8u16_evencka:
  86              	.LVL8:
  87              	.LFB1:
 163:Src/BLDC_controller.c **** 
 164:Src/BLDC_controller.c **** uint8_T plook_u8u16_evencka(uint16_T u, uint16_T bp0, uint16_T bpSpace, uint32_T
 165:Src/BLDC_controller.c ****   maxIndex)
 166:Src/BLDC_controller.c **** {
  88              		.loc 1 166 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 167:Src/BLDC_controller.c ****   uint8_T bpIndex;
  93              		.loc 1 167 3 view .LVU21
 168:Src/BLDC_controller.c ****   uint16_T fbpIndex;
  94              		.loc 1 168 3 view .LVU22
 169:Src/BLDC_controller.c **** 
 170:Src/BLDC_controller.c ****   /* Prelookup - Index only
 171:Src/BLDC_controller.c ****      Index Search method: 'even'
 172:Src/BLDC_controller.c ****      Extrapolation method: 'Clip'
 173:Src/BLDC_controller.c ****      Use previous index: 'off'
 174:Src/BLDC_controller.c ****      Use last breakpoint for index at or above upper limit: 'on'
 175:Src/BLDC_controller.c ****      Remove protection against out-of-range input in generated code: 'off'
 176:Src/BLDC_controller.c ****    */
 177:Src/BLDC_controller.c ****   if (u <= bp0) {
  95              		.loc 1 177 3 view .LVU23
  96              		.loc 1 177 6 is_stmt 0 view .LVU24
  97 0000 8842     		cmp	r0, r1
  98 0002 09D9     		bls	.L8
 178:Src/BLDC_controller.c ****     bpIndex = 0U;
 179:Src/BLDC_controller.c ****   } else {
 180:Src/BLDC_controller.c ****     fbpIndex = (uint16_T)((uint32_T)(uint16_T)((uint32_T)u - bp0) / bpSpace);
  99              		.loc 1 180 5 is_stmt 1 view .LVU25
 100              		.loc 1 180 37 is_stmt 0 view .LVU26
 101 0004 401A     		subs	r0, r0, r1
 102              	.LVL9:
 103              		.loc 1 180 37 view .LVU27
 104 0006 80B2     		uxth	r0, r0
 105              		.loc 1 180 14 view .LVU28
 106 0008 B0FBF2F2 		udiv	r2, r0, r2
 107              	.LVL10:
ARM GAS  /tmp/ccVzdWer.s 			page 6


 181:Src/BLDC_controller.c ****     if (fbpIndex < maxIndex) {
 108              		.loc 1 181 5 is_stmt 1 view .LVU29
 109              		.loc 1 181 8 is_stmt 0 view .LVU30
 110 000c 9A42     		cmp	r2, r3
 111 000e 01D2     		bcs	.L7
 182:Src/BLDC_controller.c ****       bpIndex = (uint8_T)fbpIndex;
 112              		.loc 1 182 7 is_stmt 1 view .LVU31
 113              		.loc 1 182 15 is_stmt 0 view .LVU32
 114 0010 D0B2     		uxtb	r0, r2
 115              	.LVL11:
 116              		.loc 1 182 15 view .LVU33
 117 0012 7047     		bx	lr
 118              	.LVL12:
 119              	.L7:
 183:Src/BLDC_controller.c ****     } else {
 184:Src/BLDC_controller.c ****       bpIndex = (uint8_T)maxIndex;
 120              		.loc 1 184 7 is_stmt 1 view .LVU34
 121              		.loc 1 184 15 is_stmt 0 view .LVU35
 122 0014 D8B2     		uxtb	r0, r3
 123              	.LVL13:
 124              		.loc 1 184 15 view .LVU36
 125 0016 7047     		bx	lr
 126              	.LVL14:
 127              	.L8:
 178:Src/BLDC_controller.c ****   } else {
 128              		.loc 1 178 13 view .LVU37
 129 0018 0020     		movs	r0, #0
 130              	.LVL15:
 185:Src/BLDC_controller.c ****     }
 186:Src/BLDC_controller.c ****   }
 187:Src/BLDC_controller.c **** 
 188:Src/BLDC_controller.c ****   return bpIndex;
 131              		.loc 1 188 3 is_stmt 1 view .LVU38
 189:Src/BLDC_controller.c **** }
 132              		.loc 1 189 1 is_stmt 0 view .LVU39
 133 001a 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE1:
 137              		.section	.text.div_nde_s32_floor,"ax",%progbits
 138              		.align	1
 139              		.global	div_nde_s32_floor
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	div_nde_s32_floor:
 146              	.LVL16:
 147              	.LFB2:
 190:Src/BLDC_controller.c **** 
 191:Src/BLDC_controller.c **** int32_T div_nde_s32_floor(int32_T numerator, int32_T denominator)
 192:Src/BLDC_controller.c **** {
 148              		.loc 1 192 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 193:Src/BLDC_controller.c ****   return (((numerator < 0) != (denominator < 0)) && (numerator % denominator !=
ARM GAS  /tmp/ccVzdWer.s 			page 7


 153              		.loc 1 193 3 view .LVU41
 154              		.loc 1 193 28 is_stmt 0 view .LVU42
 155 0000 CB0F     		lsrs	r3, r1, #31
 194:Src/BLDC_controller.c ****            0) ? -1 : 0) + numerator / denominator;
 156              		.loc 1 194 20 view .LVU43
 157 0002 B3EBD07F 		cmp	r3, r0, lsr #31
 158 0006 07D0     		beq	.L11
 193:Src/BLDC_controller.c ****   return (((numerator < 0) != (denominator < 0)) && (numerator % denominator !=
 159              		.loc 1 193 64 view .LVU44
 160 0008 90FBF1F3 		sdiv	r3, r0, r1
 161 000c 01FB1303 		mls	r3, r1, r3, r0
 193:Src/BLDC_controller.c ****   return (((numerator < 0) != (denominator < 0)) && (numerator % denominator !=
 162              		.loc 1 193 50 view .LVU45
 163 0010 1BB1     		cbz	r3, .L10
 164              		.loc 1 194 20 view .LVU46
 165 0012 4FF0FF33 		mov	r3, #-1
 166 0016 00E0     		b	.L10
 167              	.L11:
 168 0018 0023     		movs	r3, #0
 169              	.L10:
 170              		.loc 1 194 37 discriminator 3 view .LVU47
 171 001a 90FBF1F0 		sdiv	r0, r0, r1
 172              	.LVL17:
 195:Src/BLDC_controller.c **** }
 173              		.loc 1 195 1 discriminator 3 view .LVU48
 174 001e 1844     		add	r0, r0, r3
 175 0020 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE2:
 179              		.section	.text.Counter_Init,"ax",%progbits
 180              		.align	1
 181              		.global	Counter_Init
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu softvfp
 187              	Counter_Init:
 188              	.LVL18:
 189              	.LFB3:
 196:Src/BLDC_controller.c **** 
 197:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S13>/Counter' */
 198:Src/BLDC_controller.c **** void Counter_Init(DW_Counter *localDW, int16_T rtp_z_cntInit)
 199:Src/BLDC_controller.c **** {
 190              		.loc 1 199 1 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 200:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S18>/UnitDelay' */
 201:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = rtp_z_cntInit;
 195              		.loc 1 201 3 view .LVU50
 196              		.loc 1 201 29 is_stmt 0 view .LVU51
 197 0000 0180     		strh	r1, [r0]	@ movhi
 202:Src/BLDC_controller.c **** }
 198              		.loc 1 202 1 view .LVU52
 199 0002 7047     		bx	lr
 200              		.cfi_endproc
ARM GAS  /tmp/ccVzdWer.s 			page 8


 201              	.LFE3:
 203              		.section	.text.Counter,"ax",%progbits
 204              		.align	1
 205              		.global	Counter
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu softvfp
 211              	Counter:
 212              	.LVL19:
 213              	.LFB4:
 203:Src/BLDC_controller.c **** 
 204:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S13>/Counter' */
 205:Src/BLDC_controller.c **** int16_T Counter(int16_T rtu_inc, int16_T rtu_max, boolean_T rtu_rst, DW_Counter *
 206:Src/BLDC_controller.c ****                 localDW)
 207:Src/BLDC_controller.c **** {
 214              		.loc 1 207 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 208:Src/BLDC_controller.c ****   int16_T rtu_rst_0;
 219              		.loc 1 208 3 view .LVU54
 209:Src/BLDC_controller.c ****   int16_T rty_cnt_0;
 220              		.loc 1 209 3 view .LVU55
 210:Src/BLDC_controller.c **** 
 211:Src/BLDC_controller.c ****   /* Switch: '<S18>/Switch1' incorporates:
 212:Src/BLDC_controller.c ****    *  Constant: '<S18>/Constant23'
 213:Src/BLDC_controller.c ****    *  UnitDelay: '<S18>/UnitDelay'
 214:Src/BLDC_controller.c ****    */
 215:Src/BLDC_controller.c ****   if (rtu_rst) {
 221              		.loc 1 215 3 view .LVU56
 222              		.loc 1 215 6 is_stmt 0 view .LVU57
 223 0000 3AB9     		cbnz	r2, .L18
 216:Src/BLDC_controller.c ****     rtu_rst_0 = 0;
 217:Src/BLDC_controller.c ****   } else {
 218:Src/BLDC_controller.c ****     rtu_rst_0 = localDW->UnitDelay_DSTATE;
 224              		.loc 1 218 5 is_stmt 1 view .LVU58
 225              		.loc 1 218 15 is_stmt 0 view .LVU59
 226 0002 B3F90020 		ldrsh	r2, [r3]
 227              	.LVL20:
 228              	.L15:
 219:Src/BLDC_controller.c ****   }
 220:Src/BLDC_controller.c **** 
 221:Src/BLDC_controller.c ****   /* End of Switch: '<S18>/Switch1' */
 222:Src/BLDC_controller.c **** 
 223:Src/BLDC_controller.c ****   /* Sum: '<S16>/Sum1' */
 224:Src/BLDC_controller.c ****   rty_cnt_0 = (int16_T)(rtu_inc + rtu_rst_0);
 229              		.loc 1 224 3 is_stmt 1 view .LVU60
 230              		.loc 1 224 33 is_stmt 0 view .LVU61
 231 0006 1044     		add	r0, r0, r2
 232              	.LVL21:
 233              		.loc 1 224 13 view .LVU62
 234 0008 00B2     		sxth	r0, r0
 235              	.LVL22:
 225:Src/BLDC_controller.c **** 
 226:Src/BLDC_controller.c ****   /* MinMax: '<S16>/MinMax' */
ARM GAS  /tmp/ccVzdWer.s 			page 9


 227:Src/BLDC_controller.c ****   if (rty_cnt_0 < rtu_max) {
 236              		.loc 1 227 3 is_stmt 1 view .LVU63
 237              		.loc 1 227 6 is_stmt 0 view .LVU64
 238 000a 8842     		cmp	r0, r1
 239 000c 03DA     		bge	.L16
 228:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S18>/UnitDelay' */
 229:Src/BLDC_controller.c ****     localDW->UnitDelay_DSTATE = rty_cnt_0;
 240              		.loc 1 229 5 is_stmt 1 view .LVU65
 241              		.loc 1 229 31 is_stmt 0 view .LVU66
 242 000e 1880     		strh	r0, [r3]	@ movhi
 243 0010 7047     		bx	lr
 244              	.LVL23:
 245              	.L18:
 216:Src/BLDC_controller.c ****   } else {
 246              		.loc 1 216 15 view .LVU67
 247 0012 0022     		movs	r2, #0
 248              	.LVL24:
 216:Src/BLDC_controller.c ****   } else {
 249              		.loc 1 216 15 view .LVU68
 250 0014 F7E7     		b	.L15
 251              	.LVL25:
 252              	.L16:
 230:Src/BLDC_controller.c ****   } else {
 231:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S18>/UnitDelay' */
 232:Src/BLDC_controller.c ****     localDW->UnitDelay_DSTATE = rtu_max;
 253              		.loc 1 232 5 is_stmt 1 view .LVU69
 254              		.loc 1 232 31 is_stmt 0 view .LVU70
 255 0016 1980     		strh	r1, [r3]	@ movhi
 233:Src/BLDC_controller.c ****   }
 234:Src/BLDC_controller.c **** 
 235:Src/BLDC_controller.c ****   /* End of MinMax: '<S16>/MinMax' */
 236:Src/BLDC_controller.c ****   return rty_cnt_0;
 256              		.loc 1 236 3 is_stmt 1 view .LVU71
 237:Src/BLDC_controller.c **** }
 257              		.loc 1 237 1 is_stmt 0 view .LVU72
 258 0018 7047     		bx	lr
 259              		.cfi_endproc
 260              	.LFE4:
 262              		.section	.text.Low_Pass_Filter_Reset,"ax",%progbits
 263              		.align	1
 264              		.global	Low_Pass_Filter_Reset
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	Low_Pass_Filter_Reset:
 271              	.LVL26:
 272              	.LFB5:
 238:Src/BLDC_controller.c **** 
 239:Src/BLDC_controller.c **** /* System reset for atomic system: '<S50>/Low_Pass_Filter' */
 240:Src/BLDC_controller.c **** void Low_Pass_Filter_Reset(DW_Low_Pass_Filter *localDW)
 241:Src/BLDC_controller.c **** {
 273              		.loc 1 241 1 is_stmt 1 view -0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
ARM GAS  /tmp/ccVzdWer.s 			page 10


 242:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S56>/UnitDelay1' */
 243:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE[0] = 0;
 278              		.loc 1 243 3 view .LVU74
 279              		.loc 1 243 33 is_stmt 0 view .LVU75
 280 0000 0023     		movs	r3, #0
 281 0002 0360     		str	r3, [r0]
 244:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE[1] = 0;
 282              		.loc 1 244 3 is_stmt 1 view .LVU76
 283              		.loc 1 244 33 is_stmt 0 view .LVU77
 284 0004 4360     		str	r3, [r0, #4]
 245:Src/BLDC_controller.c **** }
 285              		.loc 1 245 1 view .LVU78
 286 0006 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE5:
 290              		.section	.text.Low_Pass_Filter,"ax",%progbits
 291              		.align	1
 292              		.global	Low_Pass_Filter
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	Low_Pass_Filter:
 299              	.LVL27:
 300              	.LFB6:
 246:Src/BLDC_controller.c **** 
 247:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S50>/Low_Pass_Filter' */
 248:Src/BLDC_controller.c **** void Low_Pass_Filter(const int16_T rtu_u[2], uint16_T rtu_coef, int16_T rty_y[2],
 249:Src/BLDC_controller.c ****                      DW_Low_Pass_Filter *localDW)
 250:Src/BLDC_controller.c **** {
 301              		.loc 1 250 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306              		.loc 1 250 1 is_stmt 0 view .LVU80
 307 0000 30B4     		push	{r4, r5}
 308              	.LCFI0:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 5, -4
 251:Src/BLDC_controller.c ****   int32_T rtb_Sum3_g;
 312              		.loc 1 251 3 is_stmt 1 view .LVU81
 252:Src/BLDC_controller.c **** 
 253:Src/BLDC_controller.c ****   /* Sum: '<S56>/Sum2' incorporates:
 254:Src/BLDC_controller.c ****    *  UnitDelay: '<S56>/UnitDelay1'
 255:Src/BLDC_controller.c ****    */
 256:Src/BLDC_controller.c ****   rtb_Sum3_g = rtu_u[0] - (localDW->UnitDelay1_DSTATE[0] >> 16);
 313              		.loc 1 256 3 view .LVU82
 314              		.loc 1 256 21 is_stmt 0 view .LVU83
 315 0002 B0F90040 		ldrsh	r4, [r0]
 316              		.loc 1 256 54 view .LVU84
 317 0006 1D68     		ldr	r5, [r3]
 318              		.loc 1 256 14 view .LVU85
 319 0008 A4EB2544 		sub	r4, r4, r5, asr #16
 320              	.LVL28:
 257:Src/BLDC_controller.c ****   if (rtb_Sum3_g > 32767) {
ARM GAS  /tmp/ccVzdWer.s 			page 11


 321              		.loc 1 257 3 is_stmt 1 view .LVU86
 322              		.loc 1 257 6 is_stmt 0 view .LVU87
 323 000c B4F5004F 		cmp	r4, #32768
 324 0010 04DA     		bge	.L23
 258:Src/BLDC_controller.c ****     rtb_Sum3_g = 32767;
 259:Src/BLDC_controller.c ****   } else {
 260:Src/BLDC_controller.c ****     if (rtb_Sum3_g < -32768) {
 325              		.loc 1 260 5 is_stmt 1 view .LVU88
 326              		.loc 1 260 8 is_stmt 0 view .LVU89
 327 0012 14F5004F 		cmn	r4, #32768
 328 0016 03DA     		bge	.L21
 261:Src/BLDC_controller.c ****       rtb_Sum3_g = -32768;
 329              		.loc 1 261 18 view .LVU90
 330 0018 0F4C     		ldr	r4, .L28
 331              	.LVL29:
 332              		.loc 1 261 18 view .LVU91
 333 001a 01E0     		b	.L21
 334              	.LVL30:
 335              	.L23:
 258:Src/BLDC_controller.c ****     rtb_Sum3_g = 32767;
 336              		.loc 1 258 16 view .LVU92
 337 001c 47F6FF74 		movw	r4, #32767
 338              	.LVL31:
 339              	.L21:
 262:Src/BLDC_controller.c ****     }
 263:Src/BLDC_controller.c ****   }
 264:Src/BLDC_controller.c **** 
 265:Src/BLDC_controller.c ****   /* Sum: '<S56>/Sum3' incorporates:
 266:Src/BLDC_controller.c ****    *  Product: '<S56>/Divide3'
 267:Src/BLDC_controller.c ****    *  Sum: '<S56>/Sum2'
 268:Src/BLDC_controller.c ****    *  UnitDelay: '<S56>/UnitDelay1'
 269:Src/BLDC_controller.c ****    */
 270:Src/BLDC_controller.c ****   rtb_Sum3_g = rtu_coef * rtb_Sum3_g + localDW->UnitDelay1_DSTATE[0];
 340              		.loc 1 270 3 is_stmt 1 view .LVU93
 341              		.loc 1 270 14 is_stmt 0 view .LVU94
 342 0020 04FB0154 		mla	r4, r4, r1, r5
 343              	.LVL32:
 271:Src/BLDC_controller.c **** 
 272:Src/BLDC_controller.c ****   /* DataTypeConversion: '<S56>/Data Type Conversion' */
 273:Src/BLDC_controller.c ****   rty_y[0] = (int16_T)(rtb_Sum3_g >> 16);
 344              		.loc 1 273 3 is_stmt 1 view .LVU95
 345              		.loc 1 273 14 is_stmt 0 view .LVU96
 346 0024 2514     		asrs	r5, r4, #16
 347              		.loc 1 273 12 view .LVU97
 348 0026 1580     		strh	r5, [r2]	@ movhi
 274:Src/BLDC_controller.c **** 
 275:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S56>/UnitDelay1' */
 276:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE[0] = rtb_Sum3_g;
 349              		.loc 1 276 3 is_stmt 1 view .LVU98
 350              		.loc 1 276 33 is_stmt 0 view .LVU99
 351 0028 1C60     		str	r4, [r3]
 277:Src/BLDC_controller.c **** 
 278:Src/BLDC_controller.c ****   /* Sum: '<S56>/Sum2' incorporates:
 279:Src/BLDC_controller.c ****    *  UnitDelay: '<S56>/UnitDelay1'
 280:Src/BLDC_controller.c ****    */
 281:Src/BLDC_controller.c ****   rtb_Sum3_g = rtu_u[1] - (localDW->UnitDelay1_DSTATE[1] >> 16);
 352              		.loc 1 281 3 is_stmt 1 view .LVU100
ARM GAS  /tmp/ccVzdWer.s 			page 12


 353              		.loc 1 281 21 is_stmt 0 view .LVU101
 354 002a B0F90200 		ldrsh	r0, [r0, #2]
 355              	.LVL33:
 356              		.loc 1 281 54 view .LVU102
 357 002e 5C68     		ldr	r4, [r3, #4]
 358              	.LVL34:
 359              		.loc 1 281 14 view .LVU103
 360 0030 A0EB2440 		sub	r0, r0, r4, asr #16
 361              	.LVL35:
 282:Src/BLDC_controller.c ****   if (rtb_Sum3_g > 32767) {
 362              		.loc 1 282 3 is_stmt 1 view .LVU104
 363              		.loc 1 282 6 is_stmt 0 view .LVU105
 364 0034 B0F5004F 		cmp	r0, #32768
 365 0038 04DA     		bge	.L25
 283:Src/BLDC_controller.c ****     rtb_Sum3_g = 32767;
 284:Src/BLDC_controller.c ****   } else {
 285:Src/BLDC_controller.c ****     if (rtb_Sum3_g < -32768) {
 366              		.loc 1 285 5 is_stmt 1 view .LVU106
 367              		.loc 1 285 8 is_stmt 0 view .LVU107
 368 003a 10F5004F 		cmn	r0, #32768
 369 003e 03DA     		bge	.L22
 286:Src/BLDC_controller.c ****       rtb_Sum3_g = -32768;
 370              		.loc 1 286 18 view .LVU108
 371 0040 0548     		ldr	r0, .L28
 372              	.LVL36:
 373              		.loc 1 286 18 view .LVU109
 374 0042 01E0     		b	.L22
 375              	.LVL37:
 376              	.L25:
 283:Src/BLDC_controller.c ****     rtb_Sum3_g = 32767;
 377              		.loc 1 283 16 view .LVU110
 378 0044 47F6FF70 		movw	r0, #32767
 379              	.LVL38:
 380              	.L22:
 287:Src/BLDC_controller.c ****     }
 288:Src/BLDC_controller.c ****   }
 289:Src/BLDC_controller.c **** 
 290:Src/BLDC_controller.c ****   /* Sum: '<S56>/Sum3' incorporates:
 291:Src/BLDC_controller.c ****    *  Product: '<S56>/Divide3'
 292:Src/BLDC_controller.c ****    *  Sum: '<S56>/Sum2'
 293:Src/BLDC_controller.c ****    *  UnitDelay: '<S56>/UnitDelay1'
 294:Src/BLDC_controller.c ****    */
 295:Src/BLDC_controller.c ****   rtb_Sum3_g = rtu_coef * rtb_Sum3_g + localDW->UnitDelay1_DSTATE[1];
 381              		.loc 1 295 3 is_stmt 1 view .LVU111
 382              		.loc 1 295 14 is_stmt 0 view .LVU112
 383 0048 00FB0141 		mla	r1, r0, r1, r4
 384              	.LVL39:
 296:Src/BLDC_controller.c **** 
 297:Src/BLDC_controller.c ****   /* DataTypeConversion: '<S56>/Data Type Conversion' */
 298:Src/BLDC_controller.c ****   rty_y[1] = (int16_T)(rtb_Sum3_g >> 16);
 385              		.loc 1 298 3 is_stmt 1 view .LVU113
 386              		.loc 1 298 14 is_stmt 0 view .LVU114
 387 004c 0814     		asrs	r0, r1, #16
 388              		.loc 1 298 12 view .LVU115
 389 004e 5080     		strh	r0, [r2, #2]	@ movhi
 299:Src/BLDC_controller.c **** 
 300:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S56>/UnitDelay1' */
ARM GAS  /tmp/ccVzdWer.s 			page 13


 301:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE[1] = rtb_Sum3_g;
 390              		.loc 1 301 3 is_stmt 1 view .LVU116
 391              		.loc 1 301 33 is_stmt 0 view .LVU117
 392 0050 5960     		str	r1, [r3, #4]
 302:Src/BLDC_controller.c **** }
 393              		.loc 1 302 1 view .LVU118
 394 0052 30BC     		pop	{r4, r5}
 395              	.LCFI1:
 396              		.cfi_restore 5
 397              		.cfi_restore 4
 398              		.cfi_def_cfa_offset 0
 399 0054 7047     		bx	lr
 400              	.L29:
 401 0056 00BF     		.align	2
 402              	.L28:
 403 0058 0080FFFF 		.word	-32768
 404              		.cfi_endproc
 405              	.LFE6:
 407              		.section	.text.Counter_b_Init,"ax",%progbits
 408              		.align	1
 409              		.global	Counter_b_Init
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu softvfp
 415              	Counter_b_Init:
 416              	.LVL40:
 417              	.LFB7:
 303:Src/BLDC_controller.c **** 
 304:Src/BLDC_controller.c **** /*
 305:Src/BLDC_controller.c ****  * System initialize for atomic system:
 306:Src/BLDC_controller.c ****  *    '<S25>/Counter'
 307:Src/BLDC_controller.c ****  *    '<S24>/Counter'
 308:Src/BLDC_controller.c ****  */
 309:Src/BLDC_controller.c **** void Counter_b_Init(DW_Counter_b *localDW, uint16_T rtp_z_cntInit)
 310:Src/BLDC_controller.c **** {
 418              		.loc 1 310 1 is_stmt 1 view -0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 311:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S30>/UnitDelay' */
 312:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = rtp_z_cntInit;
 423              		.loc 1 312 3 view .LVU120
 424              		.loc 1 312 29 is_stmt 0 view .LVU121
 425 0000 0180     		strh	r1, [r0]	@ movhi
 313:Src/BLDC_controller.c **** }
 426              		.loc 1 313 1 view .LVU122
 427 0002 7047     		bx	lr
 428              		.cfi_endproc
 429              	.LFE7:
 431              		.section	.text.Counter_n,"ax",%progbits
 432              		.align	1
 433              		.global	Counter_n
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
ARM GAS  /tmp/ccVzdWer.s 			page 14


 437              		.fpu softvfp
 439              	Counter_n:
 440              	.LVL41:
 441              	.LFB8:
 314:Src/BLDC_controller.c **** 
 315:Src/BLDC_controller.c **** /*
 316:Src/BLDC_controller.c ****  * Output and update for atomic system:
 317:Src/BLDC_controller.c ****  *    '<S25>/Counter'
 318:Src/BLDC_controller.c ****  *    '<S24>/Counter'
 319:Src/BLDC_controller.c ****  */
 320:Src/BLDC_controller.c **** void Counter_n(uint16_T rtu_inc, uint16_T rtu_max, boolean_T rtu_rst, uint16_T
 321:Src/BLDC_controller.c ****                *rty_cnt, DW_Counter_b *localDW)
 322:Src/BLDC_controller.c **** {
 442              		.loc 1 322 1 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 4, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              		.loc 1 322 1 is_stmt 0 view .LVU124
 448 0000 10B4     		push	{r4}
 449              	.LCFI2:
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 4, -4
 452 0002 019C     		ldr	r4, [sp, #4]
 323:Src/BLDC_controller.c ****   uint16_T rtu_rst_0;
 453              		.loc 1 323 3 is_stmt 1 view .LVU125
 324:Src/BLDC_controller.c **** 
 325:Src/BLDC_controller.c ****   /* Switch: '<S30>/Switch1' incorporates:
 326:Src/BLDC_controller.c ****    *  Constant: '<S30>/Constant23'
 327:Src/BLDC_controller.c ****    *  UnitDelay: '<S30>/UnitDelay'
 328:Src/BLDC_controller.c ****    */
 329:Src/BLDC_controller.c ****   if (rtu_rst) {
 454              		.loc 1 329 3 view .LVU126
 455              		.loc 1 329 6 is_stmt 0 view .LVU127
 456 0004 42B9     		cbnz	r2, .L35
 330:Src/BLDC_controller.c ****     rtu_rst_0 = 0U;
 331:Src/BLDC_controller.c ****   } else {
 332:Src/BLDC_controller.c ****     rtu_rst_0 = localDW->UnitDelay_DSTATE;
 457              		.loc 1 332 5 is_stmt 1 view .LVU128
 458              		.loc 1 332 15 is_stmt 0 view .LVU129
 459 0006 2288     		ldrh	r2, [r4]
 460              	.LVL42:
 461              	.L32:
 333:Src/BLDC_controller.c ****   }
 334:Src/BLDC_controller.c **** 
 335:Src/BLDC_controller.c ****   /* End of Switch: '<S30>/Switch1' */
 336:Src/BLDC_controller.c **** 
 337:Src/BLDC_controller.c ****   /* Sum: '<S29>/Sum1' */
 338:Src/BLDC_controller.c ****   *rty_cnt = (uint16_T)((uint32_T)rtu_inc + rtu_rst_0);
 462              		.loc 1 338 3 is_stmt 1 view .LVU130
 463              		.loc 1 338 14 is_stmt 0 view .LVU131
 464 0008 1044     		add	r0, r0, r2
 465              	.LVL43:
 466              		.loc 1 338 14 view .LVU132
 467 000a 80B2     		uxth	r0, r0
 468              		.loc 1 338 12 view .LVU133
 469 000c 1880     		strh	r0, [r3]	@ movhi
ARM GAS  /tmp/ccVzdWer.s 			page 15


 339:Src/BLDC_controller.c **** 
 340:Src/BLDC_controller.c ****   /* MinMax: '<S29>/MinMax' */
 341:Src/BLDC_controller.c ****   if (*rty_cnt < rtu_max) {
 470              		.loc 1 341 3 is_stmt 1 view .LVU134
 471              		.loc 1 341 6 is_stmt 0 view .LVU135
 472 000e 8842     		cmp	r0, r1
 473 0010 04D2     		bcs	.L33
 342:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S30>/UnitDelay' */
 343:Src/BLDC_controller.c ****     localDW->UnitDelay_DSTATE = *rty_cnt;
 474              		.loc 1 343 5 is_stmt 1 view .LVU136
 475              		.loc 1 343 31 is_stmt 0 view .LVU137
 476 0012 2080     		strh	r0, [r4]	@ movhi
 477              	.L31:
 344:Src/BLDC_controller.c ****   } else {
 345:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S30>/UnitDelay' */
 346:Src/BLDC_controller.c ****     localDW->UnitDelay_DSTATE = rtu_max;
 347:Src/BLDC_controller.c ****   }
 348:Src/BLDC_controller.c **** 
 349:Src/BLDC_controller.c ****   /* End of MinMax: '<S29>/MinMax' */
 350:Src/BLDC_controller.c **** }
 478              		.loc 1 350 1 view .LVU138
 479 0014 10BC     		pop	{r4}
 480              	.LCFI3:
 481              		.cfi_remember_state
 482              		.cfi_restore 4
 483              		.cfi_def_cfa_offset 0
 484              	.LVL44:
 485              		.loc 1 350 1 view .LVU139
 486 0016 7047     		bx	lr
 487              	.LVL45:
 488              	.L35:
 489              	.LCFI4:
 490              		.cfi_restore_state
 330:Src/BLDC_controller.c ****   } else {
 491              		.loc 1 330 15 view .LVU140
 492 0018 0022     		movs	r2, #0
 493              	.LVL46:
 330:Src/BLDC_controller.c ****   } else {
 494              		.loc 1 330 15 view .LVU141
 495 001a F5E7     		b	.L32
 496              	.LVL47:
 497              	.L33:
 346:Src/BLDC_controller.c ****   }
 498              		.loc 1 346 5 is_stmt 1 view .LVU142
 346:Src/BLDC_controller.c ****   }
 499              		.loc 1 346 31 is_stmt 0 view .LVU143
 500 001c 2180     		strh	r1, [r4]	@ movhi
 501              		.loc 1 350 1 view .LVU144
 502 001e F9E7     		b	.L31
 503              		.cfi_endproc
 504              	.LFE8:
 506              		.section	.text.either_edge,"ax",%progbits
 507              		.align	1
 508              		.global	either_edge
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
ARM GAS  /tmp/ccVzdWer.s 			page 16


 512              		.fpu softvfp
 514              	either_edge:
 515              	.LVL48:
 516              	.LFB9:
 351:Src/BLDC_controller.c **** 
 352:Src/BLDC_controller.c **** /*
 353:Src/BLDC_controller.c ****  * Output and update for atomic system:
 354:Src/BLDC_controller.c ****  *    '<S21>/either_edge'
 355:Src/BLDC_controller.c ****  *    '<S20>/either_edge'
 356:Src/BLDC_controller.c ****  */
 357:Src/BLDC_controller.c **** void either_edge(boolean_T rtu_u, boolean_T *rty_y, DW_either_edge *localDW)
 358:Src/BLDC_controller.c **** {
 517              		.loc 1 358 1 is_stmt 1 view -0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 359:Src/BLDC_controller.c ****   /* RelationalOperator: '<S26>/Relational Operator' incorporates:
 360:Src/BLDC_controller.c ****    *  UnitDelay: '<S26>/UnitDelay'
 361:Src/BLDC_controller.c ****    */
 362:Src/BLDC_controller.c ****   *rty_y = (rtu_u != localDW->UnitDelay_DSTATE);
 522              		.loc 1 362 3 view .LVU146
 523              		.loc 1 362 29 is_stmt 0 view .LVU147
 524 0000 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 525              		.loc 1 362 19 view .LVU148
 526 0002 1B1A     		subs	r3, r3, r0
 527 0004 18BF     		it	ne
 528 0006 0123     		movne	r3, #1
 529              		.loc 1 362 10 view .LVU149
 530 0008 0B70     		strb	r3, [r1]
 363:Src/BLDC_controller.c **** 
 364:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S26>/UnitDelay' */
 365:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = rtu_u;
 531              		.loc 1 365 3 is_stmt 1 view .LVU150
 532              		.loc 1 365 29 is_stmt 0 view .LVU151
 533 000a 1070     		strb	r0, [r2]
 366:Src/BLDC_controller.c **** }
 534              		.loc 1 366 1 view .LVU152
 535 000c 7047     		bx	lr
 536              		.cfi_endproc
 537              	.LFE9:
 539              		.section	.text.Debounce_Filter_Init,"ax",%progbits
 540              		.align	1
 541              		.global	Debounce_Filter_Init
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu softvfp
 547              	Debounce_Filter_Init:
 548              	.LVL49:
 549              	.LFB10:
 367:Src/BLDC_controller.c **** 
 368:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S20>/Debounce_Filter' */
 369:Src/BLDC_controller.c **** void Debounce_Filter_Init(DW_Debounce_Filter *localDW)
 370:Src/BLDC_controller.c **** {
 550              		.loc 1 370 1 is_stmt 1 view -0
 551              		.cfi_startproc
ARM GAS  /tmp/ccVzdWer.s 			page 17


 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		.loc 1 370 1 is_stmt 0 view .LVU154
 555 0000 10B5     		push	{r4, lr}
 556              	.LCFI5:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 4, -8
 559              		.cfi_offset 14, -4
 560 0002 0446     		mov	r4, r0
 371:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S21>/Qualification' */
 372:Src/BLDC_controller.c **** 
 373:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S25>/Counter' */
 374:Src/BLDC_controller.c ****   Counter_b_Init(&localDW->Counter_n1, 0U);
 561              		.loc 1 374 3 is_stmt 1 view .LVU155
 562 0004 0021     		movs	r1, #0
 563 0006 0430     		adds	r0, r0, #4
 564              	.LVL50:
 565              		.loc 1 374 3 is_stmt 0 view .LVU156
 566 0008 FFF7FEFF 		bl	Counter_b_Init
 567              	.LVL51:
 375:Src/BLDC_controller.c **** 
 376:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S25>/Counter' */
 377:Src/BLDC_controller.c **** 
 378:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S21>/Qualification' */
 379:Src/BLDC_controller.c **** 
 380:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S21>/Dequalification' */
 381:Src/BLDC_controller.c **** 
 382:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S24>/Counter' */
 383:Src/BLDC_controller.c ****   Counter_b_Init(&localDW->Counter_e, 0U);
 568              		.loc 1 383 3 is_stmt 1 view .LVU157
 569 000c 0021     		movs	r1, #0
 570 000e A01C     		adds	r0, r4, #2
 571 0010 FFF7FEFF 		bl	Counter_b_Init
 572              	.LVL52:
 384:Src/BLDC_controller.c **** 
 385:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S24>/Counter' */
 386:Src/BLDC_controller.c **** 
 387:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S21>/Dequalification' */
 388:Src/BLDC_controller.c **** }
 573              		.loc 1 388 1 is_stmt 0 view .LVU158
 574 0014 10BD     		pop	{r4, pc}
 575              		.loc 1 388 1 view .LVU159
 576              		.cfi_endproc
 577              	.LFE10:
 579              		.section	.text.Debounce_Filter,"ax",%progbits
 580              		.align	1
 581              		.global	Debounce_Filter
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu softvfp
 587              	Debounce_Filter:
 588              	.LVL53:
 589              	.LFB11:
 389:Src/BLDC_controller.c **** 
 390:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S20>/Debounce_Filter' */
 391:Src/BLDC_controller.c **** void Debounce_Filter(boolean_T rtu_u, uint16_T rtu_tAcv, uint16_T rtu_tDeacv,
ARM GAS  /tmp/ccVzdWer.s 			page 18


 392:Src/BLDC_controller.c ****                      boolean_T *rty_y, DW_Debounce_Filter *localDW)
 393:Src/BLDC_controller.c **** {
 590              		.loc 1 393 1 is_stmt 1 view -0
 591              		.cfi_startproc
 592              		@ args = 4, pretend = 0, frame = 8
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              		.loc 1 393 1 is_stmt 0 view .LVU161
 595 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 596              	.LCFI6:
 597              		.cfi_def_cfa_offset 24
 598              		.cfi_offset 4, -24
 599              		.cfi_offset 5, -20
 600              		.cfi_offset 6, -16
 601              		.cfi_offset 7, -12
 602              		.cfi_offset 8, -8
 603              		.cfi_offset 14, -4
 604 0004 84B0     		sub	sp, sp, #16
 605              	.LCFI7:
 606              		.cfi_def_cfa_offset 40
 607 0006 0646     		mov	r6, r0
 608 0008 8846     		mov	r8, r1
 609 000a 1746     		mov	r7, r2
 610 000c 1D46     		mov	r5, r3
 611 000e 0A9C     		ldr	r4, [sp, #40]
 394:Src/BLDC_controller.c ****   uint16_T rtb_Sum1_n;
 612              		.loc 1 394 3 is_stmt 1 view .LVU162
 395:Src/BLDC_controller.c ****   boolean_T rtb_RelationalOperator_g;
 613              		.loc 1 395 3 view .LVU163
 396:Src/BLDC_controller.c **** 
 397:Src/BLDC_controller.c ****   /* Outputs for Atomic SubSystem: '<S21>/either_edge' */
 398:Src/BLDC_controller.c ****   either_edge(rtu_u, &rtb_RelationalOperator_g, &localDW->either_edge_p);
 614              		.loc 1 398 3 view .LVU164
 615 0010 2246     		mov	r2, r4
 616              	.LVL54:
 617              		.loc 1 398 3 is_stmt 0 view .LVU165
 618 0012 0DF10D01 		add	r1, sp, #13
 619              	.LVL55:
 620              		.loc 1 398 3 view .LVU166
 621 0016 FFF7FEFF 		bl	either_edge
 622              	.LVL56:
 399:Src/BLDC_controller.c **** 
 400:Src/BLDC_controller.c ****   /* End of Outputs for SubSystem: '<S21>/either_edge' */
 401:Src/BLDC_controller.c **** 
 402:Src/BLDC_controller.c ****   /* If: '<S21>/If2' incorporates:
 403:Src/BLDC_controller.c ****    *  Constant: '<S24>/Constant6'
 404:Src/BLDC_controller.c ****    *  Constant: '<S25>/Constant6'
 405:Src/BLDC_controller.c ****    *  Inport: '<S23>/yPrev'
 406:Src/BLDC_controller.c ****    *  Logic: '<S21>/Logical Operator1'
 407:Src/BLDC_controller.c ****    *  Logic: '<S21>/Logical Operator2'
 408:Src/BLDC_controller.c ****    *  Logic: '<S21>/Logical Operator3'
 409:Src/BLDC_controller.c ****    *  Logic: '<S21>/Logical Operator4'
 410:Src/BLDC_controller.c ****    *  UnitDelay: '<S21>/UnitDelay'
 411:Src/BLDC_controller.c ****    */
 412:Src/BLDC_controller.c ****   if (rtu_u && (!localDW->UnitDelay_DSTATE)) {
 623              		.loc 1 412 3 is_stmt 1 view .LVU167
 624              		.loc 1 412 6 is_stmt 0 view .LVU168
 625 001a 0EB1     		cbz	r6, .L41
ARM GAS  /tmp/ccVzdWer.s 			page 19


 626              		.loc 1 412 25 discriminator 1 view .LVU169
 627 001c A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 628              		.loc 1 412 13 discriminator 1 view .LVU170
 629 001e 4BB1     		cbz	r3, .L51
 630              	.L41:
 413:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S21>/Qualification' incorporates:
 414:Src/BLDC_controller.c ****      *  ActionPort: '<S25>/Action Port'
 415:Src/BLDC_controller.c ****      */
 416:Src/BLDC_controller.c **** 
 417:Src/BLDC_controller.c ****     /* Outputs for Atomic SubSystem: '<S25>/Counter' */
 418:Src/BLDC_controller.c ****     Counter_n(1U, rtu_tAcv, rtb_RelationalOperator_g, &rtb_Sum1_n,
 419:Src/BLDC_controller.c ****               &localDW->Counter_n1);
 420:Src/BLDC_controller.c **** 
 421:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S25>/Counter' */
 422:Src/BLDC_controller.c **** 
 423:Src/BLDC_controller.c ****     /* Switch: '<S25>/Switch2' incorporates:
 424:Src/BLDC_controller.c ****      *  Constant: '<S25>/Constant6'
 425:Src/BLDC_controller.c ****      *  RelationalOperator: '<S25>/Relational Operator2'
 426:Src/BLDC_controller.c ****      */
 427:Src/BLDC_controller.c ****     *rty_y = ((rtb_Sum1_n > rtu_tAcv) || localDW->UnitDelay_DSTATE);
 428:Src/BLDC_controller.c **** 
 429:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S21>/Qualification' */
 430:Src/BLDC_controller.c ****   } else if ((!rtu_u) && localDW->UnitDelay_DSTATE) {
 631              		.loc 1 430 10 is_stmt 1 view .LVU171
 632              		.loc 1 430 13 is_stmt 0 view .LVU172
 633 0020 0EB9     		cbnz	r6, .L44
 634              		.loc 1 430 33 discriminator 1 view .LVU173
 635 0022 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 636              		.loc 1 430 23 discriminator 1 view .LVU174
 637 0024 EBB9     		cbnz	r3, .L52
 638              	.L44:
 431:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S21>/Dequalification' incorporates:
 432:Src/BLDC_controller.c ****      *  ActionPort: '<S24>/Action Port'
 433:Src/BLDC_controller.c ****      */
 434:Src/BLDC_controller.c **** 
 435:Src/BLDC_controller.c ****     /* Outputs for Atomic SubSystem: '<S24>/Counter' */
 436:Src/BLDC_controller.c ****     Counter_n(1U, rtu_tDeacv, rtb_RelationalOperator_g, &rtb_Sum1_n,
 437:Src/BLDC_controller.c ****               &localDW->Counter_e);
 438:Src/BLDC_controller.c **** 
 439:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S24>/Counter' */
 440:Src/BLDC_controller.c **** 
 441:Src/BLDC_controller.c ****     /* Switch: '<S24>/Switch2' incorporates:
 442:Src/BLDC_controller.c ****      *  Constant: '<S24>/Constant6'
 443:Src/BLDC_controller.c ****      *  RelationalOperator: '<S24>/Relational Operator2'
 444:Src/BLDC_controller.c ****      */
 445:Src/BLDC_controller.c ****     *rty_y = ((!(rtb_Sum1_n > rtu_tDeacv)) && localDW->UnitDelay_DSTATE);
 446:Src/BLDC_controller.c **** 
 447:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S21>/Dequalification' */
 448:Src/BLDC_controller.c ****   } else {
 449:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S21>/Default' incorporates:
 450:Src/BLDC_controller.c ****      *  ActionPort: '<S23>/Action Port'
 451:Src/BLDC_controller.c ****      */
 452:Src/BLDC_controller.c ****     *rty_y = localDW->UnitDelay_DSTATE;
 639              		.loc 1 452 5 is_stmt 1 view .LVU175
 640              		.loc 1 452 21 is_stmt 0 view .LVU176
 641 0026 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 642              		.loc 1 452 12 view .LVU177
ARM GAS  /tmp/ccVzdWer.s 			page 20


 643 0028 2B70     		strb	r3, [r5]
 644              	.L43:
 453:Src/BLDC_controller.c **** 
 454:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S21>/Default' */
 455:Src/BLDC_controller.c ****   }
 456:Src/BLDC_controller.c **** 
 457:Src/BLDC_controller.c ****   /* End of If: '<S21>/If2' */
 458:Src/BLDC_controller.c **** 
 459:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S21>/UnitDelay' */
 460:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = *rty_y;
 645              		.loc 1 460 3 is_stmt 1 view .LVU178
 646              		.loc 1 460 31 is_stmt 0 view .LVU179
 647 002a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 648              		.loc 1 460 29 view .LVU180
 649 002c A371     		strb	r3, [r4, #6]
 461:Src/BLDC_controller.c **** }
 650              		.loc 1 461 1 view .LVU181
 651 002e 04B0     		add	sp, sp, #16
 652              	.LCFI8:
 653              		.cfi_remember_state
 654              		.cfi_def_cfa_offset 24
 655              		@ sp needed
 656 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 657              	.LVL57:
 658              	.L51:
 659              	.LCFI9:
 660              		.cfi_restore_state
 418:Src/BLDC_controller.c ****               &localDW->Counter_n1);
 661              		.loc 1 418 5 is_stmt 1 view .LVU182
 662 0034 231D     		adds	r3, r4, #4
 663 0036 0093     		str	r3, [sp]
 664 0038 0DF10E03 		add	r3, sp, #14
 665 003c 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
 666 0040 4146     		mov	r1, r8
 667 0042 0120     		movs	r0, #1
 668 0044 FFF7FEFF 		bl	Counter_n
 669              	.LVL58:
 427:Src/BLDC_controller.c **** 
 670              		.loc 1 427 5 view .LVU183
 427:Src/BLDC_controller.c **** 
 671              		.loc 1 427 27 is_stmt 0 view .LVU184
 672 0048 BDF80E30 		ldrh	r3, [sp, #14]
 427:Src/BLDC_controller.c **** 
 673              		.loc 1 427 39 view .LVU185
 674 004c 4345     		cmp	r3, r8
 675 004e 03D8     		bhi	.L46
 427:Src/BLDC_controller.c **** 
 676              		.loc 1 427 49 discriminator 2 view .LVU186
 677 0050 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 427:Src/BLDC_controller.c **** 
 678              		.loc 1 427 39 discriminator 2 view .LVU187
 679 0052 23B1     		cbz	r3, .L47
 427:Src/BLDC_controller.c **** 
 680              		.loc 1 427 39 view .LVU188
 681 0054 0123     		movs	r3, #1
 682 0056 00E0     		b	.L42
 683              	.L46:
ARM GAS  /tmp/ccVzdWer.s 			page 21


 684 0058 0123     		movs	r3, #1
 685              	.L42:
 427:Src/BLDC_controller.c **** 
 686              		.loc 1 427 12 discriminator 6 view .LVU189
 687 005a 2B70     		strb	r3, [r5]
 688 005c E5E7     		b	.L43
 689              	.L47:
 427:Src/BLDC_controller.c **** 
 690              		.loc 1 427 39 view .LVU190
 691 005e 0023     		movs	r3, #0
 692 0060 FBE7     		b	.L42
 693              	.L52:
 436:Src/BLDC_controller.c ****               &localDW->Counter_e);
 694              		.loc 1 436 5 is_stmt 1 view .LVU191
 695 0062 A31C     		adds	r3, r4, #2
 696 0064 0093     		str	r3, [sp]
 697 0066 0DF10E03 		add	r3, sp, #14
 698 006a 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
 699 006e 3946     		mov	r1, r7
 700 0070 0120     		movs	r0, #1
 701 0072 FFF7FEFF 		bl	Counter_n
 702              	.LVL59:
 445:Src/BLDC_controller.c **** 
 703              		.loc 1 445 5 view .LVU192
 445:Src/BLDC_controller.c **** 
 704              		.loc 1 445 16 is_stmt 0 view .LVU193
 705 0076 BDF80E30 		ldrh	r3, [sp, #14]
 445:Src/BLDC_controller.c **** 
 706              		.loc 1 445 44 view .LVU194
 707 007a BB42     		cmp	r3, r7
 708 007c 03D8     		bhi	.L48
 445:Src/BLDC_controller.c **** 
 709              		.loc 1 445 54 discriminator 1 view .LVU195
 710 007e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 445:Src/BLDC_controller.c **** 
 711              		.loc 1 445 44 discriminator 1 view .LVU196
 712 0080 13B1     		cbz	r3, .L45
 445:Src/BLDC_controller.c **** 
 713              		.loc 1 445 44 view .LVU197
 714 0082 0123     		movs	r3, #1
 715 0084 00E0     		b	.L45
 716              	.L48:
 717 0086 0023     		movs	r3, #0
 718              	.L45:
 445:Src/BLDC_controller.c **** 
 719              		.loc 1 445 12 discriminator 6 view .LVU198
 720 0088 2B70     		strb	r3, [r5]
 721 008a CEE7     		b	.L43
 722              		.cfi_endproc
 723              	.LFE11:
 725              		.section	.text.I_backCalc_fixdt_Init,"ax",%progbits
 726              		.align	1
 727              		.global	I_backCalc_fixdt_Init
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu softvfp
ARM GAS  /tmp/ccVzdWer.s 			page 22


 733              	I_backCalc_fixdt_Init:
 734              	.LVL60:
 735              	.LFB12:
 462:Src/BLDC_controller.c **** 
 463:Src/BLDC_controller.c **** /*
 464:Src/BLDC_controller.c ****  * System initialize for atomic system:
 465:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt'
 466:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt1'
 467:Src/BLDC_controller.c ****  *    '<S82>/I_backCalc_fixdt'
 468:Src/BLDC_controller.c ****  */
 469:Src/BLDC_controller.c **** void I_backCalc_fixdt_Init(DW_I_backCalc_fixdt *localDW, int32_T rtp_yInit)
 470:Src/BLDC_controller.c **** {
 736              		.loc 1 470 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 471:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S90>/UnitDelay' */
 472:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE_m = rtp_yInit;
 741              		.loc 1 472 3 view .LVU200
 742              		.loc 1 472 31 is_stmt 0 view .LVU201
 743 0000 4160     		str	r1, [r0, #4]
 473:Src/BLDC_controller.c **** }
 744              		.loc 1 473 1 view .LVU202
 745 0002 7047     		bx	lr
 746              		.cfi_endproc
 747              	.LFE12:
 749              		.section	.text.I_backCalc_fixdt_Reset,"ax",%progbits
 750              		.align	1
 751              		.global	I_backCalc_fixdt_Reset
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 755              		.fpu softvfp
 757              	I_backCalc_fixdt_Reset:
 758              	.LVL61:
 759              	.LFB13:
 474:Src/BLDC_controller.c **** 
 475:Src/BLDC_controller.c **** /*
 476:Src/BLDC_controller.c ****  * System reset for atomic system:
 477:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt'
 478:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt1'
 479:Src/BLDC_controller.c ****  *    '<S82>/I_backCalc_fixdt'
 480:Src/BLDC_controller.c ****  */
 481:Src/BLDC_controller.c **** void I_backCalc_fixdt_Reset(DW_I_backCalc_fixdt *localDW, int32_T rtp_yInit)
 482:Src/BLDC_controller.c **** {
 760              		.loc 1 482 1 is_stmt 1 view -0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 483:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S88>/UnitDelay' */
 484:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = 0;
 765              		.loc 1 484 3 view .LVU204
 766              		.loc 1 484 29 is_stmt 0 view .LVU205
 767 0000 0023     		movs	r3, #0
 768 0002 0360     		str	r3, [r0]
ARM GAS  /tmp/ccVzdWer.s 			page 23


 485:Src/BLDC_controller.c **** 
 486:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S90>/UnitDelay' */
 487:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE_m = rtp_yInit;
 769              		.loc 1 487 3 is_stmt 1 view .LVU206
 770              		.loc 1 487 31 is_stmt 0 view .LVU207
 771 0004 4160     		str	r1, [r0, #4]
 488:Src/BLDC_controller.c **** }
 772              		.loc 1 488 1 view .LVU208
 773 0006 7047     		bx	lr
 774              		.cfi_endproc
 775              	.LFE13:
 777              		.section	.text.I_backCalc_fixdt,"ax",%progbits
 778              		.align	1
 779              		.global	I_backCalc_fixdt
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu softvfp
 785              	I_backCalc_fixdt:
 786              	.LVL62:
 787              	.LFB14:
 489:Src/BLDC_controller.c **** 
 490:Src/BLDC_controller.c **** /*
 491:Src/BLDC_controller.c ****  * Output and update for atomic system:
 492:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt'
 493:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt1'
 494:Src/BLDC_controller.c ****  *    '<S82>/I_backCalc_fixdt'
 495:Src/BLDC_controller.c ****  */
 496:Src/BLDC_controller.c **** void I_backCalc_fixdt(int16_T rtu_err, uint16_T rtu_I, uint16_T rtu_Kb, int16_T
 497:Src/BLDC_controller.c ****                       rtu_satMax, int16_T rtu_satMin, int16_T *rty_out,
 498:Src/BLDC_controller.c ****                       DW_I_backCalc_fixdt *localDW)
 499:Src/BLDC_controller.c **** {
 788              		.loc 1 499 1 is_stmt 1 view -0
 789              		.cfi_startproc
 790              		@ args = 12, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 793              		.loc 1 499 1 is_stmt 0 view .LVU210
 794 0000 F0B4     		push	{r4, r5, r6, r7}
 795              	.LCFI10:
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 4, -16
 798              		.cfi_offset 5, -12
 799              		.cfi_offset 6, -8
 800              		.cfi_offset 7, -4
 801 0002 BDF91070 		ldrsh	r7, [sp, #16]
 802 0006 059D     		ldr	r5, [sp, #20]
 803 0008 069C     		ldr	r4, [sp, #24]
 500:Src/BLDC_controller.c ****   int32_T rtb_Sum1_o;
 804              		.loc 1 500 3 is_stmt 1 view .LVU211
 501:Src/BLDC_controller.c ****   int16_T rtb_DataTypeConversion1_gf;
 805              		.loc 1 501 3 view .LVU212
 502:Src/BLDC_controller.c **** 
 503:Src/BLDC_controller.c ****   /* Sum: '<S88>/Sum2' incorporates:
 504:Src/BLDC_controller.c ****    *  Product: '<S88>/Divide2'
 505:Src/BLDC_controller.c ****    *  UnitDelay: '<S88>/UnitDelay'
 506:Src/BLDC_controller.c ****    */
ARM GAS  /tmp/ccVzdWer.s 			page 24


 507:Src/BLDC_controller.c ****   rtb_Sum1_o = (rtu_err * rtu_I) >> 4;
 806              		.loc 1 507 3 view .LVU213
 807              		.loc 1 507 25 is_stmt 0 view .LVU214
 808 000a 01FB00F1 		mul	r1, r1, r0
 809              	.LVL63:
 508:Src/BLDC_controller.c ****   if ((rtb_Sum1_o < 0) && (localDW->UnitDelay_DSTATE < MIN_int32_T - rtb_Sum1_o))
 810              		.loc 1 508 3 is_stmt 1 view .LVU215
 811              		.loc 1 508 6 is_stmt 0 view .LVU216
 812 000e 0911     		asrs	r1, r1, #4
 813              	.LVL64:
 814              		.loc 1 508 6 view .LVU217
 815 0010 1AD4     		bmi	.L65
 816              	.LVL65:
 817              	.L56:
 509:Src/BLDC_controller.c ****   {
 510:Src/BLDC_controller.c ****     rtb_Sum1_o = MIN_int32_T;
 511:Src/BLDC_controller.c ****   } else if ((rtb_Sum1_o > 0) && (localDW->UnitDelay_DSTATE > MAX_int32_T
 818              		.loc 1 511 10 is_stmt 1 view .LVU218
 819              		.loc 1 511 13 is_stmt 0 view .LVU219
 820 0012 0029     		cmp	r1, #0
 821 0014 05DD     		ble	.L58
 822              		.loc 1 511 42 discriminator 1 view .LVU220
 823 0016 2668     		ldr	r6, [r4]
 512:Src/BLDC_controller.c ****               - rtb_Sum1_o)) {
 824              		.loc 1 512 15 discriminator 1 view .LVU221
 825 0018 6FF00040 		mvn	r0, #-2147483648
 826 001c 401A     		subs	r0, r0, r1
 511:Src/BLDC_controller.c ****               - rtb_Sum1_o)) {
 827              		.loc 1 511 31 discriminator 1 view .LVU222
 828 001e 8642     		cmp	r6, r0
 829 0020 1ADC     		bgt	.L63
 830              	.L58:
 513:Src/BLDC_controller.c ****     rtb_Sum1_o = MAX_int32_T;
 514:Src/BLDC_controller.c ****   } else {
 515:Src/BLDC_controller.c ****     rtb_Sum1_o += localDW->UnitDelay_DSTATE;
 831              		.loc 1 515 5 is_stmt 1 view .LVU223
 832              		.loc 1 515 26 is_stmt 0 view .LVU224
 833 0022 2068     		ldr	r0, [r4]
 834              		.loc 1 515 16 view .LVU225
 835 0024 0844     		add	r0, r0, r1
 836              	.LVL66:
 837              	.L57:
 516:Src/BLDC_controller.c ****   }
 517:Src/BLDC_controller.c **** 
 518:Src/BLDC_controller.c ****   /* End of Sum: '<S88>/Sum2' */
 519:Src/BLDC_controller.c **** 
 520:Src/BLDC_controller.c ****   /* Sum: '<S90>/Sum1' incorporates:
 521:Src/BLDC_controller.c ****    *  UnitDelay: '<S90>/UnitDelay'
 522:Src/BLDC_controller.c ****    */
 523:Src/BLDC_controller.c ****   rtb_Sum1_o += localDW->UnitDelay_DSTATE_m;
 838              		.loc 1 523 3 is_stmt 1 view .LVU226
 839              		.loc 1 523 24 is_stmt 0 view .LVU227
 840 0026 6168     		ldr	r1, [r4, #4]
 841              		.loc 1 523 14 view .LVU228
 842 0028 0144     		add	r1, r1, r0
 843              	.LVL67:
 524:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 25


 525:Src/BLDC_controller.c ****   /* DataTypeConversion: '<S90>/Data Type Conversion1' */
 526:Src/BLDC_controller.c ****   rtb_DataTypeConversion1_gf = (int16_T)(rtb_Sum1_o >> 12);
 844              		.loc 1 526 3 is_stmt 1 view .LVU229
 845              		.loc 1 526 53 is_stmt 0 view .LVU230
 846 002a 0E13     		asrs	r6, r1, #12
 847              		.loc 1 526 30 view .LVU231
 848 002c 41F30F30 		sbfx	r0, r1, #12, #16
 849              	.LVL68:
 527:Src/BLDC_controller.c **** 
 528:Src/BLDC_controller.c ****   /* Switch: '<S91>/Switch2' incorporates:
 529:Src/BLDC_controller.c ****    *  RelationalOperator: '<S91>/LowerRelop1'
 530:Src/BLDC_controller.c ****    *  RelationalOperator: '<S91>/UpperRelop'
 531:Src/BLDC_controller.c ****    *  Switch: '<S91>/Switch'
 532:Src/BLDC_controller.c ****    */
 533:Src/BLDC_controller.c ****   if (rtb_DataTypeConversion1_gf > rtu_satMax) {
 850              		.loc 1 533 3 is_stmt 1 view .LVU232
 851              		.loc 1 533 6 is_stmt 0 view .LVU233
 852 0030 9842     		cmp	r0, r3
 853 0032 14DD     		ble	.L59
 534:Src/BLDC_controller.c ****     *rty_out = rtu_satMax;
 854              		.loc 1 534 5 is_stmt 1 view .LVU234
 855              		.loc 1 534 14 is_stmt 0 view .LVU235
 856 0034 2B80     		strh	r3, [r5]	@ movhi
 857              	.L60:
 535:Src/BLDC_controller.c ****   } else if (rtb_DataTypeConversion1_gf < rtu_satMin) {
 536:Src/BLDC_controller.c ****     /* Switch: '<S91>/Switch' */
 537:Src/BLDC_controller.c ****     *rty_out = rtu_satMin;
 538:Src/BLDC_controller.c ****   } else {
 539:Src/BLDC_controller.c ****     *rty_out = rtb_DataTypeConversion1_gf;
 540:Src/BLDC_controller.c ****   }
 541:Src/BLDC_controller.c **** 
 542:Src/BLDC_controller.c ****   /* End of Switch: '<S91>/Switch2' */
 543:Src/BLDC_controller.c **** 
 544:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S88>/UnitDelay' incorporates:
 545:Src/BLDC_controller.c ****    *  Product: '<S88>/Divide1'
 546:Src/BLDC_controller.c ****    *  Sum: '<S88>/Sum3'
 547:Src/BLDC_controller.c ****    */
 548:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = (int16_T)(*rty_out - rtb_DataTypeConversion1_gf) *
 858              		.loc 1 548 3 is_stmt 1 view .LVU236
 859              		.loc 1 548 41 is_stmt 0 view .LVU237
 860 0036 2B88     		ldrh	r3, [r5]
 861              	.LVL69:
 862              		.loc 1 548 50 view .LVU238
 863 0038 9B1B     		subs	r3, r3, r6
 864              		.loc 1 548 31 view .LVU239
 865 003a 1BB2     		sxth	r3, r3
 866              		.loc 1 548 80 view .LVU240
 867 003c 03FB02F2 		mul	r2, r3, r2
 868              	.LVL70:
 869              		.loc 1 548 29 view .LVU241
 870 0040 2260     		str	r2, [r4]
 549:Src/BLDC_controller.c ****     rtu_Kb;
 550:Src/BLDC_controller.c **** 
 551:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S90>/UnitDelay' */
 552:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE_m = rtb_Sum1_o;
 871              		.loc 1 552 3 is_stmt 1 view .LVU242
 872              		.loc 1 552 31 is_stmt 0 view .LVU243
ARM GAS  /tmp/ccVzdWer.s 			page 26


 873 0042 6160     		str	r1, [r4, #4]
 553:Src/BLDC_controller.c **** }
 874              		.loc 1 553 1 view .LVU244
 875 0044 F0BC     		pop	{r4, r5, r6, r7}
 876              	.LCFI11:
 877              		.cfi_remember_state
 878              		.cfi_restore 7
 879              		.cfi_restore 6
 880              		.cfi_restore 5
 881              		.cfi_restore 4
 882              		.cfi_def_cfa_offset 0
 883              	.LVL71:
 884              		.loc 1 553 1 view .LVU245
 885 0046 7047     		bx	lr
 886              	.LVL72:
 887              	.L65:
 888              	.LCFI12:
 889              		.cfi_restore_state
 508:Src/BLDC_controller.c ****   {
 890              		.loc 1 508 35 discriminator 1 view .LVU246
 891 0048 2668     		ldr	r6, [r4]
 508:Src/BLDC_controller.c ****   {
 892              		.loc 1 508 68 discriminator 1 view .LVU247
 893 004a C1F10040 		rsb	r0, r1, #-2147483648
 894              	.LVL73:
 508:Src/BLDC_controller.c ****   {
 895              		.loc 1 508 24 discriminator 1 view .LVU248
 896 004e 8642     		cmp	r6, r0
 897 0050 DFDA     		bge	.L56
 510:Src/BLDC_controller.c ****   } else if ((rtb_Sum1_o > 0) && (localDW->UnitDelay_DSTATE > MAX_int32_T
 898              		.loc 1 510 16 view .LVU249
 899 0052 4FF00040 		mov	r0, #-2147483648
 900 0056 E6E7     		b	.L57
 901              	.L63:
 513:Src/BLDC_controller.c ****   } else {
 902              		.loc 1 513 16 view .LVU250
 903 0058 6FF00040 		mvn	r0, #-2147483648
 904 005c E3E7     		b	.L57
 905              	.LVL74:
 906              	.L59:
 535:Src/BLDC_controller.c ****     /* Switch: '<S91>/Switch' */
 907              		.loc 1 535 10 is_stmt 1 view .LVU251
 535:Src/BLDC_controller.c ****     /* Switch: '<S91>/Switch' */
 908              		.loc 1 535 13 is_stmt 0 view .LVU252
 909 005e B842     		cmp	r0, r7
 910 0060 01DA     		bge	.L61
 537:Src/BLDC_controller.c ****   } else {
 911              		.loc 1 537 5 is_stmt 1 view .LVU253
 537:Src/BLDC_controller.c ****   } else {
 912              		.loc 1 537 14 is_stmt 0 view .LVU254
 913 0062 2F80     		strh	r7, [r5]	@ movhi
 914 0064 E7E7     		b	.L60
 915              	.L61:
 539:Src/BLDC_controller.c ****   }
 916              		.loc 1 539 5 is_stmt 1 view .LVU255
 539:Src/BLDC_controller.c ****   }
 917              		.loc 1 539 14 is_stmt 0 view .LVU256
ARM GAS  /tmp/ccVzdWer.s 			page 27


 918 0066 2880     		strh	r0, [r5]	@ movhi
 919 0068 E5E7     		b	.L60
 920              		.cfi_endproc
 921              	.LFE14:
 923              		.section	.text.PI_clamp_fixdt_Init,"ax",%progbits
 924              		.align	1
 925              		.global	PI_clamp_fixdt_Init
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 929              		.fpu softvfp
 931              	PI_clamp_fixdt_Init:
 932              	.LVL75:
 933              	.LFB15:
 554:Src/BLDC_controller.c **** 
 555:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S63>/PI_clamp_fixdt' */
 556:Src/BLDC_controller.c **** void PI_clamp_fixdt_Init(DW_PI_clamp_fixdt *localDW)
 557:Src/BLDC_controller.c **** {
 934              		.loc 1 557 1 is_stmt 1 view -0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              		@ link register save eliminated.
 558:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S77>/Resettable Delay' */
 559:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 939              		.loc 1 559 3 view .LVU258
 940              		.loc 1 559 19 is_stmt 0 view .LVU259
 941 0000 0123     		movs	r3, #1
 942 0002 0371     		strb	r3, [r0, #4]
 560:Src/BLDC_controller.c **** }
 943              		.loc 1 560 1 view .LVU260
 944 0004 7047     		bx	lr
 945              		.cfi_endproc
 946              	.LFE15:
 948              		.section	.text.PI_clamp_fixdt_Reset,"ax",%progbits
 949              		.align	1
 950              		.global	PI_clamp_fixdt_Reset
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu softvfp
 956              	PI_clamp_fixdt_Reset:
 957              	.LVL76:
 958              	.LFB16:
 561:Src/BLDC_controller.c **** 
 562:Src/BLDC_controller.c **** /* System reset for atomic system: '<S63>/PI_clamp_fixdt' */
 563:Src/BLDC_controller.c **** void PI_clamp_fixdt_Reset(DW_PI_clamp_fixdt *localDW)
 564:Src/BLDC_controller.c **** {
 959              		.loc 1 564 1 is_stmt 1 view -0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 565:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S74>/UnitDelay1' */
 566:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = false;
 964              		.loc 1 566 3 view .LVU262
 965              		.loc 1 566 30 is_stmt 0 view .LVU263
ARM GAS  /tmp/ccVzdWer.s 			page 28


 966 0000 0023     		movs	r3, #0
 967 0002 4371     		strb	r3, [r0, #5]
 567:Src/BLDC_controller.c **** 
 568:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S77>/Resettable Delay' */
 569:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 968              		.loc 1 569 3 is_stmt 1 view .LVU264
 969              		.loc 1 569 19 is_stmt 0 view .LVU265
 970 0004 0123     		movs	r3, #1
 971 0006 0371     		strb	r3, [r0, #4]
 570:Src/BLDC_controller.c **** }
 972              		.loc 1 570 1 view .LVU266
 973 0008 7047     		bx	lr
 974              		.cfi_endproc
 975              	.LFE16:
 977              		.section	.text.PI_clamp_fixdt,"ax",%progbits
 978              		.align	1
 979              		.global	PI_clamp_fixdt
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 983              		.fpu softvfp
 985              	PI_clamp_fixdt:
 986              	.LVL77:
 987              	.LFB17:
 571:Src/BLDC_controller.c **** 
 572:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S63>/PI_clamp_fixdt' */
 573:Src/BLDC_controller.c **** void PI_clamp_fixdt(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I, int32_T
 574:Src/BLDC_controller.c ****                     rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 575:Src/BLDC_controller.c ****                     rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt
 576:Src/BLDC_controller.c ****                     *localDW)
 577:Src/BLDC_controller.c **** {
 988              		.loc 1 577 1 is_stmt 1 view -0
 989              		.cfi_startproc
 990              		@ args = 20, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              		.loc 1 577 1 is_stmt 0 view .LVU268
 993 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 994              	.LCFI13:
 995              		.cfi_def_cfa_offset 20
 996              		.cfi_offset 4, -20
 997              		.cfi_offset 5, -16
 998              		.cfi_offset 6, -12
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 BDF91460 		ldrsh	r6, [sp, #20]
 1002 0006 BDF91870 		ldrsh	r7, [sp, #24]
 1003 000a 079C     		ldr	r4, [sp, #28]
 1004 000c 099D     		ldr	r5, [sp, #36]
 578:Src/BLDC_controller.c ****   boolean_T rtb_LowerRelop1_c0;
 1005              		.loc 1 578 3 is_stmt 1 view .LVU269
 579:Src/BLDC_controller.c ****   boolean_T rtb_UpperRelop_f;
 1006              		.loc 1 579 3 view .LVU270
 580:Src/BLDC_controller.c ****   int32_T rtb_Sum1_p0;
 1007              		.loc 1 580 3 view .LVU271
 581:Src/BLDC_controller.c ****   int32_T q0;
 1008              		.loc 1 581 3 view .LVU272
 582:Src/BLDC_controller.c ****   int32_T tmp;
ARM GAS  /tmp/ccVzdWer.s 			page 29


 1009              		.loc 1 582 3 view .LVU273
 583:Src/BLDC_controller.c ****   int16_T tmp_0;
 1010              		.loc 1 583 3 view .LVU274
 584:Src/BLDC_controller.c **** 
 585:Src/BLDC_controller.c ****   /* Sum: '<S74>/Sum2' incorporates:
 586:Src/BLDC_controller.c ****    *  Product: '<S74>/Divide2'
 587:Src/BLDC_controller.c ****    */
 588:Src/BLDC_controller.c ****   q0 = rtu_err * rtu_I;
 1011              		.loc 1 588 3 view .LVU275
 1012              		.loc 1 588 6 is_stmt 0 view .LVU276
 1013 000e 02FB00F2 		mul	r2, r2, r0
 1014              	.LVL78:
 589:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1015              		.loc 1 589 3 is_stmt 1 view .LVU277
 1016              		.loc 1 589 6 is_stmt 0 view .LVU278
 1017 0012 002A     		cmp	r2, #0
 1018 0014 1DDB     		blt	.L95
 1019              	.L69:
 590:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 591:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1020              		.loc 1 591 10 is_stmt 1 view .LVU279
 1021              		.loc 1 591 13 is_stmt 0 view .LVU280
 1022 0016 002A     		cmp	r2, #0
 1023 0018 05DD     		ble	.L71
 1024              		.loc 1 591 57 discriminator 1 view .LVU281
 1025 001a 6FF0004E 		mvn	lr, #-2147483648
 1026 001e AEEB020E 		sub	lr, lr, r2
 1027              		.loc 1 591 23 discriminator 1 view .LVU282
 1028 0022 A645     		cmp	lr, r4
 1029 0024 1CDB     		blt	.L83
 1030              	.L71:
 592:Src/BLDC_controller.c ****     q0 = MAX_int32_T;
 593:Src/BLDC_controller.c ****   } else {
 594:Src/BLDC_controller.c ****     q0 += rtu_ext_limProt;
 1031              		.loc 1 594 5 is_stmt 1 view .LVU283
 1032              		.loc 1 594 8 is_stmt 0 view .LVU284
 1033 0026 2244     		add	r2, r2, r4
 1034              	.LVL79:
 1035              	.L70:
 595:Src/BLDC_controller.c ****   }
 596:Src/BLDC_controller.c **** 
 597:Src/BLDC_controller.c ****   /* Delay: '<S77>/Resettable Delay' */
 598:Src/BLDC_controller.c ****   if (localDW->icLoad != 0) {
 1036              		.loc 1 598 3 is_stmt 1 view .LVU285
 1037              		.loc 1 598 14 is_stmt 0 view .LVU286
 1038 0028 2C79     		ldrb	r4, [r5, #4]	@ zero_extendqisi2
 1039              		.loc 1 598 6 view .LVU287
 1040 002a 04B1     		cbz	r4, .L72
 599:Src/BLDC_controller.c ****     localDW->ResettableDelay_DSTATE = rtu_init;
 1041              		.loc 1 599 5 is_stmt 1 view .LVU288
 1042              		.loc 1 599 37 is_stmt 0 view .LVU289
 1043 002c 2B60     		str	r3, [r5]
 1044              	.L72:
 600:Src/BLDC_controller.c ****   }
 601:Src/BLDC_controller.c **** 
 602:Src/BLDC_controller.c ****   /* Switch: '<S74>/Switch1' incorporates:
 603:Src/BLDC_controller.c ****    *  Constant: '<S74>/Constant'
ARM GAS  /tmp/ccVzdWer.s 			page 30


 604:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum2'
 605:Src/BLDC_controller.c ****    *  UnitDelay: '<S74>/UnitDelay1'
 606:Src/BLDC_controller.c ****    */
 607:Src/BLDC_controller.c ****   if (localDW->UnitDelay1_DSTATE) {
 1045              		.loc 1 607 3 is_stmt 1 view .LVU290
 1046              		.loc 1 607 14 is_stmt 0 view .LVU291
 1047 002e 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 1048              	.LVL80:
 1049              		.loc 1 607 6 view .LVU292
 1050 0030 CBB1     		cbz	r3, .L84
 608:Src/BLDC_controller.c ****     tmp = 0;
 1051              		.loc 1 608 9 view .LVU293
 1052 0032 4FF0000C 		mov	ip, #0
 1053              	.L73:
 1054              	.LVL81:
 609:Src/BLDC_controller.c ****   } else {
 610:Src/BLDC_controller.c ****     tmp = q0;
 611:Src/BLDC_controller.c ****   }
 612:Src/BLDC_controller.c **** 
 613:Src/BLDC_controller.c ****   /* End of Switch: '<S74>/Switch1' */
 614:Src/BLDC_controller.c **** 
 615:Src/BLDC_controller.c ****   /* Sum: '<S77>/Sum1' incorporates:
 616:Src/BLDC_controller.c ****    *  Delay: '<S77>/Resettable Delay'
 617:Src/BLDC_controller.c ****    */
 618:Src/BLDC_controller.c ****   rtb_Sum1_p0 = tmp + localDW->ResettableDelay_DSTATE;
 1055              		.loc 1 618 3 is_stmt 1 view .LVU294
 1056              		.loc 1 618 30 is_stmt 0 view .LVU295
 1057 0036 2B68     		ldr	r3, [r5]
 1058              		.loc 1 618 15 view .LVU296
 1059 0038 03EB0C04 		add	r4, r3, ip
 1060              	.LVL82:
 619:Src/BLDC_controller.c **** 
 620:Src/BLDC_controller.c ****   /* Product: '<S74>/Divide5' */
 621:Src/BLDC_controller.c ****   tmp = (rtu_err * rtu_P) >> 11;
 1061              		.loc 1 621 3 is_stmt 1 view .LVU297
 1062              		.loc 1 621 18 is_stmt 0 view .LVU298
 1063 003c 00FB01F1 		mul	r1, r0, r1
 1064              	.LVL83:
 1065              		.loc 1 621 7 view .LVU299
 1066 0040 CB12     		asrs	r3, r1, #11
 1067              	.LVL84:
 622:Src/BLDC_controller.c ****   if (tmp > 32767) {
 1068              		.loc 1 622 3 is_stmt 1 view .LVU300
 1069              		.loc 1 622 6 is_stmt 0 view .LVU301
 1070 0042 B1F1806F 		cmp	r1, #67108864
 1071 0046 10DA     		bge	.L85
 623:Src/BLDC_controller.c ****     tmp = 32767;
 624:Src/BLDC_controller.c ****   } else {
 625:Src/BLDC_controller.c ****     if (tmp < -32768) {
 1072              		.loc 1 625 5 is_stmt 1 view .LVU302
 1073              		.loc 1 625 8 is_stmt 0 view .LVU303
 1074 0048 13F5004F 		cmn	r3, #32768
 1075 004c 0FDA     		bge	.L74
 626:Src/BLDC_controller.c ****       tmp = -32768;
 1076              		.loc 1 626 11 view .LVU304
 1077 004e 274B     		ldr	r3, .L97
 1078              	.LVL85:
ARM GAS  /tmp/ccVzdWer.s 			page 31


 1079              		.loc 1 626 11 view .LVU305
 1080 0050 0DE0     		b	.L74
 1081              	.LVL86:
 1082              	.L95:
 589:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 1083              		.loc 1 589 50 discriminator 1 view .LVU306
 1084 0052 C2F1004E 		rsb	lr, r2, #-2147483648
 589:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 1085              		.loc 1 589 16 discriminator 1 view .LVU307
 1086 0056 A645     		cmp	lr, r4
 1087 0058 DDDD     		ble	.L69
 590:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1088              		.loc 1 590 8 view .LVU308
 1089 005a 4FF00042 		mov	r2, #-2147483648
 1090              	.LVL87:
 590:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1091              		.loc 1 590 8 view .LVU309
 1092 005e E3E7     		b	.L70
 1093              	.LVL88:
 1094              	.L83:
 592:Src/BLDC_controller.c ****   } else {
 1095              		.loc 1 592 8 view .LVU310
 1096 0060 6FF00042 		mvn	r2, #-2147483648
 1097              	.LVL89:
 592:Src/BLDC_controller.c ****   } else {
 1098              		.loc 1 592 8 view .LVU311
 1099 0064 E0E7     		b	.L70
 1100              	.LVL90:
 1101              	.L84:
 610:Src/BLDC_controller.c ****   }
 1102              		.loc 1 610 9 view .LVU312
 1103 0066 9446     		mov	ip, r2
 1104 0068 E5E7     		b	.L73
 1105              	.LVL91:
 1106              	.L85:
 623:Src/BLDC_controller.c ****   } else {
 1107              		.loc 1 623 9 view .LVU313
 1108 006a 47F6FF73 		movw	r3, #32767
 1109              	.LVL92:
 1110              	.L74:
 627:Src/BLDC_controller.c ****     }
 628:Src/BLDC_controller.c ****   }
 629:Src/BLDC_controller.c **** 
 630:Src/BLDC_controller.c ****   /* Sum: '<S74>/Sum1' incorporates:
 631:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S77>/Data Type Conversion1'
 632:Src/BLDC_controller.c ****    *  Product: '<S74>/Divide5'
 633:Src/BLDC_controller.c ****    */
 634:Src/BLDC_controller.c ****   tmp = (((rtb_Sum1_p0 >> 16) << 1) + tmp) >> 1;
 1111              		.loc 1 634 3 is_stmt 1 view .LVU314
 1112              		.loc 1 634 24 is_stmt 0 view .LVU315
 1113 006e 2114     		asrs	r1, r4, #16
 1114              		.loc 1 634 37 view .LVU316
 1115 0070 03EB4101 		add	r1, r3, r1, lsl #1
 1116              		.loc 1 634 7 view .LVU317
 1117 0074 4B10     		asrs	r3, r1, #1
 1118              	.LVL93:
 635:Src/BLDC_controller.c ****   if (tmp > 32767) {
ARM GAS  /tmp/ccVzdWer.s 			page 32


 1119              		.loc 1 635 3 is_stmt 1 view .LVU318
 1120              		.loc 1 635 6 is_stmt 0 view .LVU319
 1121 0076 B1F5803F 		cmp	r1, #65536
 1122 007a 04DA     		bge	.L87
 636:Src/BLDC_controller.c ****     tmp = 32767;
 637:Src/BLDC_controller.c ****   } else {
 638:Src/BLDC_controller.c ****     if (tmp < -32768) {
 1123              		.loc 1 638 5 is_stmt 1 view .LVU320
 1124              		.loc 1 638 8 is_stmt 0 view .LVU321
 1125 007c 13F5004F 		cmn	r3, #32768
 1126 0080 03DA     		bge	.L75
 639:Src/BLDC_controller.c ****       tmp = -32768;
 1127              		.loc 1 639 11 view .LVU322
 1128 0082 1A4B     		ldr	r3, .L97
 1129              	.LVL94:
 1130              		.loc 1 639 11 view .LVU323
 1131 0084 01E0     		b	.L75
 1132              	.LVL95:
 1133              	.L87:
 636:Src/BLDC_controller.c ****     tmp = 32767;
 1134              		.loc 1 636 9 view .LVU324
 1135 0086 47F6FF73 		movw	r3, #32767
 1136              	.LVL96:
 1137              	.L75:
 640:Src/BLDC_controller.c ****     }
 641:Src/BLDC_controller.c ****   }
 642:Src/BLDC_controller.c **** 
 643:Src/BLDC_controller.c ****   /* RelationalOperator: '<S78>/LowerRelop1' incorporates:
 644:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum1'
 645:Src/BLDC_controller.c ****    */
 646:Src/BLDC_controller.c ****   rtb_LowerRelop1_c0 = ((int16_T)tmp > rtu_satMax);
 1138              		.loc 1 646 3 is_stmt 1 view .LVU325
 1139              		.loc 1 646 25 is_stmt 0 view .LVU326
 1140 008a 1BB2     		sxth	r3, r3
 1141              	.LVL97:
 647:Src/BLDC_controller.c **** 
 648:Src/BLDC_controller.c ****   /* RelationalOperator: '<S78>/UpperRelop' incorporates:
 649:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum1'
 650:Src/BLDC_controller.c ****    */
 651:Src/BLDC_controller.c ****   rtb_UpperRelop_f = ((int16_T)tmp < rtu_satMin);
 1142              		.loc 1 651 3 is_stmt 1 view .LVU327
 652:Src/BLDC_controller.c **** 
 653:Src/BLDC_controller.c ****   /* Switch: '<S78>/Switch1' incorporates:
 654:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum1'
 655:Src/BLDC_controller.c ****    *  Switch: '<S78>/Switch3'
 656:Src/BLDC_controller.c ****    */
 657:Src/BLDC_controller.c ****   if (rtb_LowerRelop1_c0) {
 1143              		.loc 1 657 3 view .LVU328
 1144              		.loc 1 657 6 is_stmt 0 view .LVU329
 1145 008c B342     		cmp	r3, r6
 1146 008e 15DD     		ble	.L76
 658:Src/BLDC_controller.c ****     *rty_out = rtu_satMax;
 1147              		.loc 1 658 5 is_stmt 1 view .LVU330
 1148              		.loc 1 658 14 is_stmt 0 view .LVU331
 1149 0090 0899     		ldr	r1, [sp, #32]
 1150 0092 0E80     		strh	r6, [r1]	@ movhi
 1151              	.L77:
ARM GAS  /tmp/ccVzdWer.s 			page 33


 659:Src/BLDC_controller.c ****   } else if (rtb_UpperRelop_f) {
 660:Src/BLDC_controller.c ****     /* Switch: '<S78>/Switch3' */
 661:Src/BLDC_controller.c ****     *rty_out = rtu_satMin;
 662:Src/BLDC_controller.c ****   } else {
 663:Src/BLDC_controller.c ****     *rty_out = (int16_T)tmp;
 664:Src/BLDC_controller.c ****   }
 665:Src/BLDC_controller.c **** 
 666:Src/BLDC_controller.c ****   /* End of Switch: '<S78>/Switch1' */
 667:Src/BLDC_controller.c **** 
 668:Src/BLDC_controller.c ****   /* Signum: '<S76>/SignDeltaU2' incorporates:
 669:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum2'
 670:Src/BLDC_controller.c ****    */
 671:Src/BLDC_controller.c ****   if (q0 < 0) {
 1152              		.loc 1 671 3 is_stmt 1 view .LVU332
 1153              		.loc 1 671 6 is_stmt 0 view .LVU333
 1154 0094 002A     		cmp	r2, #0
 1155 0096 19DB     		blt	.L89
 672:Src/BLDC_controller.c ****     q0 = -1;
 673:Src/BLDC_controller.c ****   } else {
 674:Src/BLDC_controller.c ****     q0 = (q0 > 0);
 1156              		.loc 1 674 5 is_stmt 1 view .LVU334
 1157              		.loc 1 674 14 is_stmt 0 view .LVU335
 1158 0098 002A     		cmp	r2, #0
 1159 009a D4BF     		ite	le
 1160 009c 0022     		movle	r2, #0
 1161              	.LVL98:
 1162              		.loc 1 674 14 view .LVU336
 1163 009e 0122     		movgt	r2, #1
 1164              	.LVL99:
 1165              	.L79:
 675:Src/BLDC_controller.c ****   }
 676:Src/BLDC_controller.c **** 
 677:Src/BLDC_controller.c ****   /* End of Signum: '<S76>/SignDeltaU2' */
 678:Src/BLDC_controller.c **** 
 679:Src/BLDC_controller.c ****   /* Signum: '<S76>/SignDeltaU3' incorporates:
 680:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum1'
 681:Src/BLDC_controller.c ****    */
 682:Src/BLDC_controller.c ****   if ((int16_T)tmp < 0) {
 1166              		.loc 1 682 3 is_stmt 1 view .LVU337
 1167              		.loc 1 682 6 is_stmt 0 view .LVU338
 1168 00a0 002B     		cmp	r3, #0
 1169 00a2 16DB     		blt	.L90
 683:Src/BLDC_controller.c ****     tmp_0 = -1;
 684:Src/BLDC_controller.c ****   } else {
 685:Src/BLDC_controller.c ****     tmp_0 = (int16_T)((int16_T)tmp > 0);
 1170              		.loc 1 685 5 is_stmt 1 view .LVU339
 1171              		.loc 1 685 11 is_stmt 0 view .LVU340
 1172 00a4 002B     		cmp	r3, #0
 1173 00a6 D4BF     		ite	le
 1174 00a8 0021     		movle	r1, #0
 1175 00aa 0121     		movgt	r1, #1
 1176              	.LVL100:
 1177              	.L80:
 686:Src/BLDC_controller.c ****   }
 687:Src/BLDC_controller.c **** 
 688:Src/BLDC_controller.c ****   /* End of Signum: '<S76>/SignDeltaU3' */
 689:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 34


 690:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S74>/UnitDelay1' incorporates:
 691:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S76>/DataTypeConv4'
 692:Src/BLDC_controller.c ****    *  Logic: '<S74>/AND1'
 693:Src/BLDC_controller.c ****    *  Logic: '<S76>/AND1'
 694:Src/BLDC_controller.c ****    *  RelationalOperator: '<S76>/Equal1'
 695:Src/BLDC_controller.c ****    */
 696:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = ((q0 == tmp_0) && (rtb_LowerRelop1_c0 ||
 1178              		.loc 1 696 3 is_stmt 1 view .LVU341
 1179              		.loc 1 696 47 is_stmt 0 view .LVU342
 1180 00ac 9142     		cmp	r1, r2
 1181 00ae 13D0     		beq	.L96
 1182 00b0 0023     		movs	r3, #0
 1183              	.LVL101:
 1184              	.L81:
 1185              		.loc 1 696 30 discriminator 8 view .LVU343
 1186 00b2 6B71     		strb	r3, [r5, #5]
 697:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 698:Src/BLDC_controller.c **** 
 699:Src/BLDC_controller.c ****   /* Update for Delay: '<S77>/Resettable Delay' */
 700:Src/BLDC_controller.c ****   localDW->icLoad = 0U;
 1187              		.loc 1 700 3 is_stmt 1 discriminator 8 view .LVU344
 1188              		.loc 1 700 19 is_stmt 0 discriminator 8 view .LVU345
 1189 00b4 0023     		movs	r3, #0
 1190 00b6 2B71     		strb	r3, [r5, #4]
 701:Src/BLDC_controller.c ****   localDW->ResettableDelay_DSTATE = rtb_Sum1_p0;
 1191              		.loc 1 701 3 is_stmt 1 discriminator 8 view .LVU346
 1192              		.loc 1 701 35 is_stmt 0 discriminator 8 view .LVU347
 1193 00b8 2C60     		str	r4, [r5]
 702:Src/BLDC_controller.c **** }
 1194              		.loc 1 702 1 discriminator 8 view .LVU348
 1195 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1196              	.LVL102:
 1197              	.L76:
 659:Src/BLDC_controller.c ****     /* Switch: '<S78>/Switch3' */
 1198              		.loc 1 659 10 is_stmt 1 view .LVU349
 659:Src/BLDC_controller.c ****     /* Switch: '<S78>/Switch3' */
 1199              		.loc 1 659 13 is_stmt 0 view .LVU350
 1200 00bc BB42     		cmp	r3, r7
 1201 00be 02DA     		bge	.L78
 661:Src/BLDC_controller.c ****   } else {
 1202              		.loc 1 661 5 is_stmt 1 view .LVU351
 661:Src/BLDC_controller.c ****   } else {
 1203              		.loc 1 661 14 is_stmt 0 view .LVU352
 1204 00c0 0899     		ldr	r1, [sp, #32]
 1205 00c2 0F80     		strh	r7, [r1]	@ movhi
 1206 00c4 E6E7     		b	.L77
 1207              	.L78:
 663:Src/BLDC_controller.c ****   }
 1208              		.loc 1 663 5 is_stmt 1 view .LVU353
 663:Src/BLDC_controller.c ****   }
 1209              		.loc 1 663 14 is_stmt 0 view .LVU354
 1210 00c6 0899     		ldr	r1, [sp, #32]
 1211 00c8 0B80     		strh	r3, [r1]	@ movhi
 1212 00ca E3E7     		b	.L77
 1213              	.L89:
 672:Src/BLDC_controller.c ****   } else {
 1214              		.loc 1 672 8 view .LVU355
ARM GAS  /tmp/ccVzdWer.s 			page 35


 1215 00cc 4FF0FF32 		mov	r2, #-1
 1216              	.LVL103:
 672:Src/BLDC_controller.c ****   } else {
 1217              		.loc 1 672 8 view .LVU356
 1218 00d0 E6E7     		b	.L79
 1219              	.LVL104:
 1220              	.L90:
 683:Src/BLDC_controller.c ****   } else {
 1221              		.loc 1 683 11 view .LVU357
 1222 00d2 4FF0FF31 		mov	r1, #-1
 1223 00d6 E9E7     		b	.L80
 1224              	.LVL105:
 1225              	.L96:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1226              		.loc 1 696 47 discriminator 1 view .LVU358
 1227 00d8 B342     		cmp	r3, r6
 1228 00da 03DC     		bgt	.L92
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1229              		.loc 1 696 70 discriminator 4 view .LVU359
 1230 00dc BB42     		cmp	r3, r7
 1231 00de 03DB     		blt	.L93
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1232              		.loc 1 696 47 view .LVU360
 1233 00e0 0023     		movs	r3, #0
 1234              	.LVL106:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1235              		.loc 1 696 47 view .LVU361
 1236 00e2 E6E7     		b	.L81
 1237              	.LVL107:
 1238              	.L92:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1239              		.loc 1 696 47 view .LVU362
 1240 00e4 0123     		movs	r3, #1
 1241              	.LVL108:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1242              		.loc 1 696 47 view .LVU363
 1243 00e6 E4E7     		b	.L81
 1244              	.LVL109:
 1245              	.L93:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1246              		.loc 1 696 47 view .LVU364
 1247 00e8 0123     		movs	r3, #1
 1248              	.LVL110:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1249              		.loc 1 696 47 view .LVU365
 1250 00ea E2E7     		b	.L81
 1251              	.L98:
 1252              		.align	2
 1253              	.L97:
 1254 00ec 0080FFFF 		.word	-32768
 1255              		.cfi_endproc
 1256              	.LFE17:
 1258              		.section	.text.PI_clamp_fixdt_d_Init,"ax",%progbits
 1259              		.align	1
 1260              		.global	PI_clamp_fixdt_d_Init
 1261              		.syntax unified
 1262              		.thumb
ARM GAS  /tmp/ccVzdWer.s 			page 36


 1263              		.thumb_func
 1264              		.fpu softvfp
 1266              	PI_clamp_fixdt_d_Init:
 1267              	.LVL111:
 1268              	.LFB18:
 703:Src/BLDC_controller.c **** 
 704:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S61>/PI_clamp_fixdt' */
 705:Src/BLDC_controller.c **** void PI_clamp_fixdt_d_Init(DW_PI_clamp_fixdt_m *localDW)
 706:Src/BLDC_controller.c **** {
 1269              		.loc 1 706 1 is_stmt 1 view -0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 1273              		@ link register save eliminated.
 707:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S67>/Resettable Delay' */
 708:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 1274              		.loc 1 708 3 view .LVU367
 1275              		.loc 1 708 19 is_stmt 0 view .LVU368
 1276 0000 0123     		movs	r3, #1
 1277 0002 0371     		strb	r3, [r0, #4]
 709:Src/BLDC_controller.c **** }
 1278              		.loc 1 709 1 view .LVU369
 1279 0004 7047     		bx	lr
 1280              		.cfi_endproc
 1281              	.LFE18:
 1283              		.section	.text.PI_clamp_fixdt_b_Reset,"ax",%progbits
 1284              		.align	1
 1285              		.global	PI_clamp_fixdt_b_Reset
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1289              		.fpu softvfp
 1291              	PI_clamp_fixdt_b_Reset:
 1292              	.LVL112:
 1293              	.LFB19:
 710:Src/BLDC_controller.c **** 
 711:Src/BLDC_controller.c **** /* System reset for atomic system: '<S61>/PI_clamp_fixdt' */
 712:Src/BLDC_controller.c **** void PI_clamp_fixdt_b_Reset(DW_PI_clamp_fixdt_m *localDW)
 713:Src/BLDC_controller.c **** {
 1294              		.loc 1 713 1 is_stmt 1 view -0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
 714:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S65>/UnitDelay1' */
 715:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = false;
 1299              		.loc 1 715 3 view .LVU371
 1300              		.loc 1 715 30 is_stmt 0 view .LVU372
 1301 0000 0023     		movs	r3, #0
 1302 0002 4371     		strb	r3, [r0, #5]
 716:Src/BLDC_controller.c **** 
 717:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S67>/Resettable Delay' */
 718:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 1303              		.loc 1 718 3 is_stmt 1 view .LVU373
 1304              		.loc 1 718 19 is_stmt 0 view .LVU374
 1305 0004 0123     		movs	r3, #1
 1306 0006 0371     		strb	r3, [r0, #4]
ARM GAS  /tmp/ccVzdWer.s 			page 37


 719:Src/BLDC_controller.c **** }
 1307              		.loc 1 719 1 view .LVU375
 1308 0008 7047     		bx	lr
 1309              		.cfi_endproc
 1310              	.LFE19:
 1312              		.section	.text.PI_clamp_fixdt_l,"ax",%progbits
 1313              		.align	1
 1314              		.global	PI_clamp_fixdt_l
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu softvfp
 1320              	PI_clamp_fixdt_l:
 1321              	.LVL113:
 1322              	.LFB20:
 720:Src/BLDC_controller.c **** 
 721:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S61>/PI_clamp_fixdt' */
 722:Src/BLDC_controller.c **** void PI_clamp_fixdt_l(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I, int16_T
 723:Src/BLDC_controller.c ****                       rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 724:Src/BLDC_controller.c ****                       rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt_m
 725:Src/BLDC_controller.c ****                       *localDW)
 726:Src/BLDC_controller.c **** {
 1323              		.loc 1 726 1 is_stmt 1 view -0
 1324              		.cfi_startproc
 1325              		@ args = 20, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 1327              		.loc 1 726 1 is_stmt 0 view .LVU377
 1328 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1329              	.LCFI14:
 1330              		.cfi_def_cfa_offset 20
 1331              		.cfi_offset 4, -20
 1332              		.cfi_offset 5, -16
 1333              		.cfi_offset 6, -12
 1334              		.cfi_offset 7, -8
 1335              		.cfi_offset 14, -4
 1336 0002 BDF91460 		ldrsh	r6, [sp, #20]
 1337 0006 BDF91870 		ldrsh	r7, [sp, #24]
 1338 000a 079C     		ldr	r4, [sp, #28]
 1339 000c 099D     		ldr	r5, [sp, #36]
 727:Src/BLDC_controller.c ****   boolean_T rtb_LowerRelop1_l;
 1340              		.loc 1 727 3 is_stmt 1 view .LVU378
 728:Src/BLDC_controller.c ****   boolean_T rtb_UpperRelop_l;
 1341              		.loc 1 728 3 view .LVU379
 729:Src/BLDC_controller.c ****   int32_T rtb_Sum1_ni;
 1342              		.loc 1 729 3 view .LVU380
 730:Src/BLDC_controller.c ****   int32_T q0;
 1343              		.loc 1 730 3 view .LVU381
 731:Src/BLDC_controller.c ****   int32_T tmp;
 1344              		.loc 1 731 3 view .LVU382
 732:Src/BLDC_controller.c ****   int16_T tmp_0;
 1345              		.loc 1 732 3 view .LVU383
 733:Src/BLDC_controller.c **** 
 734:Src/BLDC_controller.c ****   /* Sum: '<S65>/Sum2' incorporates:
 735:Src/BLDC_controller.c ****    *  Product: '<S65>/Divide2'
 736:Src/BLDC_controller.c ****    */
 737:Src/BLDC_controller.c ****   q0 = rtu_err * rtu_I;
 1346              		.loc 1 737 3 view .LVU384
ARM GAS  /tmp/ccVzdWer.s 			page 38


 1347              		.loc 1 737 6 is_stmt 0 view .LVU385
 1348 000e 02FB00F2 		mul	r2, r2, r0
 1349              	.LVL114:
 738:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1350              		.loc 1 738 3 is_stmt 1 view .LVU386
 1351              		.loc 1 738 6 is_stmt 0 view .LVU387
 1352 0012 002A     		cmp	r2, #0
 1353 0014 1EDB     		blt	.L128
 1354              	.L102:
 739:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 740:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1355              		.loc 1 740 10 is_stmt 1 view .LVU388
 1356              		.loc 1 740 13 is_stmt 0 view .LVU389
 1357 0016 002A     		cmp	r2, #0
 1358 0018 05DD     		ble	.L104
 1359              		.loc 1 740 57 discriminator 1 view .LVU390
 1360 001a 6FF0004E 		mvn	lr, #-2147483648
 1361 001e AEEB020E 		sub	lr, lr, r2
 1362              		.loc 1 740 23 discriminator 1 view .LVU391
 1363 0022 A645     		cmp	lr, r4
 1364 0024 1DDB     		blt	.L116
 1365              	.L104:
 741:Src/BLDC_controller.c ****     q0 = MAX_int32_T;
 742:Src/BLDC_controller.c ****   } else {
 743:Src/BLDC_controller.c ****     q0 += rtu_ext_limProt;
 1366              		.loc 1 743 5 is_stmt 1 view .LVU392
 1367              		.loc 1 743 8 is_stmt 0 view .LVU393
 1368 0026 2244     		add	r2, r2, r4
 1369              	.LVL115:
 1370              	.L103:
 744:Src/BLDC_controller.c ****   }
 745:Src/BLDC_controller.c **** 
 746:Src/BLDC_controller.c ****   /* Delay: '<S67>/Resettable Delay' */
 747:Src/BLDC_controller.c ****   if (localDW->icLoad != 0) {
 1371              		.loc 1 747 3 is_stmt 1 view .LVU394
 1372              		.loc 1 747 14 is_stmt 0 view .LVU395
 1373 0028 2C79     		ldrb	r4, [r5, #4]	@ zero_extendqisi2
 1374              		.loc 1 747 6 view .LVU396
 1375 002a 0CB1     		cbz	r4, .L105
 748:Src/BLDC_controller.c ****     localDW->ResettableDelay_DSTATE = rtu_init << 16;
 1376              		.loc 1 748 5 is_stmt 1 view .LVU397
 1377              		.loc 1 748 48 is_stmt 0 view .LVU398
 1378 002c 1B04     		lsls	r3, r3, #16
 1379              	.LVL116:
 1380              		.loc 1 748 37 view .LVU399
 1381 002e 2B60     		str	r3, [r5]
 1382              	.L105:
 749:Src/BLDC_controller.c ****   }
 750:Src/BLDC_controller.c **** 
 751:Src/BLDC_controller.c ****   /* Switch: '<S65>/Switch1' incorporates:
 752:Src/BLDC_controller.c ****    *  Constant: '<S65>/Constant'
 753:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum2'
 754:Src/BLDC_controller.c ****    *  UnitDelay: '<S65>/UnitDelay1'
 755:Src/BLDC_controller.c ****    */
 756:Src/BLDC_controller.c ****   if (localDW->UnitDelay1_DSTATE) {
 1383              		.loc 1 756 3 is_stmt 1 view .LVU400
 1384              		.loc 1 756 14 is_stmt 0 view .LVU401
ARM GAS  /tmp/ccVzdWer.s 			page 39


 1385 0030 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 1386              		.loc 1 756 6 view .LVU402
 1387 0032 CBB1     		cbz	r3, .L117
 757:Src/BLDC_controller.c ****     tmp = 0;
 1388              		.loc 1 757 9 view .LVU403
 1389 0034 4FF0000C 		mov	ip, #0
 1390              	.L106:
 1391              	.LVL117:
 758:Src/BLDC_controller.c ****   } else {
 759:Src/BLDC_controller.c ****     tmp = q0;
 760:Src/BLDC_controller.c ****   }
 761:Src/BLDC_controller.c **** 
 762:Src/BLDC_controller.c ****   /* End of Switch: '<S65>/Switch1' */
 763:Src/BLDC_controller.c **** 
 764:Src/BLDC_controller.c ****   /* Sum: '<S67>/Sum1' incorporates:
 765:Src/BLDC_controller.c ****    *  Delay: '<S67>/Resettable Delay'
 766:Src/BLDC_controller.c ****    */
 767:Src/BLDC_controller.c ****   rtb_Sum1_ni = tmp + localDW->ResettableDelay_DSTATE;
 1392              		.loc 1 767 3 is_stmt 1 view .LVU404
 1393              		.loc 1 767 30 is_stmt 0 view .LVU405
 1394 0038 2B68     		ldr	r3, [r5]
 1395              		.loc 1 767 15 view .LVU406
 1396 003a 03EB0C04 		add	r4, r3, ip
 1397              	.LVL118:
 768:Src/BLDC_controller.c **** 
 769:Src/BLDC_controller.c ****   /* Product: '<S65>/Divide5' */
 770:Src/BLDC_controller.c ****   tmp = (rtu_err * rtu_P) >> 11;
 1398              		.loc 1 770 3 is_stmt 1 view .LVU407
 1399              		.loc 1 770 18 is_stmt 0 view .LVU408
 1400 003e 00FB01F1 		mul	r1, r0, r1
 1401              	.LVL119:
 1402              		.loc 1 770 7 view .LVU409
 1403 0042 CB12     		asrs	r3, r1, #11
 1404              	.LVL120:
 771:Src/BLDC_controller.c ****   if (tmp > 32767) {
 1405              		.loc 1 771 3 is_stmt 1 view .LVU410
 1406              		.loc 1 771 6 is_stmt 0 view .LVU411
 1407 0044 B1F1806F 		cmp	r1, #67108864
 1408 0048 10DA     		bge	.L118
 772:Src/BLDC_controller.c ****     tmp = 32767;
 773:Src/BLDC_controller.c ****   } else {
 774:Src/BLDC_controller.c ****     if (tmp < -32768) {
 1409              		.loc 1 774 5 is_stmt 1 view .LVU412
 1410              		.loc 1 774 8 is_stmt 0 view .LVU413
 1411 004a 13F5004F 		cmn	r3, #32768
 1412 004e 0FDA     		bge	.L107
 775:Src/BLDC_controller.c ****       tmp = -32768;
 1413              		.loc 1 775 11 view .LVU414
 1414 0050 274B     		ldr	r3, .L130
 1415              	.LVL121:
 1416              		.loc 1 775 11 view .LVU415
 1417 0052 0DE0     		b	.L107
 1418              	.LVL122:
 1419              	.L128:
 738:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 1420              		.loc 1 738 50 discriminator 1 view .LVU416
 1421 0054 C2F1004E 		rsb	lr, r2, #-2147483648
ARM GAS  /tmp/ccVzdWer.s 			page 40


 738:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 1422              		.loc 1 738 16 discriminator 1 view .LVU417
 1423 0058 A645     		cmp	lr, r4
 1424 005a DCDD     		ble	.L102
 739:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1425              		.loc 1 739 8 view .LVU418
 1426 005c 4FF00042 		mov	r2, #-2147483648
 1427              	.LVL123:
 739:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1428              		.loc 1 739 8 view .LVU419
 1429 0060 E2E7     		b	.L103
 1430              	.LVL124:
 1431              	.L116:
 741:Src/BLDC_controller.c ****   } else {
 1432              		.loc 1 741 8 view .LVU420
 1433 0062 6FF00042 		mvn	r2, #-2147483648
 1434              	.LVL125:
 741:Src/BLDC_controller.c ****   } else {
 1435              		.loc 1 741 8 view .LVU421
 1436 0066 DFE7     		b	.L103
 1437              	.LVL126:
 1438              	.L117:
 759:Src/BLDC_controller.c ****   }
 1439              		.loc 1 759 9 view .LVU422
 1440 0068 9446     		mov	ip, r2
 1441 006a E5E7     		b	.L106
 1442              	.LVL127:
 1443              	.L118:
 772:Src/BLDC_controller.c ****   } else {
 1444              		.loc 1 772 9 view .LVU423
 1445 006c 47F6FF73 		movw	r3, #32767
 1446              	.LVL128:
 1447              	.L107:
 776:Src/BLDC_controller.c ****     }
 777:Src/BLDC_controller.c ****   }
 778:Src/BLDC_controller.c **** 
 779:Src/BLDC_controller.c ****   /* Sum: '<S65>/Sum1' incorporates:
 780:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S67>/Data Type Conversion1'
 781:Src/BLDC_controller.c ****    *  Product: '<S65>/Divide5'
 782:Src/BLDC_controller.c ****    */
 783:Src/BLDC_controller.c ****   tmp = (((rtb_Sum1_ni >> 16) << 1) + tmp) >> 1;
 1448              		.loc 1 783 3 is_stmt 1 view .LVU424
 1449              		.loc 1 783 24 is_stmt 0 view .LVU425
 1450 0070 2114     		asrs	r1, r4, #16
 1451              		.loc 1 783 37 view .LVU426
 1452 0072 03EB4101 		add	r1, r3, r1, lsl #1
 1453              		.loc 1 783 7 view .LVU427
 1454 0076 4B10     		asrs	r3, r1, #1
 1455              	.LVL129:
 784:Src/BLDC_controller.c ****   if (tmp > 32767) {
 1456              		.loc 1 784 3 is_stmt 1 view .LVU428
 1457              		.loc 1 784 6 is_stmt 0 view .LVU429
 1458 0078 B1F5803F 		cmp	r1, #65536
 1459 007c 04DA     		bge	.L120
 785:Src/BLDC_controller.c ****     tmp = 32767;
 786:Src/BLDC_controller.c ****   } else {
 787:Src/BLDC_controller.c ****     if (tmp < -32768) {
ARM GAS  /tmp/ccVzdWer.s 			page 41


 1460              		.loc 1 787 5 is_stmt 1 view .LVU430
 1461              		.loc 1 787 8 is_stmt 0 view .LVU431
 1462 007e 13F5004F 		cmn	r3, #32768
 1463 0082 03DA     		bge	.L108
 788:Src/BLDC_controller.c ****       tmp = -32768;
 1464              		.loc 1 788 11 view .LVU432
 1465 0084 1A4B     		ldr	r3, .L130
 1466              	.LVL130:
 1467              		.loc 1 788 11 view .LVU433
 1468 0086 01E0     		b	.L108
 1469              	.LVL131:
 1470              	.L120:
 785:Src/BLDC_controller.c ****     tmp = 32767;
 1471              		.loc 1 785 9 view .LVU434
 1472 0088 47F6FF73 		movw	r3, #32767
 1473              	.LVL132:
 1474              	.L108:
 789:Src/BLDC_controller.c ****     }
 790:Src/BLDC_controller.c ****   }
 791:Src/BLDC_controller.c **** 
 792:Src/BLDC_controller.c ****   /* RelationalOperator: '<S68>/LowerRelop1' incorporates:
 793:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum1'
 794:Src/BLDC_controller.c ****    */
 795:Src/BLDC_controller.c ****   rtb_LowerRelop1_l = ((int16_T)tmp > rtu_satMax);
 1475              		.loc 1 795 3 is_stmt 1 view .LVU435
 1476              		.loc 1 795 24 is_stmt 0 view .LVU436
 1477 008c 1BB2     		sxth	r3, r3
 1478              	.LVL133:
 796:Src/BLDC_controller.c **** 
 797:Src/BLDC_controller.c ****   /* RelationalOperator: '<S68>/UpperRelop' incorporates:
 798:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum1'
 799:Src/BLDC_controller.c ****    */
 800:Src/BLDC_controller.c ****   rtb_UpperRelop_l = ((int16_T)tmp < rtu_satMin);
 1479              		.loc 1 800 3 is_stmt 1 view .LVU437
 801:Src/BLDC_controller.c **** 
 802:Src/BLDC_controller.c ****   /* Switch: '<S68>/Switch1' incorporates:
 803:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum1'
 804:Src/BLDC_controller.c ****    *  Switch: '<S68>/Switch3'
 805:Src/BLDC_controller.c ****    */
 806:Src/BLDC_controller.c ****   if (rtb_LowerRelop1_l) {
 1480              		.loc 1 806 3 view .LVU438
 1481              		.loc 1 806 6 is_stmt 0 view .LVU439
 1482 008e B342     		cmp	r3, r6
 1483 0090 15DD     		ble	.L109
 807:Src/BLDC_controller.c ****     *rty_out = rtu_satMax;
 1484              		.loc 1 807 5 is_stmt 1 view .LVU440
 1485              		.loc 1 807 14 is_stmt 0 view .LVU441
 1486 0092 0899     		ldr	r1, [sp, #32]
 1487 0094 0E80     		strh	r6, [r1]	@ movhi
 1488              	.L110:
 808:Src/BLDC_controller.c ****   } else if (rtb_UpperRelop_l) {
 809:Src/BLDC_controller.c ****     /* Switch: '<S68>/Switch3' */
 810:Src/BLDC_controller.c ****     *rty_out = rtu_satMin;
 811:Src/BLDC_controller.c ****   } else {
 812:Src/BLDC_controller.c ****     *rty_out = (int16_T)tmp;
 813:Src/BLDC_controller.c ****   }
 814:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 42


 815:Src/BLDC_controller.c ****   /* End of Switch: '<S68>/Switch1' */
 816:Src/BLDC_controller.c **** 
 817:Src/BLDC_controller.c ****   /* Signum: '<S66>/SignDeltaU2' incorporates:
 818:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum2'
 819:Src/BLDC_controller.c ****    */
 820:Src/BLDC_controller.c ****   if (q0 < 0) {
 1489              		.loc 1 820 3 is_stmt 1 view .LVU442
 1490              		.loc 1 820 6 is_stmt 0 view .LVU443
 1491 0096 002A     		cmp	r2, #0
 1492 0098 19DB     		blt	.L122
 821:Src/BLDC_controller.c ****     q0 = -1;
 822:Src/BLDC_controller.c ****   } else {
 823:Src/BLDC_controller.c ****     q0 = (q0 > 0);
 1493              		.loc 1 823 5 is_stmt 1 view .LVU444
 1494              		.loc 1 823 14 is_stmt 0 view .LVU445
 1495 009a 002A     		cmp	r2, #0
 1496 009c D4BF     		ite	le
 1497 009e 0022     		movle	r2, #0
 1498              	.LVL134:
 1499              		.loc 1 823 14 view .LVU446
 1500 00a0 0122     		movgt	r2, #1
 1501              	.LVL135:
 1502              	.L112:
 824:Src/BLDC_controller.c ****   }
 825:Src/BLDC_controller.c **** 
 826:Src/BLDC_controller.c ****   /* End of Signum: '<S66>/SignDeltaU2' */
 827:Src/BLDC_controller.c **** 
 828:Src/BLDC_controller.c ****   /* Signum: '<S66>/SignDeltaU3' incorporates:
 829:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum1'
 830:Src/BLDC_controller.c ****    */
 831:Src/BLDC_controller.c ****   if ((int16_T)tmp < 0) {
 1503              		.loc 1 831 3 is_stmt 1 view .LVU447
 1504              		.loc 1 831 6 is_stmt 0 view .LVU448
 1505 00a2 002B     		cmp	r3, #0
 1506 00a4 16DB     		blt	.L123
 832:Src/BLDC_controller.c ****     tmp_0 = -1;
 833:Src/BLDC_controller.c ****   } else {
 834:Src/BLDC_controller.c ****     tmp_0 = (int16_T)((int16_T)tmp > 0);
 1507              		.loc 1 834 5 is_stmt 1 view .LVU449
 1508              		.loc 1 834 11 is_stmt 0 view .LVU450
 1509 00a6 002B     		cmp	r3, #0
 1510 00a8 D4BF     		ite	le
 1511 00aa 0021     		movle	r1, #0
 1512 00ac 0121     		movgt	r1, #1
 1513              	.LVL136:
 1514              	.L113:
 835:Src/BLDC_controller.c ****   }
 836:Src/BLDC_controller.c **** 
 837:Src/BLDC_controller.c ****   /* End of Signum: '<S66>/SignDeltaU3' */
 838:Src/BLDC_controller.c **** 
 839:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S65>/UnitDelay1' incorporates:
 840:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S66>/DataTypeConv4'
 841:Src/BLDC_controller.c ****    *  Logic: '<S65>/AND1'
 842:Src/BLDC_controller.c ****    *  Logic: '<S66>/AND1'
 843:Src/BLDC_controller.c ****    *  RelationalOperator: '<S66>/Equal1'
 844:Src/BLDC_controller.c ****    */
 845:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = ((q0 == tmp_0) && (rtb_LowerRelop1_l ||
ARM GAS  /tmp/ccVzdWer.s 			page 43


 1515              		.loc 1 845 3 is_stmt 1 view .LVU451
 1516              		.loc 1 845 47 is_stmt 0 view .LVU452
 1517 00ae 9142     		cmp	r1, r2
 1518 00b0 13D0     		beq	.L129
 1519 00b2 0023     		movs	r3, #0
 1520              	.LVL137:
 1521              	.L114:
 1522              		.loc 1 845 30 discriminator 8 view .LVU453
 1523 00b4 6B71     		strb	r3, [r5, #5]
 846:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 847:Src/BLDC_controller.c **** 
 848:Src/BLDC_controller.c ****   /* Update for Delay: '<S67>/Resettable Delay' */
 849:Src/BLDC_controller.c ****   localDW->icLoad = 0U;
 1524              		.loc 1 849 3 is_stmt 1 discriminator 8 view .LVU454
 1525              		.loc 1 849 19 is_stmt 0 discriminator 8 view .LVU455
 1526 00b6 0023     		movs	r3, #0
 1527 00b8 2B71     		strb	r3, [r5, #4]
 850:Src/BLDC_controller.c ****   localDW->ResettableDelay_DSTATE = rtb_Sum1_ni;
 1528              		.loc 1 850 3 is_stmt 1 discriminator 8 view .LVU456
 1529              		.loc 1 850 35 is_stmt 0 discriminator 8 view .LVU457
 1530 00ba 2C60     		str	r4, [r5]
 851:Src/BLDC_controller.c **** }
 1531              		.loc 1 851 1 discriminator 8 view .LVU458
 1532 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1533              	.LVL138:
 1534              	.L109:
 808:Src/BLDC_controller.c ****     /* Switch: '<S68>/Switch3' */
 1535              		.loc 1 808 10 is_stmt 1 view .LVU459
 808:Src/BLDC_controller.c ****     /* Switch: '<S68>/Switch3' */
 1536              		.loc 1 808 13 is_stmt 0 view .LVU460
 1537 00be BB42     		cmp	r3, r7
 1538 00c0 02DA     		bge	.L111
 810:Src/BLDC_controller.c ****   } else {
 1539              		.loc 1 810 5 is_stmt 1 view .LVU461
 810:Src/BLDC_controller.c ****   } else {
 1540              		.loc 1 810 14 is_stmt 0 view .LVU462
 1541 00c2 0899     		ldr	r1, [sp, #32]
 1542 00c4 0F80     		strh	r7, [r1]	@ movhi
 1543 00c6 E6E7     		b	.L110
 1544              	.L111:
 812:Src/BLDC_controller.c ****   }
 1545              		.loc 1 812 5 is_stmt 1 view .LVU463
 812:Src/BLDC_controller.c ****   }
 1546              		.loc 1 812 14 is_stmt 0 view .LVU464
 1547 00c8 0899     		ldr	r1, [sp, #32]
 1548 00ca 0B80     		strh	r3, [r1]	@ movhi
 1549 00cc E3E7     		b	.L110
 1550              	.L122:
 821:Src/BLDC_controller.c ****   } else {
 1551              		.loc 1 821 8 view .LVU465
 1552 00ce 4FF0FF32 		mov	r2, #-1
 1553              	.LVL139:
 821:Src/BLDC_controller.c ****   } else {
 1554              		.loc 1 821 8 view .LVU466
 1555 00d2 E6E7     		b	.L112
 1556              	.LVL140:
 1557              	.L123:
ARM GAS  /tmp/ccVzdWer.s 			page 44


 832:Src/BLDC_controller.c ****   } else {
 1558              		.loc 1 832 11 view .LVU467
 1559 00d4 4FF0FF31 		mov	r1, #-1
 1560 00d8 E9E7     		b	.L113
 1561              	.LVL141:
 1562              	.L129:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1563              		.loc 1 845 47 discriminator 1 view .LVU468
 1564 00da B342     		cmp	r3, r6
 1565 00dc 03DC     		bgt	.L125
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1566              		.loc 1 845 69 discriminator 4 view .LVU469
 1567 00de BB42     		cmp	r3, r7
 1568 00e0 03DB     		blt	.L126
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1569              		.loc 1 845 47 view .LVU470
 1570 00e2 0023     		movs	r3, #0
 1571              	.LVL142:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1572              		.loc 1 845 47 view .LVU471
 1573 00e4 E6E7     		b	.L114
 1574              	.LVL143:
 1575              	.L125:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1576              		.loc 1 845 47 view .LVU472
 1577 00e6 0123     		movs	r3, #1
 1578              	.LVL144:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1579              		.loc 1 845 47 view .LVU473
 1580 00e8 E4E7     		b	.L114
 1581              	.LVL145:
 1582              	.L126:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1583              		.loc 1 845 47 view .LVU474
 1584 00ea 0123     		movs	r3, #1
 1585              	.LVL146:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1586              		.loc 1 845 47 view .LVU475
 1587 00ec E2E7     		b	.L114
 1588              	.L131:
 1589 00ee 00BF     		.align	2
 1590              	.L130:
 1591 00f0 0080FFFF 		.word	-32768
 1592              		.cfi_endproc
 1593              	.LFE20:
 1595              		.section	.text.PI_clamp_fixdt_f_Init,"ax",%progbits
 1596              		.align	1
 1597              		.global	PI_clamp_fixdt_f_Init
 1598              		.syntax unified
 1599              		.thumb
 1600              		.thumb_func
 1601              		.fpu softvfp
 1603              	PI_clamp_fixdt_f_Init:
 1604              	.LVL147:
 1605              	.LFB21:
 852:Src/BLDC_controller.c **** 
 853:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S62>/PI_clamp_fixdt' */
ARM GAS  /tmp/ccVzdWer.s 			page 45


 854:Src/BLDC_controller.c **** void PI_clamp_fixdt_f_Init(DW_PI_clamp_fixdt_g *localDW)
 855:Src/BLDC_controller.c **** {
 1606              		.loc 1 855 1 is_stmt 1 view -0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              		@ link register save eliminated.
 856:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S72>/Resettable Delay' */
 857:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 1611              		.loc 1 857 3 view .LVU477
 1612              		.loc 1 857 19 is_stmt 0 view .LVU478
 1613 0000 0123     		movs	r3, #1
 1614 0002 8370     		strb	r3, [r0, #2]
 858:Src/BLDC_controller.c **** }
 1615              		.loc 1 858 1 view .LVU479
 1616 0004 7047     		bx	lr
 1617              		.cfi_endproc
 1618              	.LFE21:
 1620              		.section	.text.PI_clamp_fixdt_g_Reset,"ax",%progbits
 1621              		.align	1
 1622              		.global	PI_clamp_fixdt_g_Reset
 1623              		.syntax unified
 1624              		.thumb
 1625              		.thumb_func
 1626              		.fpu softvfp
 1628              	PI_clamp_fixdt_g_Reset:
 1629              	.LVL148:
 1630              	.LFB22:
 859:Src/BLDC_controller.c **** 
 860:Src/BLDC_controller.c **** /* System reset for atomic system: '<S62>/PI_clamp_fixdt' */
 861:Src/BLDC_controller.c **** void PI_clamp_fixdt_g_Reset(DW_PI_clamp_fixdt_g *localDW)
 862:Src/BLDC_controller.c **** {
 1631              		.loc 1 862 1 is_stmt 1 view -0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              		@ link register save eliminated.
 863:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S69>/UnitDelay1' */
 864:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = false;
 1636              		.loc 1 864 3 view .LVU481
 1637              		.loc 1 864 30 is_stmt 0 view .LVU482
 1638 0000 0023     		movs	r3, #0
 1639 0002 C370     		strb	r3, [r0, #3]
 865:Src/BLDC_controller.c **** 
 866:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S72>/Resettable Delay' */
 867:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 1640              		.loc 1 867 3 is_stmt 1 view .LVU483
 1641              		.loc 1 867 19 is_stmt 0 view .LVU484
 1642 0004 0123     		movs	r3, #1
 1643 0006 8370     		strb	r3, [r0, #2]
 868:Src/BLDC_controller.c **** }
 1644              		.loc 1 868 1 view .LVU485
 1645 0008 7047     		bx	lr
 1646              		.cfi_endproc
 1647              	.LFE22:
 1649              		.section	.text.PI_clamp_fixdt_k,"ax",%progbits
 1650              		.align	1
ARM GAS  /tmp/ccVzdWer.s 			page 46


 1651              		.global	PI_clamp_fixdt_k
 1652              		.syntax unified
 1653              		.thumb
 1654              		.thumb_func
 1655              		.fpu softvfp
 1657              	PI_clamp_fixdt_k:
 1658              	.LVL149:
 1659              	.LFB23:
 869:Src/BLDC_controller.c **** 
 870:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S62>/PI_clamp_fixdt' */
 871:Src/BLDC_controller.c **** void PI_clamp_fixdt_k(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I, int16_T
 872:Src/BLDC_controller.c ****                       rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 873:Src/BLDC_controller.c ****                       rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt_g
 874:Src/BLDC_controller.c ****                       *localDW)
 875:Src/BLDC_controller.c **** {
 1660              		.loc 1 875 1 is_stmt 1 view -0
 1661              		.cfi_startproc
 1662              		@ args = 20, pretend = 0, frame = 0
 1663              		@ frame_needed = 0, uses_anonymous_args = 0
 1664              		.loc 1 875 1 is_stmt 0 view .LVU487
 1665 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1666              	.LCFI15:
 1667              		.cfi_def_cfa_offset 20
 1668              		.cfi_offset 4, -20
 1669              		.cfi_offset 5, -16
 1670              		.cfi_offset 6, -12
 1671              		.cfi_offset 7, -8
 1672              		.cfi_offset 14, -4
 1673 0002 BDF91470 		ldrsh	r7, [sp, #20]
 1674 0006 BDF918C0 		ldrsh	ip, [sp, #24]
 1675 000a 079C     		ldr	r4, [sp, #28]
 1676 000c 089D     		ldr	r5, [sp, #32]
 1677 000e 099E     		ldr	r6, [sp, #36]
 876:Src/BLDC_controller.c ****   boolean_T rtb_LowerRelop1_i3;
 1678              		.loc 1 876 3 is_stmt 1 view .LVU488
 877:Src/BLDC_controller.c ****   boolean_T rtb_UpperRelop_i;
 1679              		.loc 1 877 3 view .LVU489
 878:Src/BLDC_controller.c ****   int16_T rtb_Sum1_bm;
 1680              		.loc 1 878 3 view .LVU490
 879:Src/BLDC_controller.c ****   int16_T tmp;
 1681              		.loc 1 879 3 view .LVU491
 880:Src/BLDC_controller.c ****   int32_T tmp_0;
 1682              		.loc 1 880 3 view .LVU492
 881:Src/BLDC_controller.c ****   int32_T q0;
 1683              		.loc 1 881 3 view .LVU493
 882:Src/BLDC_controller.c **** 
 883:Src/BLDC_controller.c ****   /* Sum: '<S69>/Sum2' incorporates:
 884:Src/BLDC_controller.c ****    *  Product: '<S69>/Divide2'
 885:Src/BLDC_controller.c ****    */
 886:Src/BLDC_controller.c ****   q0 = rtu_err * rtu_I;
 1684              		.loc 1 886 3 view .LVU494
 1685              		.loc 1 886 6 is_stmt 0 view .LVU495
 1686 0010 02FB00F2 		mul	r2, r2, r0
 1687              	.LVL150:
 887:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1688              		.loc 1 887 3 is_stmt 1 view .LVU496
 1689              		.loc 1 887 6 is_stmt 0 view .LVU497
ARM GAS  /tmp/ccVzdWer.s 			page 47


 1690 0014 002A     		cmp	r2, #0
 1691 0016 20DB     		blt	.L163
 1692              	.L135:
 888:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 889:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1693              		.loc 1 889 10 is_stmt 1 view .LVU498
 1694              		.loc 1 889 13 is_stmt 0 view .LVU499
 1695 0018 002A     		cmp	r2, #0
 1696 001a 05DD     		ble	.L137
 1697              		.loc 1 889 57 discriminator 1 view .LVU500
 1698 001c 6FF0004E 		mvn	lr, #-2147483648
 1699 0020 AEEB020E 		sub	lr, lr, r2
 1700              		.loc 1 889 23 discriminator 1 view .LVU501
 1701 0024 A645     		cmp	lr, r4
 1702 0026 1FDB     		blt	.L150
 1703              	.L137:
 890:Src/BLDC_controller.c ****     q0 = MAX_int32_T;
 891:Src/BLDC_controller.c ****   } else {
 892:Src/BLDC_controller.c ****     q0 += rtu_ext_limProt;
 1704              		.loc 1 892 5 is_stmt 1 view .LVU502
 1705              		.loc 1 892 8 is_stmt 0 view .LVU503
 1706 0028 2244     		add	r2, r2, r4
 1707              	.LVL151:
 1708              	.L136:
 893:Src/BLDC_controller.c ****   }
 894:Src/BLDC_controller.c **** 
 895:Src/BLDC_controller.c ****   /* Delay: '<S72>/Resettable Delay' */
 896:Src/BLDC_controller.c ****   if (localDW->icLoad != 0) {
 1709              		.loc 1 896 3 is_stmt 1 view .LVU504
 1710              		.loc 1 896 14 is_stmt 0 view .LVU505
 1711 002a B478     		ldrb	r4, [r6, #2]	@ zero_extendqisi2
 1712              		.loc 1 896 6 view .LVU506
 1713 002c 04B1     		cbz	r4, .L138
 897:Src/BLDC_controller.c ****     localDW->ResettableDelay_DSTATE = rtu_init;
 1714              		.loc 1 897 5 is_stmt 1 view .LVU507
 1715              		.loc 1 897 37 is_stmt 0 view .LVU508
 1716 002e 3380     		strh	r3, [r6]	@ movhi
 1717              	.L138:
 898:Src/BLDC_controller.c ****   }
 899:Src/BLDC_controller.c **** 
 900:Src/BLDC_controller.c ****   /* Switch: '<S69>/Switch1' incorporates:
 901:Src/BLDC_controller.c ****    *  Constant: '<S69>/Constant'
 902:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum2'
 903:Src/BLDC_controller.c ****    *  UnitDelay: '<S69>/UnitDelay1'
 904:Src/BLDC_controller.c ****    */
 905:Src/BLDC_controller.c ****   if (localDW->UnitDelay1_DSTATE) {
 1718              		.loc 1 905 3 is_stmt 1 view .LVU509
 1719              		.loc 1 905 14 is_stmt 0 view .LVU510
 1720 0030 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 1721              	.LVL152:
 1722              		.loc 1 905 6 view .LVU511
 1723 0032 FBB9     		cbnz	r3, .L151
 906:Src/BLDC_controller.c ****     tmp = 0;
 907:Src/BLDC_controller.c ****   } else {
 908:Src/BLDC_controller.c ****     tmp = (int16_T)(((q0 < 0 ? 65535 : 0) + q0) >> 16);
 1724              		.loc 1 908 5 is_stmt 1 view .LVU512
 1725              		.loc 1 908 38 is_stmt 0 view .LVU513
ARM GAS  /tmp/ccVzdWer.s 			page 48


 1726 0034 002A     		cmp	r2, #0
 1727 0036 1ADB     		blt	.L164
 1728 0038 0024     		movs	r4, #0
 1729              	.L140:
 1730              		.loc 1 908 43 discriminator 4 view .LVU514
 1731 003a 1444     		add	r4, r4, r2
 1732              		.loc 1 908 9 discriminator 4 view .LVU515
 1733 003c 2314     		asrs	r3, r4, #16
 1734              	.LVL153:
 1735              	.L139:
 909:Src/BLDC_controller.c ****   }
 910:Src/BLDC_controller.c **** 
 911:Src/BLDC_controller.c ****   /* End of Switch: '<S69>/Switch1' */
 912:Src/BLDC_controller.c **** 
 913:Src/BLDC_controller.c ****   /* Sum: '<S72>/Sum1' incorporates:
 914:Src/BLDC_controller.c ****    *  Delay: '<S72>/Resettable Delay'
 915:Src/BLDC_controller.c ****    */
 916:Src/BLDC_controller.c ****   rtb_Sum1_bm = (int16_T)(tmp + localDW->ResettableDelay_DSTATE);
 1736              		.loc 1 916 3 is_stmt 1 view .LVU516
 1737              		.loc 1 916 40 is_stmt 0 view .LVU517
 1738 003e 3488     		ldrh	r4, [r6]
 1739              		.loc 1 916 31 view .LVU518
 1740 0040 1C44     		add	r4, r4, r3
 1741              		.loc 1 916 15 view .LVU519
 1742 0042 24B2     		sxth	r4, r4
 1743              	.LVL154:
 917:Src/BLDC_controller.c **** 
 918:Src/BLDC_controller.c ****   /* Product: '<S69>/Divide5' */
 919:Src/BLDC_controller.c ****   tmp_0 = (rtu_err * rtu_P) >> 11;
 1744              		.loc 1 919 3 is_stmt 1 view .LVU520
 1745              		.loc 1 919 20 is_stmt 0 view .LVU521
 1746 0044 00FB01F1 		mul	r1, r0, r1
 1747              	.LVL155:
 1748              		.loc 1 919 9 view .LVU522
 1749 0048 CB12     		asrs	r3, r1, #11
 1750              	.LVL156:
 920:Src/BLDC_controller.c ****   if (tmp_0 > 32767) {
 1751              		.loc 1 920 3 is_stmt 1 view .LVU523
 1752              		.loc 1 920 6 is_stmt 0 view .LVU524
 1753 004a B1F1806F 		cmp	r1, #67108864
 1754 004e 13DA     		bge	.L153
 921:Src/BLDC_controller.c ****     tmp_0 = 32767;
 922:Src/BLDC_controller.c ****   } else {
 923:Src/BLDC_controller.c ****     if (tmp_0 < -32768) {
 1755              		.loc 1 923 5 is_stmt 1 view .LVU525
 1756              		.loc 1 923 8 is_stmt 0 view .LVU526
 1757 0050 13F5004F 		cmn	r3, #32768
 1758 0054 12DA     		bge	.L141
 924:Src/BLDC_controller.c ****       tmp_0 = -32768;
 1759              		.loc 1 924 13 view .LVU527
 1760 0056 274B     		ldr	r3, .L166
 1761              	.LVL157:
 1762              		.loc 1 924 13 view .LVU528
 1763 0058 10E0     		b	.L141
 1764              	.LVL158:
 1765              	.L163:
 887:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
ARM GAS  /tmp/ccVzdWer.s 			page 49


 1766              		.loc 1 887 50 discriminator 1 view .LVU529
 1767 005a C2F1004E 		rsb	lr, r2, #-2147483648
 887:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 1768              		.loc 1 887 16 discriminator 1 view .LVU530
 1769 005e A645     		cmp	lr, r4
 1770 0060 DADD     		ble	.L135
 888:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1771              		.loc 1 888 8 view .LVU531
 1772 0062 4FF00042 		mov	r2, #-2147483648
 1773              	.LVL159:
 888:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1774              		.loc 1 888 8 view .LVU532
 1775 0066 E0E7     		b	.L136
 1776              	.LVL160:
 1777              	.L150:
 890:Src/BLDC_controller.c ****   } else {
 1778              		.loc 1 890 8 view .LVU533
 1779 0068 6FF00042 		mvn	r2, #-2147483648
 1780              	.LVL161:
 890:Src/BLDC_controller.c ****   } else {
 1781              		.loc 1 890 8 view .LVU534
 1782 006c DDE7     		b	.L136
 1783              	.LVL162:
 1784              	.L164:
 908:Src/BLDC_controller.c ****   }
 1785              		.loc 1 908 38 view .LVU535
 1786 006e 4FF6FF74 		movw	r4, #65535
 1787 0072 E2E7     		b	.L140
 1788              	.L151:
 906:Src/BLDC_controller.c ****   } else {
 1789              		.loc 1 906 9 view .LVU536
 1790 0074 0023     		movs	r3, #0
 1791 0076 E2E7     		b	.L139
 1792              	.LVL163:
 1793              	.L153:
 921:Src/BLDC_controller.c ****   } else {
 1794              		.loc 1 921 11 view .LVU537
 1795 0078 47F6FF73 		movw	r3, #32767
 1796              	.LVL164:
 1797              	.L141:
 925:Src/BLDC_controller.c ****     }
 926:Src/BLDC_controller.c ****   }
 927:Src/BLDC_controller.c **** 
 928:Src/BLDC_controller.c ****   /* Sum: '<S69>/Sum1' incorporates:
 929:Src/BLDC_controller.c ****    *  Product: '<S69>/Divide5'
 930:Src/BLDC_controller.c ****    */
 931:Src/BLDC_controller.c ****   tmp_0 = ((rtb_Sum1_bm << 1) + tmp_0) >> 1;
 1798              		.loc 1 931 3 is_stmt 1 view .LVU538
 1799              		.loc 1 931 31 is_stmt 0 view .LVU539
 1800 007c 03EB4401 		add	r1, r3, r4, lsl #1
 1801              		.loc 1 931 9 view .LVU540
 1802 0080 4B10     		asrs	r3, r1, #1
 1803              	.LVL165:
 932:Src/BLDC_controller.c ****   if (tmp_0 > 32767) {
 1804              		.loc 1 932 3 is_stmt 1 view .LVU541
 1805              		.loc 1 932 6 is_stmt 0 view .LVU542
 1806 0082 B1F5803F 		cmp	r1, #65536
ARM GAS  /tmp/ccVzdWer.s 			page 50


 1807 0086 04DA     		bge	.L155
 933:Src/BLDC_controller.c ****     tmp_0 = 32767;
 934:Src/BLDC_controller.c ****   } else {
 935:Src/BLDC_controller.c ****     if (tmp_0 < -32768) {
 1808              		.loc 1 935 5 is_stmt 1 view .LVU543
 1809              		.loc 1 935 8 is_stmt 0 view .LVU544
 1810 0088 13F5004F 		cmn	r3, #32768
 1811 008c 03DA     		bge	.L142
 936:Src/BLDC_controller.c ****       tmp_0 = -32768;
 1812              		.loc 1 936 13 view .LVU545
 1813 008e 194B     		ldr	r3, .L166
 1814              	.LVL166:
 1815              		.loc 1 936 13 view .LVU546
 1816 0090 01E0     		b	.L142
 1817              	.LVL167:
 1818              	.L155:
 933:Src/BLDC_controller.c ****     tmp_0 = 32767;
 1819              		.loc 1 933 11 view .LVU547
 1820 0092 47F6FF73 		movw	r3, #32767
 1821              	.LVL168:
 1822              	.L142:
 937:Src/BLDC_controller.c ****     }
 938:Src/BLDC_controller.c ****   }
 939:Src/BLDC_controller.c **** 
 940:Src/BLDC_controller.c ****   /* RelationalOperator: '<S73>/LowerRelop1' incorporates:
 941:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum1'
 942:Src/BLDC_controller.c ****    */
 943:Src/BLDC_controller.c ****   rtb_LowerRelop1_i3 = ((int16_T)tmp_0 > rtu_satMax);
 1823              		.loc 1 943 3 is_stmt 1 view .LVU548
 1824              		.loc 1 943 25 is_stmt 0 view .LVU549
 1825 0096 1BB2     		sxth	r3, r3
 1826              	.LVL169:
 944:Src/BLDC_controller.c **** 
 945:Src/BLDC_controller.c ****   /* RelationalOperator: '<S73>/UpperRelop' incorporates:
 946:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum1'
 947:Src/BLDC_controller.c ****    */
 948:Src/BLDC_controller.c ****   rtb_UpperRelop_i = ((int16_T)tmp_0 < rtu_satMin);
 1827              		.loc 1 948 3 is_stmt 1 view .LVU550
 949:Src/BLDC_controller.c **** 
 950:Src/BLDC_controller.c ****   /* Switch: '<S73>/Switch1' incorporates:
 951:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum1'
 952:Src/BLDC_controller.c ****    *  Switch: '<S73>/Switch3'
 953:Src/BLDC_controller.c ****    */
 954:Src/BLDC_controller.c ****   if (rtb_LowerRelop1_i3) {
 1828              		.loc 1 954 3 view .LVU551
 1829              		.loc 1 954 6 is_stmt 0 view .LVU552
 1830 0098 BB42     		cmp	r3, r7
 1831 009a 14DD     		ble	.L143
 955:Src/BLDC_controller.c ****     *rty_out = rtu_satMax;
 1832              		.loc 1 955 5 is_stmt 1 view .LVU553
 1833              		.loc 1 955 14 is_stmt 0 view .LVU554
 1834 009c 2F80     		strh	r7, [r5]	@ movhi
 1835              	.L144:
 956:Src/BLDC_controller.c ****   } else if (rtb_UpperRelop_i) {
 957:Src/BLDC_controller.c ****     /* Switch: '<S73>/Switch3' */
 958:Src/BLDC_controller.c ****     *rty_out = rtu_satMin;
 959:Src/BLDC_controller.c ****   } else {
ARM GAS  /tmp/ccVzdWer.s 			page 51


 960:Src/BLDC_controller.c ****     *rty_out = (int16_T)tmp_0;
 961:Src/BLDC_controller.c ****   }
 962:Src/BLDC_controller.c **** 
 963:Src/BLDC_controller.c ****   /* End of Switch: '<S73>/Switch1' */
 964:Src/BLDC_controller.c **** 
 965:Src/BLDC_controller.c ****   /* Signum: '<S71>/SignDeltaU2' incorporates:
 966:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum2'
 967:Src/BLDC_controller.c ****    */
 968:Src/BLDC_controller.c ****   if (q0 < 0) {
 1836              		.loc 1 968 3 is_stmt 1 view .LVU555
 1837              		.loc 1 968 6 is_stmt 0 view .LVU556
 1838 009e 002A     		cmp	r2, #0
 1839 00a0 18DB     		blt	.L157
 969:Src/BLDC_controller.c ****     q0 = -1;
 970:Src/BLDC_controller.c ****   } else {
 971:Src/BLDC_controller.c ****     q0 = (q0 > 0);
 1840              		.loc 1 971 5 is_stmt 1 view .LVU557
 1841              		.loc 1 971 14 is_stmt 0 view .LVU558
 1842 00a2 002A     		cmp	r2, #0
 1843 00a4 D4BF     		ite	le
 1844 00a6 0022     		movle	r2, #0
 1845              	.LVL170:
 1846              		.loc 1 971 14 view .LVU559
 1847 00a8 0122     		movgt	r2, #1
 1848              	.LVL171:
 1849              	.L146:
 972:Src/BLDC_controller.c ****   }
 973:Src/BLDC_controller.c **** 
 974:Src/BLDC_controller.c ****   /* End of Signum: '<S71>/SignDeltaU2' */
 975:Src/BLDC_controller.c **** 
 976:Src/BLDC_controller.c ****   /* Signum: '<S71>/SignDeltaU3' incorporates:
 977:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum1'
 978:Src/BLDC_controller.c ****    */
 979:Src/BLDC_controller.c ****   if ((int16_T)tmp_0 < 0) {
 1850              		.loc 1 979 3 is_stmt 1 view .LVU560
 1851              		.loc 1 979 6 is_stmt 0 view .LVU561
 1852 00aa 002B     		cmp	r3, #0
 1853 00ac 15DB     		blt	.L158
 980:Src/BLDC_controller.c ****     tmp = -1;
 981:Src/BLDC_controller.c ****   } else {
 982:Src/BLDC_controller.c ****     tmp = (int16_T)((int16_T)tmp_0 > 0);
 1854              		.loc 1 982 5 is_stmt 1 view .LVU562
 1855              		.loc 1 982 9 is_stmt 0 view .LVU563
 1856 00ae 002B     		cmp	r3, #0
 1857 00b0 D4BF     		ite	le
 1858 00b2 0021     		movle	r1, #0
 1859 00b4 0121     		movgt	r1, #1
 1860              	.LVL172:
 1861              	.L147:
 983:Src/BLDC_controller.c ****   }
 984:Src/BLDC_controller.c **** 
 985:Src/BLDC_controller.c ****   /* End of Signum: '<S71>/SignDeltaU3' */
 986:Src/BLDC_controller.c **** 
 987:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S69>/UnitDelay1' incorporates:
 988:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S71>/DataTypeConv4'
 989:Src/BLDC_controller.c ****    *  Logic: '<S69>/AND1'
 990:Src/BLDC_controller.c ****    *  Logic: '<S71>/AND1'
ARM GAS  /tmp/ccVzdWer.s 			page 52


 991:Src/BLDC_controller.c ****    *  RelationalOperator: '<S71>/Equal1'
 992:Src/BLDC_controller.c ****    */
 993:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = ((q0 == tmp) && (rtb_LowerRelop1_i3 ||
 1862              		.loc 1 993 3 is_stmt 1 view .LVU564
 1863              		.loc 1 993 45 is_stmt 0 view .LVU565
 1864 00b6 9142     		cmp	r1, r2
 1865 00b8 12D0     		beq	.L165
 1866 00ba 0023     		movs	r3, #0
 1867              	.LVL173:
 1868              	.L148:
 1869              		.loc 1 993 30 discriminator 8 view .LVU566
 1870 00bc F370     		strb	r3, [r6, #3]
 994:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 995:Src/BLDC_controller.c **** 
 996:Src/BLDC_controller.c ****   /* Update for Delay: '<S72>/Resettable Delay' */
 997:Src/BLDC_controller.c ****   localDW->icLoad = 0U;
 1871              		.loc 1 997 3 is_stmt 1 discriminator 8 view .LVU567
 1872              		.loc 1 997 19 is_stmt 0 discriminator 8 view .LVU568
 1873 00be 0023     		movs	r3, #0
 1874 00c0 B370     		strb	r3, [r6, #2]
 998:Src/BLDC_controller.c ****   localDW->ResettableDelay_DSTATE = rtb_Sum1_bm;
 1875              		.loc 1 998 3 is_stmt 1 discriminator 8 view .LVU569
 1876              		.loc 1 998 35 is_stmt 0 discriminator 8 view .LVU570
 1877 00c2 3480     		strh	r4, [r6]	@ movhi
 999:Src/BLDC_controller.c **** }
 1878              		.loc 1 999 1 discriminator 8 view .LVU571
 1879 00c4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1880              	.LVL174:
 1881              	.L143:
 956:Src/BLDC_controller.c ****     /* Switch: '<S73>/Switch3' */
 1882              		.loc 1 956 10 is_stmt 1 view .LVU572
 956:Src/BLDC_controller.c ****     /* Switch: '<S73>/Switch3' */
 1883              		.loc 1 956 13 is_stmt 0 view .LVU573
 1884 00c6 6345     		cmp	r3, ip
 1885 00c8 02DA     		bge	.L145
 958:Src/BLDC_controller.c ****   } else {
 1886              		.loc 1 958 5 is_stmt 1 view .LVU574
 958:Src/BLDC_controller.c ****   } else {
 1887              		.loc 1 958 14 is_stmt 0 view .LVU575
 1888 00ca A5F800C0 		strh	ip, [r5]	@ movhi
 1889 00ce E6E7     		b	.L144
 1890              	.L145:
 960:Src/BLDC_controller.c ****   }
 1891              		.loc 1 960 5 is_stmt 1 view .LVU576
 960:Src/BLDC_controller.c ****   }
 1892              		.loc 1 960 14 is_stmt 0 view .LVU577
 1893 00d0 2B80     		strh	r3, [r5]	@ movhi
 1894 00d2 E4E7     		b	.L144
 1895              	.L157:
 969:Src/BLDC_controller.c ****   } else {
 1896              		.loc 1 969 8 view .LVU578
 1897 00d4 4FF0FF32 		mov	r2, #-1
 1898              	.LVL175:
 969:Src/BLDC_controller.c ****   } else {
 1899              		.loc 1 969 8 view .LVU579
 1900 00d8 E7E7     		b	.L146
 1901              	.LVL176:
ARM GAS  /tmp/ccVzdWer.s 			page 53


 1902              	.L158:
 980:Src/BLDC_controller.c ****   } else {
 1903              		.loc 1 980 9 view .LVU580
 1904 00da 4FF0FF31 		mov	r1, #-1
 1905 00de EAE7     		b	.L147
 1906              	.LVL177:
 1907              	.L165:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1908              		.loc 1 993 45 discriminator 1 view .LVU581
 1909 00e0 BB42     		cmp	r3, r7
 1910 00e2 03DC     		bgt	.L160
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1911              		.loc 1 993 68 discriminator 4 view .LVU582
 1912 00e4 6345     		cmp	r3, ip
 1913 00e6 03DB     		blt	.L161
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1914              		.loc 1 993 45 view .LVU583
 1915 00e8 0023     		movs	r3, #0
 1916              	.LVL178:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1917              		.loc 1 993 45 view .LVU584
 1918 00ea E7E7     		b	.L148
 1919              	.LVL179:
 1920              	.L160:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1921              		.loc 1 993 45 view .LVU585
 1922 00ec 0123     		movs	r3, #1
 1923              	.LVL180:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1924              		.loc 1 993 45 view .LVU586
 1925 00ee E5E7     		b	.L148
 1926              	.LVL181:
 1927              	.L161:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1928              		.loc 1 993 45 view .LVU587
 1929 00f0 0123     		movs	r3, #1
 1930              	.LVL182:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1931              		.loc 1 993 45 view .LVU588
 1932 00f2 E3E7     		b	.L148
 1933              	.L167:
 1934              		.align	2
 1935              	.L166:
 1936 00f4 0080FFFF 		.word	-32768
 1937              		.cfi_endproc
 1938              	.LFE23:
 1940              		.section	.text.BLDC_controller_step,"ax",%progbits
 1941              		.align	1
 1942              		.global	BLDC_controller_step
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1946              		.fpu softvfp
 1948              	BLDC_controller_step:
 1949              	.LVL183:
 1950              	.LFB24:
1000:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 54


1001:Src/BLDC_controller.c **** /* Model step function */
1002:Src/BLDC_controller.c **** void BLDC_controller_step(RT_MODEL *const rtM)
1003:Src/BLDC_controller.c **** {
 1951              		.loc 1 1003 1 is_stmt 1 view -0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 56
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 1955              		.loc 1 1003 1 is_stmt 0 view .LVU590
 1956 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1957              	.LCFI16:
 1958              		.cfi_def_cfa_offset 36
 1959              		.cfi_offset 4, -36
 1960              		.cfi_offset 5, -32
 1961              		.cfi_offset 6, -28
 1962              		.cfi_offset 7, -24
 1963              		.cfi_offset 8, -20
 1964              		.cfi_offset 9, -16
 1965              		.cfi_offset 10, -12
 1966              		.cfi_offset 11, -8
 1967              		.cfi_offset 14, -4
 1968 0004 95B0     		sub	sp, sp, #84
 1969              	.LCFI17:
 1970              		.cfi_def_cfa_offset 120
1004:Src/BLDC_controller.c ****   P *rtP = ((P *) rtM->defaultParam);
 1971              		.loc 1 1004 3 is_stmt 1 view .LVU591
 1972              		.loc 1 1004 6 is_stmt 0 view .LVU592
 1973 0006 0568     		ldr	r5, [r0]
 1974              	.LVL184:
1005:Src/BLDC_controller.c ****   DW *rtDW = ((DW *) rtM->dwork);
 1975              		.loc 1 1005 3 is_stmt 1 view .LVU593
 1976              		.loc 1 1005 7 is_stmt 0 view .LVU594
 1977 0008 C468     		ldr	r4, [r0, #12]
 1978              	.LVL185:
1006:Src/BLDC_controller.c ****   ExtU *rtU = (ExtU *) rtM->inputs;
 1979              		.loc 1 1006 3 is_stmt 1 view .LVU595
 1980              		.loc 1 1006 9 is_stmt 0 view .LVU596
 1981 000a 4668     		ldr	r6, [r0, #4]
 1982              	.LVL186:
1007:Src/BLDC_controller.c ****   ExtY *rtY = (ExtY *) rtM->outputs;
 1983              		.loc 1 1007 3 is_stmt 1 view .LVU597
 1984              		.loc 1 1007 9 is_stmt 0 view .LVU598
 1985 000c 8768     		ldr	r7, [r0, #8]
 1986              	.LVL187:
1008:Src/BLDC_controller.c ****   boolean_T rtb_LogicalOperator;
 1987              		.loc 1 1008 3 is_stmt 1 view .LVU599
1009:Src/BLDC_controller.c ****   int8_T rtb_Sum2_h;
 1988              		.loc 1 1009 3 view .LVU600
1010:Src/BLDC_controller.c ****   boolean_T rtb_RelationalOperator4_d;
 1989              		.loc 1 1010 3 view .LVU601
1011:Src/BLDC_controller.c ****   boolean_T rtb_UnitDelay5_e;
 1990              		.loc 1 1011 3 view .LVU602
1012:Src/BLDC_controller.c ****   uint8_T rtb_a_elecAngle_XA_g;
 1991              		.loc 1 1012 3 view .LVU603
1013:Src/BLDC_controller.c ****   boolean_T rtb_LogicalOperator1_j;
 1992              		.loc 1 1013 3 view .LVU604
1014:Src/BLDC_controller.c ****   boolean_T rtb_LogicalOperator2_p;
 1993              		.loc 1 1014 3 view .LVU605
ARM GAS  /tmp/ccVzdWer.s 			page 55


1015:Src/BLDC_controller.c ****   boolean_T rtb_RelationalOperator1_mv;
 1994              		.loc 1 1015 3 view .LVU606
1016:Src/BLDC_controller.c ****   int16_T rtb_Switch1_l;
 1995              		.loc 1 1016 3 view .LVU607
1017:Src/BLDC_controller.c ****   int16_T rtb_Saturation;
 1996              		.loc 1 1017 3 view .LVU608
1018:Src/BLDC_controller.c ****   int16_T rtb_Saturation1;
 1997              		.loc 1 1018 3 view .LVU609
1019:Src/BLDC_controller.c ****   int32_T rtb_Sum1_jt;
 1998              		.loc 1 1019 3 view .LVU610
1020:Src/BLDC_controller.c ****   int16_T rtb_Merge_m;
 1999              		.loc 1 1020 3 view .LVU611
1021:Src/BLDC_controller.c ****   int16_T rtb_Merge1;
 2000              		.loc 1 1021 3 view .LVU612
1022:Src/BLDC_controller.c ****   int16_T rtb_TmpSignalConversionAtLow_Pa[2];
 2001              		.loc 1 1022 3 view .LVU613
1023:Src/BLDC_controller.c ****   int32_T rtb_Switch1;
 2002              		.loc 1 1023 3 view .LVU614
1024:Src/BLDC_controller.c ****   int32_T rtb_Sum1;
 2003              		.loc 1 1024 3 view .LVU615
1025:Src/BLDC_controller.c ****   int32_T rtb_Gain3;
 2004              		.loc 1 1025 3 view .LVU616
1026:Src/BLDC_controller.c ****   uint8_T Sum;
 2005              		.loc 1 1026 3 view .LVU617
1027:Src/BLDC_controller.c ****   int16_T Switch2;
 2006              		.loc 1 1027 3 view .LVU618
1028:Src/BLDC_controller.c ****   int16_T Abs5;
 2007              		.loc 1 1028 3 view .LVU619
1029:Src/BLDC_controller.c ****   int16_T DataTypeConversion2;
 2008              		.loc 1 1029 3 view .LVU620
1030:Src/BLDC_controller.c ****   int16_T tmp[4];
 2009              		.loc 1 1030 3 view .LVU621
1031:Src/BLDC_controller.c ****   int8_T UnitDelay3;
 2010              		.loc 1 1031 3 view .LVU622
1032:Src/BLDC_controller.c **** 
1033:Src/BLDC_controller.c ****   /* Outputs for Atomic SubSystem: '<Root>/BLDC_controller' */
1034:Src/BLDC_controller.c ****   /* Sum: '<S11>/Sum' incorporates:
1035:Src/BLDC_controller.c ****    *  Gain: '<S11>/g_Ha'
1036:Src/BLDC_controller.c ****    *  Gain: '<S11>/g_Hb'
1037:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallA '
1038:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallB'
1039:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallC'
1040:Src/BLDC_controller.c ****    */
1041:Src/BLDC_controller.c ****   Sum = (uint8_T)((uint32_T)(uint8_T)((uint32_T)(uint8_T)(rtU->b_hallA << 2) +
 2011              		.loc 1 1041 3 view .LVU623
 2012              		.loc 1 1041 62 is_stmt 0 view .LVU624
 2013 000e 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 2014              		.loc 1 1041 49 view .LVU625
 2015 0010 9900     		lsls	r1, r3, #2
 2016 0012 C9B2     		uxtb	r1, r1
1042:Src/BLDC_controller.c ****     (uint8_T)(rtU->b_hallB << 1)) + rtU->b_hallC);
 2017              		.loc 1 1042 18 view .LVU626
 2018 0014 7279     		ldrb	r2, [r6, #5]	@ zero_extendqisi2
 2019              		.loc 1 1042 5 view .LVU627
 2020 0016 5000     		lsls	r0, r2, #1
 2021              	.LVL188:
 2022              		.loc 1 1042 5 view .LVU628
ARM GAS  /tmp/ccVzdWer.s 			page 56


 2023 0018 C0B2     		uxtb	r0, r0
1041:Src/BLDC_controller.c ****     (uint8_T)(rtU->b_hallB << 1)) + rtU->b_hallC);
 2024              		.loc 1 1041 29 view .LVU629
 2025 001a 0144     		add	r1, r1, r0
 2026 001c C9B2     		uxtb	r1, r1
 2027              		.loc 1 1042 40 view .LVU630
 2028 001e B079     		ldrb	r0, [r6, #6]	@ zero_extendqisi2
1041:Src/BLDC_controller.c ****     (uint8_T)(rtU->b_hallB << 1)) + rtU->b_hallC);
 2029              		.loc 1 1041 7 view .LVU631
 2030 0020 0144     		add	r1, r1, r0
 2031 0022 C9B2     		uxtb	r1, r1
 2032 0024 0991     		str	r1, [sp, #36]
 2033              	.LVL189:
1043:Src/BLDC_controller.c **** 
1044:Src/BLDC_controller.c ****   /* Logic: '<S10>/Logical Operator' incorporates:
1045:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallA '
1046:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallB'
1047:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallC'
1048:Src/BLDC_controller.c ****    *  UnitDelay: '<S10>/UnitDelay1'
1049:Src/BLDC_controller.c ****    *  UnitDelay: '<S10>/UnitDelay2'
1050:Src/BLDC_controller.c ****    *  UnitDelay: '<S10>/UnitDelay3'
1051:Src/BLDC_controller.c ****    */
1052:Src/BLDC_controller.c ****   rtb_LogicalOperator = (boolean_T)((rtU->b_hallA != 0) ^ (rtU->b_hallB != 0) ^
 2034              		.loc 1 1052 3 is_stmt 1 view .LVU632
 2035              		.loc 1 1052 73 is_stmt 0 view .LVU633
 2036 0026 003A     		subs	r2, r2, #0
 2037 0028 18BF     		it	ne
 2038 002a 0122     		movne	r2, #1
1053:Src/BLDC_controller.c ****     (rtU->b_hallC != 0) ^ (rtDW->UnitDelay3_DSTATE_fy != 0) ^
 2039              		.loc 1 1053 32 view .LVU634
 2040 002c 94F89AC0 		ldrb	ip, [r4, #154]	@ zero_extendqisi2
1054:Src/BLDC_controller.c ****     (rtDW->UnitDelay1_DSTATE != 0)) ^ (rtDW->UnitDelay2_DSTATE_f != 0);
 2041              		.loc 1 1054 10 view .LVU635
 2042 0030 94F89B10 		ldrb	r1, [r4, #155]	@ zero_extendqisi2
 2043 0034 002B     		cmp	r3, #0
 2044 0036 0CBF     		ite	eq
 2045 0038 1346     		moveq	r3, r2
 2046 003a 82F00103 		eorne	r3, r2, #1
 2047 003e 0028     		cmp	r0, #0
 2048 0040 18BF     		it	ne
 2049 0042 83F00103 		eorne	r3, r3, #1
 2050 0046 BCF1000F 		cmp	ip, #0
 2051 004a 18BF     		it	ne
 2052 004c 83F00103 		eorne	r3, r3, #1
 2053 0050 0029     		cmp	r1, #0
 2054 0052 18BF     		it	ne
 2055 0054 83F00103 		eorne	r3, r3, #1
 2056              		.loc 1 1054 44 view .LVU636
 2057 0058 94F89C10 		ldrb	r1, [r4, #156]	@ zero_extendqisi2
 2058              		.loc 1 1054 66 view .LVU637
 2059 005c 0039     		subs	r1, r1, #0
 2060 005e 18BF     		it	ne
 2061 0060 0121     		movne	r1, #1
1052:Src/BLDC_controller.c ****     (rtU->b_hallC != 0) ^ (rtDW->UnitDelay3_DSTATE_fy != 0) ^
 2062              		.loc 1 1052 23 view .LVU638
 2063 0062 81EA0302 		eor	r2, r1, r3
 2064              	.LVL190:
ARM GAS  /tmp/ccVzdWer.s 			page 57


1055:Src/BLDC_controller.c **** 
1056:Src/BLDC_controller.c ****   /* If: '<S13>/If2' incorporates:
1057:Src/BLDC_controller.c ****    *  If: '<S3>/If2'
1058:Src/BLDC_controller.c ****    *  Inport: '<S17>/z_counterRawPrev'
1059:Src/BLDC_controller.c ****    *  UnitDelay: '<S13>/UnitDelay3'
1060:Src/BLDC_controller.c ****    */
1061:Src/BLDC_controller.c ****   if (rtb_LogicalOperator) {
 2065              		.loc 1 1061 3 is_stmt 1 view .LVU639
 2066              		.loc 1 1061 6 is_stmt 0 view .LVU640
 2067 0066 9942     		cmp	r1, r3
 2068 0068 56D0     		beq	.L169
1062:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S3>/F01_03_Direction_Detection' incorporates:
1063:Src/BLDC_controller.c ****      *  ActionPort: '<S12>/Action Port'
1064:Src/BLDC_controller.c ****      */
1065:Src/BLDC_controller.c ****     /* UnitDelay: '<S12>/UnitDelay3' */
1066:Src/BLDC_controller.c ****     UnitDelay3 = rtDW->Switch2_e;
 2069              		.loc 1 1066 5 is_stmt 1 view .LVU641
 2070              		.loc 1 1066 16 is_stmt 0 view .LVU642
 2071 006a 94F98EE0 		ldrsb	lr, [r4, #142]
 2072              	.LVL191:
1067:Src/BLDC_controller.c **** 
1068:Src/BLDC_controller.c ****     /* Sum: '<S12>/Sum2' incorporates:
1069:Src/BLDC_controller.c ****      *  Constant: '<S11>/vec_hallToPos'
1070:Src/BLDC_controller.c ****      *  Selector: '<S11>/Selector'
1071:Src/BLDC_controller.c ****      *  UnitDelay: '<S12>/UnitDelay2'
1072:Src/BLDC_controller.c ****      */
1073:Src/BLDC_controller.c ****     rtb_Sum2_h = (int8_T)(rtConstP.vec_hallToPos_Value[Sum] -
 2073              		.loc 1 1073 5 is_stmt 1 view .LVU643
 2074              		.loc 1 1073 55 is_stmt 0 view .LVU644
 2075 006e BE4B     		ldr	r3, .L467
 2076 0070 0999     		ldr	r1, [sp, #36]
 2077 0072 0B44     		add	r3, r3, r1
 2078 0074 93F98817 		ldrsb	r1, [r3, #1928]
 2079 0078 CBB2     		uxtb	r3, r1
1074:Src/BLDC_controller.c ****                           rtDW->UnitDelay2_DSTATE_b);
 2080              		.loc 1 1074 31 view .LVU645
 2081 007a 94F88F00 		ldrb	r0, [r4, #143]	@ zero_extendqisi2
1073:Src/BLDC_controller.c ****                           rtDW->UnitDelay2_DSTATE_b);
 2082              		.loc 1 1073 61 view .LVU646
 2083 007e 1B1A     		subs	r3, r3, r0
1073:Src/BLDC_controller.c ****                           rtDW->UnitDelay2_DSTATE_b);
 2084              		.loc 1 1073 16 view .LVU647
 2085 0080 5BB2     		sxtb	r3, r3
 2086              	.LVL192:
1075:Src/BLDC_controller.c **** 
1076:Src/BLDC_controller.c ****     /* Switch: '<S12>/Switch2' incorporates:
1077:Src/BLDC_controller.c ****      *  Constant: '<S12>/Constant20'
1078:Src/BLDC_controller.c ****      *  Constant: '<S12>/Constant23'
1079:Src/BLDC_controller.c ****      *  Constant: '<S12>/Constant24'
1080:Src/BLDC_controller.c ****      *  Constant: '<S12>/Constant8'
1081:Src/BLDC_controller.c ****      *  Logic: '<S12>/Logical Operator3'
1082:Src/BLDC_controller.c ****      *  RelationalOperator: '<S12>/Relational Operator1'
1083:Src/BLDC_controller.c ****      *  RelationalOperator: '<S12>/Relational Operator6'
1084:Src/BLDC_controller.c ****      */
1085:Src/BLDC_controller.c ****     if ((rtb_Sum2_h == 1) || (rtb_Sum2_h == -5)) {
 2087              		.loc 1 1085 5 is_stmt 1 view .LVU648
 2088              		.loc 1 1085 8 is_stmt 0 view .LVU649
ARM GAS  /tmp/ccVzdWer.s 			page 58


 2089 0082 012B     		cmp	r3, #1
 2090 0084 06D0     		beq	.L170
 2091              		.loc 1 1085 27 discriminator 1 view .LVU650
 2092 0086 13F1050F 		cmn	r3, #5
 2093 008a 03D0     		beq	.L170
1086:Src/BLDC_controller.c ****       rtDW->Switch2_e = 1;
1087:Src/BLDC_controller.c ****     } else {
1088:Src/BLDC_controller.c ****       rtDW->Switch2_e = -1;
 2094              		.loc 1 1088 7 is_stmt 1 view .LVU651
 2095              		.loc 1 1088 23 is_stmt 0 view .LVU652
 2096 008c FF23     		movs	r3, #255
 2097              	.LVL193:
 2098              		.loc 1 1088 23 view .LVU653
 2099 008e 84F88E30 		strb	r3, [r4, #142]
 2100 0092 02E0     		b	.L172
 2101              	.LVL194:
 2102              	.L170:
1086:Src/BLDC_controller.c ****       rtDW->Switch2_e = 1;
 2103              		.loc 1 1086 7 is_stmt 1 view .LVU654
1086:Src/BLDC_controller.c ****       rtDW->Switch2_e = 1;
 2104              		.loc 1 1086 23 is_stmt 0 view .LVU655
 2105 0094 0123     		movs	r3, #1
 2106              	.LVL195:
1086:Src/BLDC_controller.c ****       rtDW->Switch2_e = 1;
 2107              		.loc 1 1086 23 view .LVU656
 2108 0096 84F88E30 		strb	r3, [r4, #142]
 2109              	.L172:
1089:Src/BLDC_controller.c ****     }
1090:Src/BLDC_controller.c **** 
1091:Src/BLDC_controller.c ****     /* End of Switch: '<S12>/Switch2' */
1092:Src/BLDC_controller.c **** 
1093:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S12>/UnitDelay2' incorporates:
1094:Src/BLDC_controller.c ****      *  Constant: '<S11>/vec_hallToPos'
1095:Src/BLDC_controller.c ****      *  Selector: '<S11>/Selector'
1096:Src/BLDC_controller.c ****      */
1097:Src/BLDC_controller.c ****     rtDW->UnitDelay2_DSTATE_b = rtConstP.vec_hallToPos_Value[Sum];
 2110              		.loc 1 1097 5 is_stmt 1 view .LVU657
 2111              		.loc 1 1097 31 is_stmt 0 view .LVU658
 2112 009a 84F88F10 		strb	r1, [r4, #143]
1098:Src/BLDC_controller.c **** 
1099:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S3>/F01_03_Direction_Detection' */
1100:Src/BLDC_controller.c **** 
1101:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S13>/Raw_Motor_Speed_Estimation' incorporates:
1102:Src/BLDC_controller.c ****      *  ActionPort: '<S17>/Action Port'
1103:Src/BLDC_controller.c ****      */
1104:Src/BLDC_controller.c ****     rtDW->z_counterRawPrev = rtDW->UnitDelay3_DSTATE;
 2113              		.loc 1 1104 5 is_stmt 1 view .LVU659
 2114              		.loc 1 1104 34 is_stmt 0 view .LVU660
 2115 009e B4F98000 		ldrsh	r0, [r4, #128]
 2116              	.LVL196:
 2117              		.loc 1 1104 28 view .LVU661
 2118 00a2 A4F85600 		strh	r0, [r4, #86]	@ movhi
1105:Src/BLDC_controller.c **** 
1106:Src/BLDC_controller.c ****     /* Sum: '<S17>/Sum7' incorporates:
1107:Src/BLDC_controller.c ****      *  Inport: '<S17>/z_counterRawPrev'
1108:Src/BLDC_controller.c ****      *  UnitDelay: '<S13>/UnitDelay3'
1109:Src/BLDC_controller.c ****      *  UnitDelay: '<S17>/UnitDelay4'
ARM GAS  /tmp/ccVzdWer.s 			page 59


1110:Src/BLDC_controller.c ****      */
1111:Src/BLDC_controller.c ****     Switch2 = (int16_T)(rtDW->z_counterRawPrev - rtDW->UnitDelay4_DSTATE);
 2119              		.loc 1 1111 5 is_stmt 1 view .LVU662
 2120              		.loc 1 1111 29 is_stmt 0 view .LVU663
 2121 00a6 1FFA80F8 		uxth	r8, r0
 2122              		.loc 1 1111 54 view .LVU664
 2123 00aa B4F88210 		ldrh	r1, [r4, #130]
 2124              		.loc 1 1111 48 view .LVU665
 2125 00ae A8EB0103 		sub	r3, r8, r1
 2126              		.loc 1 1111 13 view .LVU666
 2127 00b2 1BB2     		sxth	r3, r3
 2128              	.LVL197:
1112:Src/BLDC_controller.c **** 
1113:Src/BLDC_controller.c ****     /* Abs: '<S17>/Abs2' */
1114:Src/BLDC_controller.c ****     if (Switch2 < 0) {
 2129              		.loc 1 1114 5 is_stmt 1 view .LVU667
 2130              		.loc 1 1114 8 is_stmt 0 view .LVU668
 2131 00b4 002B     		cmp	r3, #0
 2132 00b6 43DB     		blt	.L433
 2133              	.LVL198:
 2134              	.L173:
1115:Src/BLDC_controller.c ****       rtb_Switch1_l = (int16_T)-Switch2;
1116:Src/BLDC_controller.c ****     } else {
1117:Src/BLDC_controller.c ****       rtb_Switch1_l = Switch2;
1118:Src/BLDC_controller.c ****     }
1119:Src/BLDC_controller.c **** 
1120:Src/BLDC_controller.c ****     /* End of Abs: '<S17>/Abs2' */
1121:Src/BLDC_controller.c **** 
1122:Src/BLDC_controller.c ****     /* Relay: '<S17>/dz_cntTrnsDet' */
1123:Src/BLDC_controller.c ****     if (rtb_Switch1_l >= rtP->dz_cntTrnsDetHi) {
 2135              		.loc 1 1123 5 is_stmt 1 view .LVU669
 2136              		.loc 1 1123 29 is_stmt 0 view .LVU670
 2137 00b8 B5F90410 		ldrsh	r1, [r5, #4]
 2138              	.LVL199:
 2139              		.loc 1 1123 8 view .LVU671
 2140 00bc 9942     		cmp	r1, r3
 2141 00be 43DC     		bgt	.L174
1124:Src/BLDC_controller.c ****       rtDW->dz_cntTrnsDet_Mode = true;
 2142              		.loc 1 1124 7 is_stmt 1 view .LVU672
 2143              		.loc 1 1124 32 is_stmt 0 view .LVU673
 2144 00c0 0123     		movs	r3, #1
 2145              	.LVL200:
 2146              		.loc 1 1124 32 view .LVU674
 2147 00c2 84F8A930 		strb	r3, [r4, #169]
 2148              	.L175:
1125:Src/BLDC_controller.c ****     } else {
1126:Src/BLDC_controller.c ****       if (rtb_Switch1_l <= rtP->dz_cntTrnsDetLo) {
1127:Src/BLDC_controller.c ****         rtDW->dz_cntTrnsDet_Mode = false;
1128:Src/BLDC_controller.c ****       }
1129:Src/BLDC_controller.c ****     }
1130:Src/BLDC_controller.c **** 
1131:Src/BLDC_controller.c ****     rtDW->dz_cntTrnsDet = rtDW->dz_cntTrnsDet_Mode;
 2149              		.loc 1 1131 5 is_stmt 1 view .LVU675
 2150              		.loc 1 1131 31 is_stmt 0 view .LVU676
 2151 00c6 94F8A910 		ldrb	r1, [r4, #169]	@ zero_extendqisi2
 2152              		.loc 1 1131 25 view .LVU677
 2153 00ca 84F8A210 		strb	r1, [r4, #162]
ARM GAS  /tmp/ccVzdWer.s 			page 60


1132:Src/BLDC_controller.c **** 
1133:Src/BLDC_controller.c ****     /* End of Relay: '<S17>/dz_cntTrnsDet' */
1134:Src/BLDC_controller.c **** 
1135:Src/BLDC_controller.c ****     /* RelationalOperator: '<S17>/Relational Operator4' */
1136:Src/BLDC_controller.c ****     rtb_RelationalOperator4_d = (rtDW->Switch2_e != UnitDelay3);
 2154              		.loc 1 1136 5 is_stmt 1 view .LVU678
 2155              		.loc 1 1136 38 is_stmt 0 view .LVU679
 2156 00ce 94F98E30 		ldrsb	r3, [r4, #142]
 2157              		.loc 1 1136 50 view .LVU680
 2158 00d2 7345     		cmp	r3, lr
 2159 00d4 14BF     		ite	ne
 2160 00d6 4FF0010C 		movne	ip, #1
 2161 00da 4FF0000C 		moveq	ip, #0
 2162              	.LVL201:
1137:Src/BLDC_controller.c **** 
1138:Src/BLDC_controller.c ****     /* Switch: '<S17>/Switch3' incorporates:
1139:Src/BLDC_controller.c ****      *  Constant: '<S17>/Constant4'
1140:Src/BLDC_controller.c ****      *  Logic: '<S17>/Logical Operator1'
1141:Src/BLDC_controller.c ****      *  Switch: '<S17>/Switch1'
1142:Src/BLDC_controller.c ****      *  Switch: '<S17>/Switch2'
1143:Src/BLDC_controller.c ****      *  UnitDelay: '<S17>/UnitDelay1'
1144:Src/BLDC_controller.c ****      */
1145:Src/BLDC_controller.c ****     if (rtb_RelationalOperator4_d && rtDW->UnitDelay1_DSTATE_n) {
 2163              		.loc 1 1145 5 is_stmt 1 view .LVU681
 2164              		.loc 1 1145 8 is_stmt 0 view .LVU682
 2165 00de 04D0     		beq	.L176
 2166              		.loc 1 1145 42 discriminator 1 view .LVU683
 2167 00e0 94F8A790 		ldrb	r9, [r4, #167]	@ zero_extendqisi2
 2168              		.loc 1 1145 35 discriminator 1 view .LVU684
 2169 00e4 B9F1000F 		cmp	r9, #0
 2170 00e8 54D1     		bne	.L346
 2171              	.L176:
1146:Src/BLDC_controller.c ****       rtb_Switch1_l = 0;
1147:Src/BLDC_controller.c ****     } else if (rtb_RelationalOperator4_d) {
 2172              		.loc 1 1147 12 is_stmt 1 view .LVU685
 2173              		.loc 1 1147 15 is_stmt 0 view .LVU686
 2174 00ea 7345     		cmp	r3, lr
 2175 00ec 34D0     		beq	.L178
1148:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch2' incorporates:
1149:Src/BLDC_controller.c ****        *  UnitDelay: '<S13>/UnitDelay4'
1150:Src/BLDC_controller.c ****        */
1151:Src/BLDC_controller.c ****       rtb_Switch1_l = rtDW->UnitDelay4_DSTATE_e;
 2176              		.loc 1 1151 7 is_stmt 1 view .LVU687
 2177              		.loc 1 1151 21 is_stmt 0 view .LVU688
 2178 00ee B4F98A10 		ldrsh	r1, [r4, #138]
 2179              	.LVL202:
 2180              	.L177:
1152:Src/BLDC_controller.c ****     } else if (rtDW->dz_cntTrnsDet) {
1153:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch1' incorporates:
1154:Src/BLDC_controller.c ****        *  Constant: '<S17>/cf_speedCoef'
1155:Src/BLDC_controller.c ****        *  Product: '<S17>/Divide14'
1156:Src/BLDC_controller.c ****        *  Switch: '<S17>/Switch2'
1157:Src/BLDC_controller.c ****        */
1158:Src/BLDC_controller.c ****       rtb_Switch1_l = (int16_T)((rtP->cf_speedCoef << 4) /
1159:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
1160:Src/BLDC_controller.c ****     } else {
1161:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch1' incorporates:
ARM GAS  /tmp/ccVzdWer.s 			page 61


1162:Src/BLDC_controller.c ****        *  Constant: '<S17>/cf_speedCoef'
1163:Src/BLDC_controller.c ****        *  Gain: '<S17>/g_Ha'
1164:Src/BLDC_controller.c ****        *  Product: '<S17>/Divide13'
1165:Src/BLDC_controller.c ****        *  Sum: '<S17>/Sum13'
1166:Src/BLDC_controller.c ****        *  Switch: '<S17>/Switch2'
1167:Src/BLDC_controller.c ****        *  UnitDelay: '<S17>/UnitDelay2'
1168:Src/BLDC_controller.c ****        *  UnitDelay: '<S17>/UnitDelay3'
1169:Src/BLDC_controller.c ****        *  UnitDelay: '<S17>/UnitDelay5'
1170:Src/BLDC_controller.c ****        */
1171:Src/BLDC_controller.c ****       rtb_Switch1_l = (int16_T)(((uint16_T)(rtP->cf_speedCoef << 2) << 4) /
1172:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
1173:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
1174:Src/BLDC_controller.c ****     }
1175:Src/BLDC_controller.c **** 
1176:Src/BLDC_controller.c ****     /* End of Switch: '<S17>/Switch3' */
1177:Src/BLDC_controller.c **** 
1178:Src/BLDC_controller.c ****     /* Product: '<S17>/Divide11' */
1179:Src/BLDC_controller.c ****     rtDW->Divide11 = (int16_T)(rtb_Switch1_l * rtDW->Switch2_e);
 2181              		.loc 1 1179 5 is_stmt 1 view .LVU689
 2182              		.loc 1 1179 52 is_stmt 0 view .LVU690
 2183 00f2 9BB2     		uxth	r3, r3
 2184              		.loc 1 1179 46 view .LVU691
 2185 00f4 01FB03F3 		mul	r3, r1, r3
 2186              		.loc 1 1179 20 view .LVU692
 2187 00f8 A4F87A30 		strh	r3, [r4, #122]	@ movhi
1180:Src/BLDC_controller.c **** 
1181:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay4' */
1182:Src/BLDC_controller.c ****     rtDW->UnitDelay4_DSTATE = rtDW->z_counterRawPrev;
 2188              		.loc 1 1182 5 is_stmt 1 view .LVU693
 2189              		.loc 1 1182 29 is_stmt 0 view .LVU694
 2190 00fc A4F88200 		strh	r0, [r4, #130]	@ movhi
 2191              	.LVL203:
1183:Src/BLDC_controller.c **** 
1184:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay2' incorporates:
1185:Src/BLDC_controller.c ****      *  UnitDelay: '<S17>/UnitDelay3'
1186:Src/BLDC_controller.c ****      */
1187:Src/BLDC_controller.c ****     rtDW->UnitDelay2_DSTATE = rtDW->UnitDelay3_DSTATE_o;
 2192              		.loc 1 1187 5 is_stmt 1 view .LVU695
 2193              		.loc 1 1187 35 is_stmt 0 view .LVU696
 2194 0100 B4F98630 		ldrsh	r3, [r4, #134]
 2195              		.loc 1 1187 29 view .LVU697
 2196 0104 A4F88430 		strh	r3, [r4, #132]	@ movhi
1188:Src/BLDC_controller.c **** 
1189:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay3' incorporates:
1190:Src/BLDC_controller.c ****      *  UnitDelay: '<S17>/UnitDelay5'
1191:Src/BLDC_controller.c ****      */
1192:Src/BLDC_controller.c ****     rtDW->UnitDelay3_DSTATE_o = rtDW->UnitDelay5_DSTATE;
 2197              		.loc 1 1192 5 is_stmt 1 view .LVU698
 2198              		.loc 1 1192 37 is_stmt 0 view .LVU699
 2199 0108 B4F98830 		ldrsh	r3, [r4, #136]
 2200              		.loc 1 1192 31 view .LVU700
 2201 010c A4F88630 		strh	r3, [r4, #134]	@ movhi
1193:Src/BLDC_controller.c **** 
1194:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay5' */
1195:Src/BLDC_controller.c ****     rtDW->UnitDelay5_DSTATE = rtDW->z_counterRawPrev;
 2202              		.loc 1 1195 5 is_stmt 1 view .LVU701
 2203              		.loc 1 1195 29 is_stmt 0 view .LVU702
ARM GAS  /tmp/ccVzdWer.s 			page 62


 2204 0110 A4F88800 		strh	r0, [r4, #136]	@ movhi
1196:Src/BLDC_controller.c **** 
1197:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay1' */
1198:Src/BLDC_controller.c ****     rtDW->UnitDelay1_DSTATE_n = rtb_RelationalOperator4_d;
 2205              		.loc 1 1198 5 is_stmt 1 view .LVU703
 2206              		.loc 1 1198 31 is_stmt 0 view .LVU704
 2207 0114 84F8A7C0 		strb	ip, [r4, #167]
 2208              	.LVL204:
 2209              	.L169:
1199:Src/BLDC_controller.c **** 
1200:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S13>/Raw_Motor_Speed_Estimation' */
1201:Src/BLDC_controller.c ****   }
1202:Src/BLDC_controller.c **** 
1203:Src/BLDC_controller.c ****   /* End of If: '<S13>/If2' */
1204:Src/BLDC_controller.c **** 
1205:Src/BLDC_controller.c ****   /* Outputs for Atomic SubSystem: '<S13>/Counter' */
1206:Src/BLDC_controller.c **** 
1207:Src/BLDC_controller.c ****   /* Constant: '<S13>/Constant6' incorporates:
1208:Src/BLDC_controller.c ****    *  Constant: '<S13>/z_maxCntRst2'
1209:Src/BLDC_controller.c ****    */
1210:Src/BLDC_controller.c ****   rtb_Switch1_l = (int16_T) Counter(1, rtP->z_maxCntRst, rtb_LogicalOperator,
 2210              		.loc 1 1210 3 is_stmt 1 view .LVU705
 2211              		.loc 1 1210 29 is_stmt 0 view .LVU706
 2212 0118 04F14003 		add	r3, r4, #64
 2213 011c B5F90A10 		ldrsh	r1, [r5, #10]
 2214 0120 0120     		movs	r0, #1
 2215 0122 FFF7FEFF 		bl	Counter
 2216              	.LVL205:
 2217              		.loc 1 1210 29 view .LVU707
 2218 0126 0C90     		str	r0, [sp, #48]
 2219              	.LVL206:
1211:Src/BLDC_controller.c ****     &rtDW->Counter_e);
1212:Src/BLDC_controller.c **** 
1213:Src/BLDC_controller.c ****   /* End of Outputs for SubSystem: '<S13>/Counter' */
1214:Src/BLDC_controller.c **** 
1215:Src/BLDC_controller.c ****   /* Switch: '<S13>/Switch2' incorporates:
1216:Src/BLDC_controller.c ****    *  Constant: '<S13>/Constant4'
1217:Src/BLDC_controller.c ****    *  Constant: '<S13>/z_maxCntRst'
1218:Src/BLDC_controller.c ****    *  RelationalOperator: '<S13>/Relational Operator2'
1219:Src/BLDC_controller.c ****    */
1220:Src/BLDC_controller.c ****   if (rtb_Switch1_l > rtP->z_maxCntRst) {
 2220              		.loc 1 1220 3 is_stmt 1 view .LVU708
 2221              		.loc 1 1220 26 is_stmt 0 view .LVU709
 2222 0128 B5F90A30 		ldrsh	r3, [r5, #10]
 2223              		.loc 1 1220 6 view .LVU710
 2224 012c 8342     		cmp	r3, r0
 2225 012e 37DB     		blt	.L347
1221:Src/BLDC_controller.c ****     Switch2 = 0;
1222:Src/BLDC_controller.c ****   } else {
1223:Src/BLDC_controller.c ****     Switch2 = rtDW->Divide11;
 2226              		.loc 1 1223 5 is_stmt 1 view .LVU711
 2227              		.loc 1 1223 13 is_stmt 0 view .LVU712
 2228 0130 B4F97A30 		ldrsh	r3, [r4, #122]
 2229 0134 0B93     		str	r3, [sp, #44]
 2230              	.LVL207:
1224:Src/BLDC_controller.c ****   }
1225:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 63


1226:Src/BLDC_controller.c ****   /* End of Switch: '<S13>/Switch2' */
1227:Src/BLDC_controller.c **** 
1228:Src/BLDC_controller.c ****   /* Abs: '<S13>/Abs5' */
1229:Src/BLDC_controller.c ****   if (Switch2 < 0) {
 2231              		.loc 1 1229 3 is_stmt 1 view .LVU713
 2232              		.loc 1 1229 6 is_stmt 0 view .LVU714
 2233 0136 002B     		cmp	r3, #0
 2234 0138 2EDB     		blt	.L434
1223:Src/BLDC_controller.c ****   }
 2235              		.loc 1 1223 13 view .LVU715
 2236 013a 0B9B     		ldr	r3, [sp, #44]
1223:Src/BLDC_controller.c ****   }
 2237              		.loc 1 1223 13 view .LVU716
 2238 013c 0793     		str	r3, [sp, #28]
 2239 013e 32E0     		b	.L180
 2240              	.LVL208:
 2241              	.L433:
1115:Src/BLDC_controller.c ****     } else {
 2242              		.loc 1 1115 7 is_stmt 1 view .LVU717
1115:Src/BLDC_controller.c ****     } else {
 2243              		.loc 1 1115 23 is_stmt 0 view .LVU718
 2244 0140 A1EB0803 		sub	r3, r1, r8
 2245              	.LVL209:
1115:Src/BLDC_controller.c ****     } else {
 2246              		.loc 1 1115 21 view .LVU719
 2247 0144 1BB2     		sxth	r3, r3
 2248              	.LVL210:
1115:Src/BLDC_controller.c ****     } else {
 2249              		.loc 1 1115 21 view .LVU720
 2250 0146 B7E7     		b	.L173
 2251              	.LVL211:
 2252              	.L174:
1126:Src/BLDC_controller.c ****         rtDW->dz_cntTrnsDet_Mode = false;
 2253              		.loc 1 1126 7 is_stmt 1 view .LVU721
1126:Src/BLDC_controller.c ****         rtDW->dz_cntTrnsDet_Mode = false;
 2254              		.loc 1 1126 31 is_stmt 0 view .LVU722
 2255 0148 B5F90610 		ldrsh	r1, [r5, #6]
1126:Src/BLDC_controller.c ****         rtDW->dz_cntTrnsDet_Mode = false;
 2256              		.loc 1 1126 10 view .LVU723
 2257 014c 9942     		cmp	r1, r3
 2258 014e BADB     		blt	.L175
1127:Src/BLDC_controller.c ****       }
 2259              		.loc 1 1127 9 is_stmt 1 view .LVU724
1127:Src/BLDC_controller.c ****       }
 2260              		.loc 1 1127 34 is_stmt 0 view .LVU725
 2261 0150 0023     		movs	r3, #0
 2262              	.LVL212:
1127:Src/BLDC_controller.c ****       }
 2263              		.loc 1 1127 34 view .LVU726
 2264 0152 84F8A930 		strb	r3, [r4, #169]
 2265 0156 B6E7     		b	.L175
 2266              	.LVL213:
 2267              	.L178:
1152:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch1' incorporates:
 2268              		.loc 1 1152 12 is_stmt 1 view .LVU727
1152:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch1' incorporates:
 2269              		.loc 1 1152 15 is_stmt 0 view .LVU728
ARM GAS  /tmp/ccVzdWer.s 			page 64


 2270 0158 29B1     		cbz	r1, .L179
1158:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2271              		.loc 1 1158 7 is_stmt 1 view .LVU729
1158:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2272              		.loc 1 1158 37 is_stmt 0 view .LVU730
 2273 015a A989     		ldrh	r1, [r5, #12]
1158:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2274              		.loc 1 1158 52 view .LVU731
 2275 015c 0901     		lsls	r1, r1, #4
1158:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2276              		.loc 1 1158 58 view .LVU732
 2277 015e 91FBF0F1 		sdiv	r1, r1, r0
1158:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2278              		.loc 1 1158 21 view .LVU733
 2279 0162 09B2     		sxth	r1, r1
 2280              	.LVL214:
1158:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2281              		.loc 1 1158 21 view .LVU734
 2282 0164 C5E7     		b	.L177
 2283              	.LVL215:
 2284              	.L179:
1171:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2285              		.loc 1 1171 7 is_stmt 1 view .LVU735
1171:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2286              		.loc 1 1171 48 is_stmt 0 view .LVU736
 2287 0166 A989     		ldrh	r1, [r5, #12]
1171:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2288              		.loc 1 1171 34 view .LVU737
 2289 0168 8900     		lsls	r1, r1, #2
 2290 016a 89B2     		uxth	r1, r1
1171:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2291              		.loc 1 1171 69 view .LVU738
 2292 016c 0901     		lsls	r1, r1, #4
1172:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2293              		.loc 1 1172 25 view .LVU739
 2294 016e B4F884E0 		ldrh	lr, [r4, #132]
 2295              	.LVL216:
1172:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2296              		.loc 1 1172 51 view .LVU740
 2297 0172 B4F88690 		ldrh	r9, [r4, #134]
1172:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2298              		.loc 1 1172 45 view .LVU741
 2299 0176 CE44     		add	lr, lr, r9
 2300 0178 1FFA8EFE 		uxth	lr, lr
1173:Src/BLDC_controller.c ****     }
 2301              		.loc 1 1173 24 view .LVU742
 2302 017c B4F88890 		ldrh	r9, [r4, #136]
1172:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2303              		.loc 1 1172 74 view .LVU743
 2304 0180 CE44     		add	lr, lr, r9
 2305 0182 1FFA8EFE 		uxth	lr, lr
1173:Src/BLDC_controller.c ****     }
 2306              		.loc 1 1173 45 view .LVU744
 2307 0186 F044     		add	r8, r8, lr
 2308              	.LVL217:
1172:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2309              		.loc 1 1172 9 view .LVU745
ARM GAS  /tmp/ccVzdWer.s 			page 65


 2310 0188 0FFA88F8 		sxth	r8, r8
1171:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2311              		.loc 1 1171 75 view .LVU746
 2312 018c 91FBF8F1 		sdiv	r1, r1, r8
1171:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2313              		.loc 1 1171 21 view .LVU747
 2314 0190 09B2     		sxth	r1, r1
 2315              	.LVL218:
1171:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2316              		.loc 1 1171 21 view .LVU748
 2317 0192 AEE7     		b	.L177
 2318              	.LVL219:
 2319              	.L346:
1146:Src/BLDC_controller.c ****     } else if (rtb_RelationalOperator4_d) {
 2320              		.loc 1 1146 21 view .LVU749
 2321 0194 0021     		movs	r1, #0
 2322 0196 ACE7     		b	.L177
 2323              	.LVL220:
 2324              	.L434:
1230:Src/BLDC_controller.c ****     Abs5 = (int16_T)-Switch2;
 2325              		.loc 1 1230 5 is_stmt 1 view .LVU750
 2326              		.loc 1 1230 12 is_stmt 0 view .LVU751
 2327 0198 5B42     		rsbs	r3, r3, #0
 2328              	.LVL221:
 2329              		.loc 1 1230 10 view .LVU752
 2330 019a 1BB2     		sxth	r3, r3
 2331 019c 0793     		str	r3, [sp, #28]
 2332              	.LVL222:
 2333              		.loc 1 1230 10 view .LVU753
 2334 019e 02E0     		b	.L180
 2335              	.LVL223:
 2336              	.L347:
1221:Src/BLDC_controller.c ****   } else {
 2337              		.loc 1 1221 13 view .LVU754
 2338 01a0 0023     		movs	r3, #0
 2339 01a2 0B93     		str	r3, [sp, #44]
 2340 01a4 0793     		str	r3, [sp, #28]
 2341              	.L180:
 2342              	.LVL224:
1231:Src/BLDC_controller.c ****   } else {
1232:Src/BLDC_controller.c ****     Abs5 = Switch2;
1233:Src/BLDC_controller.c ****   }
1234:Src/BLDC_controller.c **** 
1235:Src/BLDC_controller.c ****   /* End of Abs: '<S13>/Abs5' */
1236:Src/BLDC_controller.c **** 
1237:Src/BLDC_controller.c ****   /* Relay: '<S13>/n_commDeacv' */
1238:Src/BLDC_controller.c ****   if (Abs5 >= rtP->n_commDeacvHi) {
 2343              		.loc 1 1238 3 is_stmt 1 view .LVU755
 2344              		.loc 1 1238 18 is_stmt 0 view .LVU756
 2345 01a6 B5F9D430 		ldrsh	r3, [r5, #212]
 2346              		.loc 1 1238 6 view .LVU757
 2347 01aa 079A     		ldr	r2, [sp, #28]
 2348 01ac 9342     		cmp	r3, r2
 2349 01ae 0DDC     		bgt	.L181
1239:Src/BLDC_controller.c ****     rtDW->n_commDeacv_Mode = true;
 2350              		.loc 1 1239 5 is_stmt 1 view .LVU758
 2351              		.loc 1 1239 28 is_stmt 0 view .LVU759
ARM GAS  /tmp/ccVzdWer.s 			page 66


 2352 01b0 0123     		movs	r3, #1
 2353 01b2 84F8A830 		strb	r3, [r4, #168]
 2354              	.L182:
1240:Src/BLDC_controller.c ****   } else {
1241:Src/BLDC_controller.c ****     if (Abs5 <= rtP->n_commAcvLo) {
1242:Src/BLDC_controller.c ****       rtDW->n_commDeacv_Mode = false;
1243:Src/BLDC_controller.c ****     }
1244:Src/BLDC_controller.c ****   }
1245:Src/BLDC_controller.c **** 
1246:Src/BLDC_controller.c ****   /* Logic: '<S13>/Logical Operator3' incorporates:
1247:Src/BLDC_controller.c ****    *  Constant: '<S13>/b_angleMeasEna'
1248:Src/BLDC_controller.c ****    *  Logic: '<S13>/Logical Operator1'
1249:Src/BLDC_controller.c ****    *  Logic: '<S13>/Logical Operator2'
1250:Src/BLDC_controller.c ****    *  Relay: '<S13>/n_commDeacv'
1251:Src/BLDC_controller.c ****    */
1252:Src/BLDC_controller.c ****   rtb_LogicalOperator = (rtP->b_angleMeasEna || (rtDW->n_commDeacv_Mode &&
 2355              		.loc 1 1252 3 is_stmt 1 view .LVU760
 2356              		.loc 1 1252 29 is_stmt 0 view .LVU761
 2357 01b6 95F8FB30 		ldrb	r3, [r5, #251]	@ zero_extendqisi2
 2358              		.loc 1 1252 46 view .LVU762
 2359 01ba 83B9     		cbnz	r3, .L349
 2360              		.loc 1 1252 54 discriminator 2 view .LVU763
 2361 01bc 94F8A820 		ldrb	r2, [r4, #168]	@ zero_extendqisi2
 2362              		.loc 1 1252 46 discriminator 2 view .LVU764
 2363 01c0 62B3     		cbz	r2, .L350
1253:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2364              		.loc 1 1253 11 discriminator 3 view .LVU765
 2365 01c2 94F8A220 		ldrb	r2, [r4, #162]	@ zero_extendqisi2
1252:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2366              		.loc 1 1252 73 discriminator 3 view .LVU766
 2367 01c6 5AB3     		cbz	r2, .L351
1252:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2368              		.loc 1 1252 46 view .LVU767
 2369 01c8 0022     		movs	r2, #0
 2370 01ca 09E0     		b	.L183
 2371              	.L181:
1241:Src/BLDC_controller.c ****       rtDW->n_commDeacv_Mode = false;
 2372              		.loc 1 1241 5 is_stmt 1 view .LVU768
1241:Src/BLDC_controller.c ****       rtDW->n_commDeacv_Mode = false;
 2373              		.loc 1 1241 20 is_stmt 0 view .LVU769
 2374 01cc B5F9D230 		ldrsh	r3, [r5, #210]
1241:Src/BLDC_controller.c ****       rtDW->n_commDeacv_Mode = false;
 2375              		.loc 1 1241 8 view .LVU770
 2376 01d0 079A     		ldr	r2, [sp, #28]
 2377 01d2 9342     		cmp	r3, r2
 2378 01d4 EFDB     		blt	.L182
1242:Src/BLDC_controller.c ****     }
 2379              		.loc 1 1242 7 is_stmt 1 view .LVU771
1242:Src/BLDC_controller.c ****     }
 2380              		.loc 1 1242 30 is_stmt 0 view .LVU772
 2381 01d6 0023     		movs	r3, #0
 2382 01d8 84F8A830 		strb	r3, [r4, #168]
 2383 01dc EBE7     		b	.L182
 2384              	.L349:
1252:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2385              		.loc 1 1252 46 view .LVU773
 2386 01de 0122     		movs	r2, #1
ARM GAS  /tmp/ccVzdWer.s 			page 67


 2387              	.L183:
1252:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2388              		.loc 1 1252 23 discriminator 8 view .LVU774
 2389 01e0 D2B2     		uxtb	r2, r2
 2390 01e2 0892     		str	r2, [sp, #32]
 2391              	.LVL225:
1254:Src/BLDC_controller.c **** 
1255:Src/BLDC_controller.c ****   /* UnitDelay: '<S2>/UnitDelay2' */
1256:Src/BLDC_controller.c ****   rtb_RelationalOperator4_d = rtDW->UnitDelay2_DSTATE_c;
 2392              		.loc 1 1256 3 is_stmt 1 discriminator 8 view .LVU775
 2393              		.loc 1 1256 29 is_stmt 0 discriminator 8 view .LVU776
 2394 01e4 94F8A320 		ldrb	r2, [r4, #163]	@ zero_extendqisi2
 2395 01e8 0D92     		str	r2, [sp, #52]
 2396              	.LVL226:
1257:Src/BLDC_controller.c **** 
1258:Src/BLDC_controller.c ****   /* UnitDelay: '<S2>/UnitDelay5' */
1259:Src/BLDC_controller.c ****   rtb_UnitDelay5_e = rtDW->UnitDelay5_DSTATE_m;
 2397              		.loc 1 1259 3 is_stmt 1 discriminator 8 view .LVU777
 2398              		.loc 1 1259 20 is_stmt 0 discriminator 8 view .LVU778
 2399 01ea 94F8A420 		ldrb	r2, [r4, #164]	@ zero_extendqisi2
 2400 01ee 0E92     		str	r2, [sp, #56]
 2401              	.LVL227:
1260:Src/BLDC_controller.c **** 
1261:Src/BLDC_controller.c ****   /* DataTypeConversion: '<S1>/Data Type Conversion2' incorporates:
1262:Src/BLDC_controller.c ****    *  Inport: '<Root>/r_inpTgt'
1263:Src/BLDC_controller.c ****    */
1264:Src/BLDC_controller.c ****   DataTypeConversion2 = (int16_T)(rtU->r_inpTgt << 4);
 2402              		.loc 1 1264 3 is_stmt 1 discriminator 8 view .LVU779
 2403              		.loc 1 1264 38 is_stmt 0 discriminator 8 view .LVU780
 2404 01f0 B6F902B0 		ldrsh	fp, [r6, #2]
 2405              		.loc 1 1264 49 discriminator 8 view .LVU781
 2406 01f4 4FEA0B12 		lsl	r2, fp, #4
 2407 01f8 0F92     		str	r2, [sp, #60]
 2408              		.loc 1 1264 23 discriminator 8 view .LVU782
 2409 01fa 0FFA82FB 		sxth	fp, r2
 2410              	.LVL228:
1265:Src/BLDC_controller.c **** 
1266:Src/BLDC_controller.c ****   /* Saturate: '<S1>/Saturation' incorporates:
1267:Src/BLDC_controller.c ****    *  Inport: '<Root>/i_phaAB'
1268:Src/BLDC_controller.c ****    */
1269:Src/BLDC_controller.c ****   rtb_Gain3 = rtU->i_phaAB << 4;
 2411              		.loc 1 1269 3 is_stmt 1 discriminator 8 view .LVU783
 2412              		.loc 1 1269 18 is_stmt 0 discriminator 8 view .LVU784
 2413 01fe B6F90820 		ldrsh	r2, [r6, #8]
 2414              		.loc 1 1269 13 discriminator 8 view .LVU785
 2415 0202 4FEA021A 		lsl	r10, r2, #4
 2416              	.LVL229:
1270:Src/BLDC_controller.c ****   if (rtb_Gain3 >= 27200) {
 2417              		.loc 1 1270 3 is_stmt 1 discriminator 8 view .LVU786
 2418              		.loc 1 1270 6 is_stmt 0 discriminator 8 view .LVU787
 2419 0206 46F63F21 		movw	r1, #27199
 2420 020a B1EB021F 		cmp	r1, r2, lsl #4
 2421 020e 09DB     		blt	.L352
1271:Src/BLDC_controller.c ****     rtb_Saturation = 27200;
1272:Src/BLDC_controller.c ****   } else if (rtb_Gain3 <= -27200) {
 2422              		.loc 1 1272 10 is_stmt 1 view .LVU788
 2423              		.loc 1 1272 13 is_stmt 0 view .LVU789
ARM GAS  /tmp/ccVzdWer.s 			page 68


 2424 0210 564A     		ldr	r2, .L467+4
 2425 0212 9245     		cmp	r10, r2
 2426 0214 17DB     		blt	.L353
1273:Src/BLDC_controller.c ****     rtb_Saturation = -27200;
1274:Src/BLDC_controller.c ****   } else {
1275:Src/BLDC_controller.c ****     rtb_Saturation = (int16_T)(rtU->i_phaAB << 4);
 2427              		.loc 1 1275 5 is_stmt 1 view .LVU790
 2428              		.loc 1 1275 20 is_stmt 0 view .LVU791
 2429 0216 0FFA8AFA 		sxth	r10, r10
 2430              	.LVL230:
 2431              		.loc 1 1275 20 view .LVU792
 2432 021a 05E0     		b	.L184
 2433              	.LVL231:
 2434              	.L350:
1252:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2435              		.loc 1 1252 46 view .LVU793
 2436 021c 0022     		movs	r2, #0
 2437 021e DFE7     		b	.L183
 2438              	.L351:
 2439 0220 0122     		movs	r2, #1
 2440 0222 DDE7     		b	.L183
 2441              	.LVL232:
 2442              	.L352:
1271:Src/BLDC_controller.c ****     rtb_Saturation = 27200;
 2443              		.loc 1 1271 20 view .LVU794
 2444 0224 46F6402A 		movw	r10, #27200
 2445              	.LVL233:
 2446              	.L184:
1276:Src/BLDC_controller.c ****   }
1277:Src/BLDC_controller.c **** 
1278:Src/BLDC_controller.c ****   /* End of Saturate: '<S1>/Saturation' */
1279:Src/BLDC_controller.c **** 
1280:Src/BLDC_controller.c ****   /* Saturate: '<S1>/Saturation1' incorporates:
1281:Src/BLDC_controller.c ****    *  Inport: '<Root>/i_phaBC'
1282:Src/BLDC_controller.c ****    */
1283:Src/BLDC_controller.c ****   rtb_Gain3 = rtU->i_phaBC << 4;
 2447              		.loc 1 1283 3 is_stmt 1 view .LVU795
 2448              		.loc 1 1283 18 is_stmt 0 view .LVU796
 2449 0228 B6F90A20 		ldrsh	r2, [r6, #10]
 2450              		.loc 1 1283 13 view .LVU797
 2451 022c 4FEA0218 		lsl	r8, r2, #4
 2452              	.LVL234:
1284:Src/BLDC_controller.c ****   if (rtb_Gain3 >= 27200) {
 2453              		.loc 1 1284 3 is_stmt 1 view .LVU798
 2454              		.loc 1 1284 6 is_stmt 0 view .LVU799
 2455 0230 46F63F21 		movw	r1, #27199
 2456 0234 B1EB021F 		cmp	r1, r2, lsl #4
 2457 0238 08DB     		blt	.L354
1285:Src/BLDC_controller.c ****     rtb_Saturation1 = 27200;
1286:Src/BLDC_controller.c ****   } else if (rtb_Gain3 <= -27200) {
 2458              		.loc 1 1286 10 is_stmt 1 view .LVU800
 2459              		.loc 1 1286 13 is_stmt 0 view .LVU801
 2460 023a 4C4A     		ldr	r2, .L467+4
 2461 023c 9045     		cmp	r8, r2
 2462 023e 72DB     		blt	.L355
1287:Src/BLDC_controller.c ****     rtb_Saturation1 = -27200;
1288:Src/BLDC_controller.c ****   } else {
ARM GAS  /tmp/ccVzdWer.s 			page 69


1289:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)(rtU->i_phaBC << 4);
 2463              		.loc 1 1289 5 is_stmt 1 view .LVU802
 2464              		.loc 1 1289 21 is_stmt 0 view .LVU803
 2465 0240 0FFA88F8 		sxth	r8, r8
 2466              	.LVL235:
 2467              		.loc 1 1289 21 view .LVU804
 2468 0244 04E0     		b	.L185
 2469              	.LVL236:
 2470              	.L353:
1273:Src/BLDC_controller.c ****   } else {
 2471              		.loc 1 1273 20 view .LVU805
 2472 0246 DFF82CA1 		ldr	r10, .L467+12
 2473              	.LVL237:
1273:Src/BLDC_controller.c ****   } else {
 2474              		.loc 1 1273 20 view .LVU806
 2475 024a EDE7     		b	.L184
 2476              	.LVL238:
 2477              	.L354:
1285:Src/BLDC_controller.c ****     rtb_Saturation1 = 27200;
 2478              		.loc 1 1285 21 view .LVU807
 2479 024c 46F64028 		movw	r8, #27200
 2480              	.LVL239:
 2481              	.L185:
1290:Src/BLDC_controller.c ****   }
1291:Src/BLDC_controller.c **** 
1292:Src/BLDC_controller.c ****   /* End of Saturate: '<S1>/Saturation1' */
1293:Src/BLDC_controller.c **** 
1294:Src/BLDC_controller.c ****   /* If: '<S3>/If1' incorporates:
1295:Src/BLDC_controller.c ****    *  Constant: '<S3>/b_angleMeasEna'
1296:Src/BLDC_controller.c ****    */
1297:Src/BLDC_controller.c ****   if (!rtP->b_angleMeasEna) {
 2482              		.loc 1 1297 3 is_stmt 1 view .LVU808
 2483              		.loc 1 1297 6 is_stmt 0 view .LVU809
 2484 0250 002B     		cmp	r3, #0
 2485 0252 40F09180 		bne	.L186
1298:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S3>/F01_05_Electrical_Angle_Estimation' incorporates:
1299:Src/BLDC_controller.c ****      *  ActionPort: '<S14>/Action Port'
1300:Src/BLDC_controller.c ****      */
1301:Src/BLDC_controller.c ****     /* Switch: '<S14>/Switch2' incorporates:
1302:Src/BLDC_controller.c ****      *  Constant: '<S14>/Constant16'
1303:Src/BLDC_controller.c ****      *  Product: '<S14>/Divide1'
1304:Src/BLDC_controller.c ****      *  Product: '<S14>/Divide3'
1305:Src/BLDC_controller.c ****      *  RelationalOperator: '<S14>/Relational Operator7'
1306:Src/BLDC_controller.c ****      *  Sum: '<S14>/Sum3'
1307:Src/BLDC_controller.c ****      *  Switch: '<S14>/Switch3'
1308:Src/BLDC_controller.c ****      */
1309:Src/BLDC_controller.c ****     if (rtb_LogicalOperator) {
 2486              		.loc 1 1309 5 is_stmt 1 view .LVU810
 2487              		.loc 1 1309 8 is_stmt 0 view .LVU811
 2488 0256 089B     		ldr	r3, [sp, #32]
 2489 0258 002B     		cmp	r3, #0
 2490 025a 6ED0     		beq	.L187
1310:Src/BLDC_controller.c ****       /* MinMax: '<S14>/MinMax' */
1311:Src/BLDC_controller.c ****       rtb_Merge_m = rtb_Switch1_l;
 2491              		.loc 1 1311 7 is_stmt 1 view .LVU812
 2492              	.LVL240:
1312:Src/BLDC_controller.c ****       if (!(rtb_Merge_m < rtDW->z_counterRawPrev)) {
ARM GAS  /tmp/ccVzdWer.s 			page 70


 2493              		.loc 1 1312 7 view .LVU813
 2494              		.loc 1 1312 31 is_stmt 0 view .LVU814
 2495 025c B4F95610 		ldrsh	r1, [r4, #86]
 2496              		.loc 1 1312 10 view .LVU815
 2497 0260 0C9B     		ldr	r3, [sp, #48]
 2498 0262 9942     		cmp	r1, r3
 2499 0264 00DC     		bgt	.L188
1313:Src/BLDC_controller.c ****         rtb_Merge_m = rtDW->z_counterRawPrev;
 2500              		.loc 1 1313 21 view .LVU816
 2501 0266 0B46     		mov	r3, r1
 2502              	.L188:
 2503              	.LVL241:
1314:Src/BLDC_controller.c ****       }
1315:Src/BLDC_controller.c **** 
1316:Src/BLDC_controller.c ****       /* End of MinMax: '<S14>/MinMax' */
1317:Src/BLDC_controller.c **** 
1318:Src/BLDC_controller.c ****       /* Switch: '<S14>/Switch3' incorporates:
1319:Src/BLDC_controller.c ****        *  Constant: '<S11>/vec_hallToPos'
1320:Src/BLDC_controller.c ****        *  Constant: '<S14>/Constant16'
1321:Src/BLDC_controller.c ****        *  RelationalOperator: '<S14>/Relational Operator7'
1322:Src/BLDC_controller.c ****        *  Selector: '<S11>/Selector'
1323:Src/BLDC_controller.c ****        *  Sum: '<S14>/Sum1'
1324:Src/BLDC_controller.c ****        */
1325:Src/BLDC_controller.c ****       if (rtDW->Switch2_e == 1) {
 2504              		.loc 1 1325 7 is_stmt 1 view .LVU817
 2505              		.loc 1 1325 15 is_stmt 0 view .LVU818
 2506 0268 94F98E20 		ldrsb	r2, [r4, #142]
 2507              		.loc 1 1325 10 view .LVU819
 2508 026c 012A     		cmp	r2, #1
 2509 026e 5DD0     		beq	.L435
1326:Src/BLDC_controller.c ****         rtb_Sum2_h = rtConstP.vec_hallToPos_Value[Sum];
1327:Src/BLDC_controller.c ****       } else {
1328:Src/BLDC_controller.c ****         rtb_Sum2_h = (int8_T)(rtConstP.vec_hallToPos_Value[Sum] + 1);
 2510              		.loc 1 1328 9 is_stmt 1 view .LVU820
 2511              		.loc 1 1328 59 is_stmt 0 view .LVU821
 2512 0270 DFF8F4C0 		ldr	ip, .L467
 2513 0274 0998     		ldr	r0, [sp, #36]
 2514              	.LVL242:
 2515              		.loc 1 1328 59 view .LVU822
 2516 0276 6044     		add	r0, r0, ip
 2517 0278 90F88807 		ldrb	r0, [r0, #1928]	@ zero_extendqisi2
 2518              		.loc 1 1328 65 view .LVU823
 2519 027c 0130     		adds	r0, r0, #1
 2520              		.loc 1 1328 20 view .LVU824
 2521 027e 40B2     		sxtb	r0, r0
 2522              	.LVL243:
 2523              	.L190:
1329:Src/BLDC_controller.c ****       }
1330:Src/BLDC_controller.c **** 
1331:Src/BLDC_controller.c ****       rtb_Merge_m = (int16_T)(((int16_T)((int16_T)((rtb_Merge_m << 14) /
 2524              		.loc 1 1331 7 is_stmt 1 view .LVU825
 2525              		.loc 1 1331 65 is_stmt 0 view .LVU826
 2526 0280 9B03     		lsls	r3, r3, #14
 2527              	.LVL244:
 2528              		.loc 1 1331 72 view .LVU827
 2529 0282 93FBF1F3 		sdiv	r3, r3, r1
 2530              		.loc 1 1331 42 view .LVU828
ARM GAS  /tmp/ccVzdWer.s 			page 71


 2531 0286 99B2     		uxth	r1, r3
1332:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev) * rtDW->Switch2_e) + (rtb_Sum2_h << 14)) >> 2);
 2532              		.loc 1 1332 39 view .LVU829
 2533 0288 93B2     		uxth	r3, r2
 2534              		.loc 1 1332 33 view .LVU830
 2535 028a 03FB01F3 		mul	r3, r3, r1
1331:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev) * rtDW->Switch2_e) + (rtb_Sum2_h << 14)) >> 2);
 2536              		.loc 1 1331 32 view .LVU831
 2537 028e 1BB2     		sxth	r3, r3
 2538              		.loc 1 1332 52 view .LVU832
 2539 0290 03EB8033 		add	r3, r3, r0, lsl #14
1331:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev) * rtDW->Switch2_e) + (rtb_Sum2_h << 14)) >> 2);
 2540              		.loc 1 1331 19 view .LVU833
 2541 0294 43F38F03 		sbfx	r3, r3, #2, #16
 2542              	.LVL245:
 2543              	.L191:
1333:Src/BLDC_controller.c ****     } else {
1334:Src/BLDC_controller.c ****       if (rtDW->Switch2_e == 1) {
1335:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
1336:Src/BLDC_controller.c ****          *  Constant: '<S11>/vec_hallToPos'
1337:Src/BLDC_controller.c ****          *  Selector: '<S11>/Selector'
1338:Src/BLDC_controller.c ****          */
1339:Src/BLDC_controller.c ****         rtb_Sum2_h = rtConstP.vec_hallToPos_Value[Sum];
1340:Src/BLDC_controller.c ****       } else {
1341:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
1342:Src/BLDC_controller.c ****          *  Constant: '<S11>/vec_hallToPos'
1343:Src/BLDC_controller.c ****          *  Selector: '<S11>/Selector'
1344:Src/BLDC_controller.c ****          *  Sum: '<S14>/Sum1'
1345:Src/BLDC_controller.c ****          */
1346:Src/BLDC_controller.c ****         rtb_Sum2_h = (int8_T)(rtConstP.vec_hallToPos_Value[Sum] + 1);
1347:Src/BLDC_controller.c ****       }
1348:Src/BLDC_controller.c **** 
1349:Src/BLDC_controller.c ****       rtb_Merge_m = (int16_T)(rtb_Sum2_h << 12);
1350:Src/BLDC_controller.c ****     }
1351:Src/BLDC_controller.c **** 
1352:Src/BLDC_controller.c ****     /* End of Switch: '<S14>/Switch2' */
1353:Src/BLDC_controller.c **** 
1354:Src/BLDC_controller.c ****     /* MinMax: '<S14>/MinMax1' incorporates:
1355:Src/BLDC_controller.c ****      *  Constant: '<S14>/Constant1'
1356:Src/BLDC_controller.c ****      */
1357:Src/BLDC_controller.c ****     if (!(rtb_Merge_m > 0)) {
 2544              		.loc 1 1357 5 is_stmt 1 view .LVU834
 2545              		.loc 1 1357 8 is_stmt 0 view .LVU835
 2546 0298 002B     		cmp	r3, #0
 2547 029a 62DD     		ble	.L436
 2548              	.LVL246:
 2549              	.L194:
1358:Src/BLDC_controller.c ****       rtb_Merge_m = 0;
1359:Src/BLDC_controller.c ****     }
1360:Src/BLDC_controller.c **** 
1361:Src/BLDC_controller.c ****     /* End of MinMax: '<S14>/MinMax1' */
1362:Src/BLDC_controller.c **** 
1363:Src/BLDC_controller.c ****     /* SignalConversion: '<S14>/Signal Conversion2' incorporates:
1364:Src/BLDC_controller.c ****      *  Product: '<S14>/Divide2'
1365:Src/BLDC_controller.c ****      */
1366:Src/BLDC_controller.c ****     rtb_Merge_m = (int16_T)((15 * rtb_Merge_m) >> 4);
 2550              		.loc 1 1366 5 is_stmt 1 view .LVU836
ARM GAS  /tmp/ccVzdWer.s 			page 72


 2551              		.loc 1 1366 33 is_stmt 0 view .LVU837
 2552 029c C3EB0313 		rsb	r3, r3, r3, lsl #4
 2553              	.LVL247:
 2554              		.loc 1 1366 17 view .LVU838
 2555 02a0 43F30F13 		sbfx	r3, r3, #4, #16
 2556 02a4 0A93     		str	r3, [sp, #40]
 2557              	.LVL248:
 2558              	.L195:
1367:Src/BLDC_controller.c **** 
1368:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S3>/F01_05_Electrical_Angle_Estimation' */
1369:Src/BLDC_controller.c ****   } else {
1370:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S3>/F01_06_Electrical_Angle_Measurement' incorporates:
1371:Src/BLDC_controller.c ****      *  ActionPort: '<S15>/Action Port'
1372:Src/BLDC_controller.c ****      */
1373:Src/BLDC_controller.c ****     /* Sum: '<S15>/Sum1' incorporates:
1374:Src/BLDC_controller.c ****      *  Constant: '<S15>/Constant2'
1375:Src/BLDC_controller.c ****      *  Constant: '<S15>/n_polePairs'
1376:Src/BLDC_controller.c ****      *  Inport: '<Root>/a_mechAngle'
1377:Src/BLDC_controller.c ****      *  Product: '<S15>/Divide'
1378:Src/BLDC_controller.c ****      */
1379:Src/BLDC_controller.c ****     rtb_Sum1_jt = rtU->a_mechAngle * rtP->n_polePairs - 480;
1380:Src/BLDC_controller.c **** 
1381:Src/BLDC_controller.c ****     /* DataTypeConversion: '<S15>/Data Type Conversion20' incorporates:
1382:Src/BLDC_controller.c ****      *  Constant: '<S15>/a_elecPeriod'
1383:Src/BLDC_controller.c ****      *  Product: '<S19>/Divide2'
1384:Src/BLDC_controller.c ****      *  Product: '<S19>/Divide3'
1385:Src/BLDC_controller.c ****      *  Sum: '<S19>/Sum3'
1386:Src/BLDC_controller.c ****      */
1387:Src/BLDC_controller.c ****     rtb_Merge_m = (int16_T)((int16_T)(rtb_Sum1_jt - ((int16_T)((int16_T)
1388:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
1389:Src/BLDC_controller.c **** 
1390:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S3>/F01_06_Electrical_Angle_Measurement' */
1391:Src/BLDC_controller.c ****   }
1392:Src/BLDC_controller.c **** 
1393:Src/BLDC_controller.c ****   /* End of If: '<S3>/If1' */
1394:Src/BLDC_controller.c **** 
1395:Src/BLDC_controller.c ****   /* If: '<S7>/If1' incorporates:
1396:Src/BLDC_controller.c ****    *  Constant: '<S1>/z_ctrlTypSel'
1397:Src/BLDC_controller.c ****    */
1398:Src/BLDC_controller.c ****   rtb_Sum2_h = rtDW->If1_ActiveSubsystem;
 2559              		.loc 1 1398 3 is_stmt 1 view .LVU839
 2560              		.loc 1 1398 14 is_stmt 0 view .LVU840
 2561 02a6 94F99030 		ldrsb	r3, [r4, #144]
 2562              	.LVL249:
1399:Src/BLDC_controller.c ****   UnitDelay3 = -1;
 2563              		.loc 1 1399 3 is_stmt 1 view .LVU841
1400:Src/BLDC_controller.c ****   if (rtP->z_ctrlTypSel == 2) {
 2564              		.loc 1 1400 3 view .LVU842
 2565              		.loc 1 1400 10 is_stmt 0 view .LVU843
 2566 02aa 95F8F920 		ldrb	r2, [r5, #249]	@ zero_extendqisi2
 2567              		.loc 1 1400 6 view .LVU844
 2568 02ae 022A     		cmp	r2, #2
 2569 02b0 00F08280 		beq	.L358
1399:Src/BLDC_controller.c ****   UnitDelay3 = -1;
 2570              		.loc 1 1399 14 view .LVU845
 2571 02b4 4FF0FF39 		mov	r9, #-1
 2572              	.L196:
ARM GAS  /tmp/ccVzdWer.s 			page 73


 2573              	.LVL250:
1401:Src/BLDC_controller.c ****     UnitDelay3 = 0;
1402:Src/BLDC_controller.c ****   }
1403:Src/BLDC_controller.c **** 
1404:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem = UnitDelay3;
 2574              		.loc 1 1404 3 is_stmt 1 view .LVU846
 2575              		.loc 1 1404 29 is_stmt 0 view .LVU847
 2576 02b8 84F89090 		strb	r9, [r4, #144]
1405:Src/BLDC_controller.c ****   if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 2577              		.loc 1 1405 3 is_stmt 1 view .LVU848
 2578              		.loc 1 1405 6 is_stmt 0 view .LVU849
 2579 02bc 9945     		cmp	r9, r3
 2580 02be 0ED0     		beq	.L197
 2581              		.loc 1 1405 34 discriminator 1 view .LVU850
 2582 02c0 6BB9     		cbnz	r3, .L197
1406:Src/BLDC_controller.c ****     /* Disable for If: '<S45>/If2' */
1407:Src/BLDC_controller.c ****     if (rtDW->If2_ActiveSubsystem_a == 0) {
 2583              		.loc 1 1407 5 is_stmt 1 view .LVU851
1408:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/iq' */
1409:Src/BLDC_controller.c ****       rtDW->DataTypeConversion[0] = 0;
1410:Src/BLDC_controller.c **** 
1411:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/iqAbs' */
1412:Src/BLDC_controller.c ****       rtDW->Abs5_h = 0;
1413:Src/BLDC_controller.c **** 
1414:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/id' */
1415:Src/BLDC_controller.c ****       rtDW->DataTypeConversion[1] = 0;
1416:Src/BLDC_controller.c ****     }
1417:Src/BLDC_controller.c **** 
1418:Src/BLDC_controller.c ****     rtDW->If2_ActiveSubsystem_a = -1;
 2584              		.loc 1 1418 5 view .LVU852
 2585              		.loc 1 1418 33 is_stmt 0 view .LVU853
 2586 02c2 FF23     		movs	r3, #255
 2587              	.LVL251:
 2588              		.loc 1 1418 33 view .LVU854
 2589 02c4 84F89830 		strb	r3, [r4, #152]
1419:Src/BLDC_controller.c **** 
1420:Src/BLDC_controller.c ****     /* End of Disable for If: '<S45>/If2' */
1421:Src/BLDC_controller.c **** 
1422:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/r_sin' */
1423:Src/BLDC_controller.c ****     rtDW->r_sin_M1 = 0;
 2590              		.loc 1 1423 5 is_stmt 1 view .LVU855
 2591              		.loc 1 1423 20 is_stmt 0 view .LVU856
 2592 02c8 0023     		movs	r3, #0
 2593 02ca A4F87C30 		strh	r3, [r4, #124]	@ movhi
1424:Src/BLDC_controller.c **** 
1425:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/r_cos' */
1426:Src/BLDC_controller.c ****     rtDW->r_cos_M1 = 0;
 2594              		.loc 1 1426 5 is_stmt 1 view .LVU857
 2595              		.loc 1 1426 20 is_stmt 0 view .LVU858
 2596 02ce A4F87E30 		strh	r3, [r4, #126]	@ movhi
1427:Src/BLDC_controller.c **** 
1428:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/iq' */
1429:Src/BLDC_controller.c ****     rtDW->DataTypeConversion[0] = 0;
 2597              		.loc 1 1429 5 is_stmt 1 view .LVU859
 2598              		.loc 1 1429 33 is_stmt 0 view .LVU860
 2599 02d2 A4F85230 		strh	r3, [r4, #82]	@ movhi
1430:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 74


1431:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/id' */
1432:Src/BLDC_controller.c ****     rtDW->DataTypeConversion[1] = 0;
 2600              		.loc 1 1432 5 is_stmt 1 view .LVU861
 2601              		.loc 1 1432 33 is_stmt 0 view .LVU862
 2602 02d6 A4F85430 		strh	r3, [r4, #84]	@ movhi
1433:Src/BLDC_controller.c **** 
1434:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/iqAbs' */
1435:Src/BLDC_controller.c ****     rtDW->Abs5_h = 0;
 2603              		.loc 1 1435 5 is_stmt 1 view .LVU863
 2604              		.loc 1 1435 18 is_stmt 0 view .LVU864
 2605 02da A4F87830 		strh	r3, [r4, #120]	@ movhi
 2606              	.L197:
1436:Src/BLDC_controller.c ****   }
1437:Src/BLDC_controller.c **** 
1438:Src/BLDC_controller.c ****   if (UnitDelay3 == 0) {
 2607              		.loc 1 1438 3 is_stmt 1 view .LVU865
 2608              		.loc 1 1438 6 is_stmt 0 view .LVU866
 2609 02de B9F1000F 		cmp	r9, #0
 2610 02e2 40F03E81 		bne	.L198
1439:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S7>/Clarke_Park_Transform_Forward' incorporates:
1440:Src/BLDC_controller.c ****      *  ActionPort: '<S45>/Action Port'
1441:Src/BLDC_controller.c ****      */
1442:Src/BLDC_controller.c ****     /* If: '<S49>/If1' incorporates:
1443:Src/BLDC_controller.c ****      *  Constant: '<S49>/z_selPhaCurMeasABC'
1444:Src/BLDC_controller.c ****      */
1445:Src/BLDC_controller.c ****     if (rtP->z_selPhaCurMeasABC == 0) {
 2611              		.loc 1 1445 5 is_stmt 1 view .LVU867
 2612              		.loc 1 1445 12 is_stmt 0 view .LVU868
 2613 02e6 95F8FA30 		ldrb	r3, [r5, #250]	@ zero_extendqisi2
 2614              		.loc 1 1445 8 view .LVU869
 2615 02ea 002B     		cmp	r3, #0
 2616 02ec 40F0B480 		bne	.L199
1446:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesAB' incorporates:
1447:Src/BLDC_controller.c ****        *  ActionPort: '<S53>/Action Port'
1448:Src/BLDC_controller.c ****        */
1449:Src/BLDC_controller.c ****       /* Gain: '<S53>/Gain4' */
1450:Src/BLDC_controller.c ****       rtb_Gain3 = 18919 * rtb_Saturation;
 2617              		.loc 1 1450 7 is_stmt 1 view .LVU870
 2618              		.loc 1 1450 17 is_stmt 0 view .LVU871
 2619 02f0 44F6E712 		movw	r2, #18919
 2620 02f4 02FB0AF1 		mul	r1, r2, r10
 2621              	.LVL252:
1451:Src/BLDC_controller.c **** 
1452:Src/BLDC_controller.c ****       /* Gain: '<S53>/Gain2' */
1453:Src/BLDC_controller.c ****       rtb_Sum1_jt = 18919 * rtb_Saturation1;
 2622              		.loc 1 1453 7 is_stmt 1 view .LVU872
 2623              		.loc 1 1453 19 is_stmt 0 view .LVU873
 2624 02f8 02FB08F8 		mul	r8, r2, r8
 2625              	.LVL253:
1454:Src/BLDC_controller.c **** 
1455:Src/BLDC_controller.c ****       /* Sum: '<S53>/Sum1' incorporates:
1456:Src/BLDC_controller.c ****        *  Gain: '<S53>/Gain2'
1457:Src/BLDC_controller.c ****        *  Gain: '<S53>/Gain4'
1458:Src/BLDC_controller.c ****        */
1459:Src/BLDC_controller.c ****       rtb_Gain3 = (((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15) + (int16_T)
 2626              		.loc 1 1459 7 is_stmt 1 view .LVU874
 2627              		.loc 1 1459 44 is_stmt 0 view .LVU875
ARM GAS  /tmp/ccVzdWer.s 			page 75


 2628 02fc 0029     		cmp	r1, #0
 2629 02fe 5EDB     		blt	.L437
 2630 0300 0023     		movs	r3, #0
 2631              	.L200:
 2632              		.loc 1 1459 49 discriminator 4 view .LVU876
 2633 0302 0B44     		add	r3, r3, r1
 2634              		.loc 1 1459 62 discriminator 4 view .LVU877
 2635 0304 DB13     		asrs	r3, r3, #15
1460:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2636              		.loc 1 1460 36 discriminator 4 view .LVU878
 2637 0306 B8F1000F 		cmp	r8, #0
 2638 030a 5BDB     		blt	.L438
 2639              		.loc 1 1460 36 view .LVU879
 2640 030c 0022     		movs	r2, #0
 2641              	.L201:
 2642              		.loc 1 1460 41 discriminator 4 view .LVU880
 2643 030e 9044     		add	r8, r8, r2
 2644              	.LVL254:
1459:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2645              		.loc 1 1459 71 discriminator 4 view .LVU881
 2646 0310 48F38F38 		sbfx	r8, r8, #14, #16
1459:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2647              		.loc 1 1459 17 discriminator 4 view .LVU882
 2648 0314 4344     		add	r3, r3, r8
 2649              	.LVL255:
1461:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2650              		.loc 1 1461 7 is_stmt 1 discriminator 4 view .LVU883
 2651              		.loc 1 1461 10 is_stmt 0 discriminator 4 view .LVU884
 2652 0316 B3F5004F 		cmp	r3, #32768
 2653 031a 56DA     		bge	.L361
1462:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1463:Src/BLDC_controller.c ****       } else {
1464:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
 2654              		.loc 1 1464 9 is_stmt 1 view .LVU885
 2655              		.loc 1 1464 12 is_stmt 0 view .LVU886
 2656 031c 13F5004F 		cmn	r3, #32768
 2657 0320 55DA     		bge	.L202
1465:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2658              		.loc 1 1465 21 view .LVU887
 2659 0322 134B     		ldr	r3, .L467+8
 2660              	.LVL256:
 2661              		.loc 1 1465 21 view .LVU888
 2662 0324 53E0     		b	.L202
 2663              	.LVL257:
 2664              	.L355:
1287:Src/BLDC_controller.c ****   } else {
 2665              		.loc 1 1287 21 view .LVU889
 2666 0326 DFF84C80 		ldr	r8, .L467+12
 2667              	.LVL258:
1287:Src/BLDC_controller.c ****   } else {
 2668              		.loc 1 1287 21 view .LVU890
 2669 032a 91E7     		b	.L185
 2670              	.LVL259:
 2671              	.L435:
1326:Src/BLDC_controller.c ****       } else {
 2672              		.loc 1 1326 9 is_stmt 1 view .LVU891
1326:Src/BLDC_controller.c ****       } else {
ARM GAS  /tmp/ccVzdWer.s 			page 76


 2673              		.loc 1 1326 20 is_stmt 0 view .LVU892
 2674 032c DFF838C0 		ldr	ip, .L467
 2675 0330 0998     		ldr	r0, [sp, #36]
 2676              	.LVL260:
1326:Src/BLDC_controller.c ****       } else {
 2677              		.loc 1 1326 20 view .LVU893
 2678 0332 6044     		add	r0, r0, ip
 2679 0334 90F98807 		ldrsb	r0, [r0, #1928]
 2680              	.LVL261:
1326:Src/BLDC_controller.c ****       } else {
 2681              		.loc 1 1326 20 view .LVU894
 2682 0338 A2E7     		b	.L190
 2683              	.LVL262:
 2684              	.L187:
1334:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
 2685              		.loc 1 1334 7 is_stmt 1 view .LVU895
1334:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
 2686              		.loc 1 1334 15 is_stmt 0 view .LVU896
 2687 033a 94F98E30 		ldrsb	r3, [r4, #142]
1334:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
 2688              		.loc 1 1334 10 view .LVU897
 2689 033e 012B     		cmp	r3, #1
 2690 0340 09D0     		beq	.L439
1346:Src/BLDC_controller.c ****       }
 2691              		.loc 1 1346 9 is_stmt 1 view .LVU898
1346:Src/BLDC_controller.c ****       }
 2692              		.loc 1 1346 59 is_stmt 0 view .LVU899
 2693 0342 094B     		ldr	r3, .L467
 2694 0344 099A     		ldr	r2, [sp, #36]
 2695 0346 1344     		add	r3, r3, r2
 2696 0348 93F88837 		ldrb	r3, [r3, #1928]	@ zero_extendqisi2
1346:Src/BLDC_controller.c ****       }
 2697              		.loc 1 1346 65 view .LVU900
 2698 034c 0133     		adds	r3, r3, #1
1346:Src/BLDC_controller.c ****       }
 2699              		.loc 1 1346 20 view .LVU901
 2700 034e 5BB2     		sxtb	r3, r3
 2701              	.LVL263:
 2702              	.L193:
1349:Src/BLDC_controller.c ****     }
 2703              		.loc 1 1349 7 is_stmt 1 view .LVU902
1349:Src/BLDC_controller.c ****     }
 2704              		.loc 1 1349 42 is_stmt 0 view .LVU903
 2705 0350 1B03     		lsls	r3, r3, #12
 2706              	.LVL264:
1349:Src/BLDC_controller.c ****     }
 2707              		.loc 1 1349 19 view .LVU904
 2708 0352 1BB2     		sxth	r3, r3
 2709              	.LVL265:
1349:Src/BLDC_controller.c ****     }
 2710              		.loc 1 1349 19 view .LVU905
 2711 0354 A0E7     		b	.L191
 2712              	.LVL266:
 2713              	.L439:
1339:Src/BLDC_controller.c ****       } else {
 2714              		.loc 1 1339 9 is_stmt 1 view .LVU906
1339:Src/BLDC_controller.c ****       } else {
ARM GAS  /tmp/ccVzdWer.s 			page 77


 2715              		.loc 1 1339 20 is_stmt 0 view .LVU907
 2716 0356 044B     		ldr	r3, .L467
 2717 0358 099A     		ldr	r2, [sp, #36]
 2718 035a 1344     		add	r3, r3, r2
 2719 035c 93F98837 		ldrsb	r3, [r3, #1928]
 2720              	.LVL267:
1339:Src/BLDC_controller.c ****       } else {
 2721              		.loc 1 1339 20 view .LVU908
 2722 0360 F6E7     		b	.L193
 2723              	.LVL268:
 2724              	.L436:
1358:Src/BLDC_controller.c ****     }
 2725              		.loc 1 1358 19 view .LVU909
 2726 0362 0023     		movs	r3, #0
 2727              	.LVL269:
1358:Src/BLDC_controller.c ****     }
 2728              		.loc 1 1358 19 view .LVU910
 2729 0364 9AE7     		b	.L194
 2730              	.L468:
 2731 0366 00BF     		.align	2
 2732              	.L467:
 2733 0368 00000000 		.word	rtConstP
 2734 036c C195FFFF 		.word	-27199
 2735 0370 0080FFFF 		.word	-32768
 2736 0374 C095FFFF 		.word	-27200
 2737              	.LVL270:
 2738              	.L186:
1379:Src/BLDC_controller.c **** 
 2739              		.loc 1 1379 5 is_stmt 1 view .LVU911
1379:Src/BLDC_controller.c **** 
 2740              		.loc 1 1379 22 is_stmt 0 view .LVU912
 2741 0378 B6F90E30 		ldrsh	r3, [r6, #14]
1379:Src/BLDC_controller.c **** 
 2742              		.loc 1 1379 41 view .LVU913
 2743 037c 95F8F890 		ldrb	r9, [r5, #248]	@ zero_extendqisi2
1379:Src/BLDC_controller.c **** 
 2744              		.loc 1 1379 36 view .LVU914
 2745 0380 09FB03F9 		mul	r9, r9, r3
1379:Src/BLDC_controller.c **** 
 2746              		.loc 1 1379 17 view .LVU915
 2747 0384 A9F5F079 		sub	r9, r9, #480
 2748              	.LVL271:
1387:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2749              		.loc 1 1387 5 is_stmt 1 view .LVU916
1388:Src/BLDC_controller.c **** 
 2750              		.loc 1 1388 7 is_stmt 0 view .LVU917
 2751 0388 4FF4B451 		mov	r1, #5760
 2752 038c 4846     		mov	r0, r9
 2753              	.LVL272:
1388:Src/BLDC_controller.c **** 
 2754              		.loc 1 1388 7 view .LVU918
 2755 038e FFF7FEFF 		bl	div_nde_s32_floor
 2756              	.LVL273:
1387:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2757              		.loc 1 1387 64 view .LVU919
 2758 0392 80B2     		uxth	r0, r0
1388:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 78


 2759              		.loc 1 1388 44 view .LVU920
 2760 0394 00EB4000 		add	r0, r0, r0, lsl #1
 2761 0398 C0EB0013 		rsb	r3, r0, r0, lsl #4
 2762 039c DB00     		lsls	r3, r3, #3
 2763 039e 9BB2     		uxth	r3, r3
1388:Src/BLDC_controller.c **** 
 2764              		.loc 1 1388 51 view .LVU921
 2765 03a0 1B01     		lsls	r3, r3, #4
 2766 03a2 9BB2     		uxth	r3, r3
1387:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2767              		.loc 1 1387 51 view .LVU922
 2768 03a4 A9EB0309 		sub	r9, r9, r3
 2769              	.LVL274:
1387:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2770              		.loc 1 1387 29 view .LVU923
 2771 03a8 0FFA89F9 		sxth	r9, r9
1388:Src/BLDC_controller.c **** 
 2772              		.loc 1 1388 58 view .LVU924
 2773 03ac 4FEA8909 		lsl	r9, r9, #2
1387:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2774              		.loc 1 1387 17 view .LVU925
 2775 03b0 0FFA89F3 		sxth	r3, r9
 2776 03b4 0A93     		str	r3, [sp, #40]
 2777              	.LVL275:
1387:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2778              		.loc 1 1387 17 view .LVU926
 2779 03b6 76E7     		b	.L195
 2780              	.LVL276:
 2781              	.L358:
1401:Src/BLDC_controller.c ****   }
 2782              		.loc 1 1401 16 view .LVU927
 2783 03b8 4FF00009 		mov	r9, #0
 2784 03bc 7CE7     		b	.L196
 2785              	.LVL277:
 2786              	.L437:
1459:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2787              		.loc 1 1459 44 view .LVU928
 2788 03be 47F6FF73 		movw	r3, #32767
 2789 03c2 9EE7     		b	.L200
 2790              	.L438:
1460:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2791              		.loc 1 1460 36 view .LVU929
 2792 03c4 43F6FF72 		movw	r2, #16383
 2793 03c8 A1E7     		b	.L201
 2794              	.LVL278:
 2795              	.L361:
1462:Src/BLDC_controller.c ****       } else {
 2796              		.loc 1 1462 19 view .LVU930
 2797 03ca 47F6FF73 		movw	r3, #32767
 2798              	.LVL279:
 2799              	.L202:
1466:Src/BLDC_controller.c ****         }
1467:Src/BLDC_controller.c ****       }
1468:Src/BLDC_controller.c **** 
1469:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)rtb_Gain3;
 2800              		.loc 1 1469 7 is_stmt 1 view .LVU931
 2801              		.loc 1 1469 18 is_stmt 0 view .LVU932
ARM GAS  /tmp/ccVzdWer.s 			page 79


 2802 03ce 0FFA83F8 		sxth	r8, r3
 2803              	.LVL280:
 2804              	.L203:
1470:Src/BLDC_controller.c **** 
1471:Src/BLDC_controller.c ****       /* End of Sum: '<S53>/Sum1' */
1472:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S49>/Clarke_PhasesAB' */
1473:Src/BLDC_controller.c ****     } else if (rtP->z_selPhaCurMeasABC == 1) {
1474:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesBC' incorporates:
1475:Src/BLDC_controller.c ****        *  ActionPort: '<S55>/Action Port'
1476:Src/BLDC_controller.c ****        */
1477:Src/BLDC_controller.c ****       /* Sum: '<S55>/Sum3' */
1478:Src/BLDC_controller.c ****       rtb_Gain3 = rtb_Saturation - rtb_Saturation1;
1479:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
1480:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1481:Src/BLDC_controller.c ****       } else {
1482:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
1483:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
1484:Src/BLDC_controller.c ****         }
1485:Src/BLDC_controller.c ****       }
1486:Src/BLDC_controller.c **** 
1487:Src/BLDC_controller.c ****       /* Gain: '<S55>/Gain2' incorporates:
1488:Src/BLDC_controller.c ****        *  Sum: '<S55>/Sum3'
1489:Src/BLDC_controller.c ****        */
1490:Src/BLDC_controller.c ****       rtb_Gain3 *= 18919;
1491:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15);
1492:Src/BLDC_controller.c **** 
1493:Src/BLDC_controller.c ****       /* Sum: '<S55>/Sum1' */
1494:Src/BLDC_controller.c ****       rtb_Gain3 = -rtb_Saturation - rtb_Saturation1;
1495:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
1496:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1497:Src/BLDC_controller.c ****       } else {
1498:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
1499:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
1500:Src/BLDC_controller.c ****         }
1501:Src/BLDC_controller.c ****       }
1502:Src/BLDC_controller.c **** 
1503:Src/BLDC_controller.c ****       rtb_Saturation = (int16_T)rtb_Gain3;
1504:Src/BLDC_controller.c **** 
1505:Src/BLDC_controller.c ****       /* End of Sum: '<S55>/Sum1' */
1506:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S49>/Clarke_PhasesBC' */
1507:Src/BLDC_controller.c ****     } else {
1508:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesAC' incorporates:
1509:Src/BLDC_controller.c ****        *  ActionPort: '<S54>/Action Port'
1510:Src/BLDC_controller.c ****        */
1511:Src/BLDC_controller.c ****       /* Gain: '<S54>/Gain4' */
1512:Src/BLDC_controller.c ****       rtb_Gain3 = 18919 * rtb_Saturation;
1513:Src/BLDC_controller.c **** 
1514:Src/BLDC_controller.c ****       /* Gain: '<S54>/Gain2' */
1515:Src/BLDC_controller.c ****       rtb_Sum1_jt = 18919 * rtb_Saturation1;
1516:Src/BLDC_controller.c **** 
1517:Src/BLDC_controller.c ****       /* Sum: '<S54>/Sum1' incorporates:
1518:Src/BLDC_controller.c ****        *  Gain: '<S54>/Gain2'
1519:Src/BLDC_controller.c ****        *  Gain: '<S54>/Gain4'
1520:Src/BLDC_controller.c ****        */
1521:Src/BLDC_controller.c ****       rtb_Gain3 = -(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15) - (int16_T)
1522:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
1523:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
ARM GAS  /tmp/ccVzdWer.s 			page 80


1524:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1525:Src/BLDC_controller.c ****       } else {
1526:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
1527:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
1528:Src/BLDC_controller.c ****         }
1529:Src/BLDC_controller.c ****       }
1530:Src/BLDC_controller.c **** 
1531:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)rtb_Gain3;
1532:Src/BLDC_controller.c **** 
1533:Src/BLDC_controller.c ****       /* End of Sum: '<S54>/Sum1' */
1534:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S49>/Clarke_PhasesAC' */
1535:Src/BLDC_controller.c ****     }
1536:Src/BLDC_controller.c **** 
1537:Src/BLDC_controller.c ****     /* End of If: '<S49>/If1' */
1538:Src/BLDC_controller.c **** 
1539:Src/BLDC_controller.c ****     /* PreLookup: '<S52>/a_elecAngle_XA' */
1540:Src/BLDC_controller.c ****     rtb_a_elecAngle_XA_g = plook_u8s16_evencka(rtb_Merge_m, 0, 128U, 180U);
 2805              		.loc 1 1540 5 is_stmt 1 view .LVU933
 2806              		.loc 1 1540 28 is_stmt 0 view .LVU934
 2807 03d2 B423     		movs	r3, #180
 2808 03d4 8022     		movs	r2, #128
 2809 03d6 0021     		movs	r1, #0
 2810 03d8 0A98     		ldr	r0, [sp, #40]
 2811 03da FFF7FEFF 		bl	plook_u8s16_evencka
 2812              	.LVL281:
1541:Src/BLDC_controller.c **** 
1542:Src/BLDC_controller.c ****     /* Interpolation_n-D: '<S52>/r_sin_M1' */
1543:Src/BLDC_controller.c ****     rtDW->r_sin_M1 = rtConstP.r_sin_M1_Table[rtb_a_elecAngle_XA_g];
 2813              		.loc 1 1543 5 is_stmt 1 view .LVU935
 2814              		.loc 1 1543 45 is_stmt 0 view .LVU936
 2815 03de B74B     		ldr	r3, .L469
 2816 03e0 33F91020 		ldrsh	r2, [r3, r0, lsl #1]
 2817              		.loc 1 1543 20 view .LVU937
 2818 03e4 A4F87C20 		strh	r2, [r4, #124]	@ movhi
1544:Src/BLDC_controller.c **** 
1545:Src/BLDC_controller.c ****     /* Interpolation_n-D: '<S52>/r_cos_M1' */
1546:Src/BLDC_controller.c ****     rtDW->r_cos_M1 = rtConstP.r_cos_M1_Table[rtb_a_elecAngle_XA_g];
 2819              		.loc 1 1546 5 is_stmt 1 view .LVU938
 2820              		.loc 1 1546 45 is_stmt 0 view .LVU939
 2821 03e8 B430     		adds	r0, r0, #180
 2822              	.LVL282:
 2823              		.loc 1 1546 45 view .LVU940
 2824 03ea 03EB4000 		add	r0, r3, r0, lsl #1
 2825 03ee B0F90230 		ldrsh	r3, [r0, #2]
 2826              		.loc 1 1546 20 view .LVU941
 2827 03f2 A4F87E30 		strh	r3, [r4, #126]	@ movhi
1547:Src/BLDC_controller.c **** 
1548:Src/BLDC_controller.c ****     /* If: '<S45>/If2' incorporates:
1549:Src/BLDC_controller.c ****      *  Constant: '<S50>/cf_currFilt'
1550:Src/BLDC_controller.c ****      *  Inport: '<Root>/b_motEna'
1551:Src/BLDC_controller.c ****      */
1552:Src/BLDC_controller.c ****     rtb_Sum2_h = rtDW->If2_ActiveSubsystem_a;
 2828              		.loc 1 1552 5 is_stmt 1 view .LVU942
 2829              		.loc 1 1552 16 is_stmt 0 view .LVU943
 2830 03f6 94F99830 		ldrsb	r3, [r4, #152]
 2831              	.LVL283:
1553:Src/BLDC_controller.c ****     UnitDelay3 = -1;
ARM GAS  /tmp/ccVzdWer.s 			page 81


 2832              		.loc 1 1553 5 is_stmt 1 view .LVU944
1554:Src/BLDC_controller.c ****     if (rtU->b_motEna) {
 2833              		.loc 1 1554 5 view .LVU945
 2834              		.loc 1 1554 12 is_stmt 0 view .LVU946
 2835 03fa 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 2836              		.loc 1 1554 8 view .LVU947
 2837 03fc 0AB9     		cbnz	r2, .L211
1553:Src/BLDC_controller.c ****     UnitDelay3 = -1;
 2838              		.loc 1 1553 16 view .LVU948
 2839 03fe 4FF0FF39 		mov	r9, #-1
 2840              	.L211:
 2841              	.LVL284:
1555:Src/BLDC_controller.c ****       UnitDelay3 = 0;
1556:Src/BLDC_controller.c ****     }
1557:Src/BLDC_controller.c **** 
1558:Src/BLDC_controller.c ****     rtDW->If2_ActiveSubsystem_a = UnitDelay3;
 2842              		.loc 1 1558 5 is_stmt 1 view .LVU949
 2843              		.loc 1 1558 33 is_stmt 0 view .LVU950
 2844 0402 84F89890 		strb	r9, [r4, #152]
1559:Src/BLDC_controller.c ****     if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 2845              		.loc 1 1559 5 is_stmt 1 view .LVU951
 2846              		.loc 1 1559 8 is_stmt 0 view .LVU952
 2847 0406 9945     		cmp	r9, r3
 2848 0408 07D0     		beq	.L212
 2849              		.loc 1 1559 36 discriminator 1 view .LVU953
 2850 040a 33B9     		cbnz	r3, .L212
1560:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/iq' */
1561:Src/BLDC_controller.c ****       rtDW->DataTypeConversion[0] = 0;
 2851              		.loc 1 1561 7 is_stmt 1 view .LVU954
 2852              		.loc 1 1561 35 is_stmt 0 view .LVU955
 2853 040c 0022     		movs	r2, #0
 2854 040e A4F85220 		strh	r2, [r4, #82]	@ movhi
1562:Src/BLDC_controller.c **** 
1563:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/iqAbs' */
1564:Src/BLDC_controller.c ****       rtDW->Abs5_h = 0;
 2855              		.loc 1 1564 7 is_stmt 1 view .LVU956
 2856              		.loc 1 1564 20 is_stmt 0 view .LVU957
 2857 0412 A4F87820 		strh	r2, [r4, #120]	@ movhi
1565:Src/BLDC_controller.c **** 
1566:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/id' */
1567:Src/BLDC_controller.c ****       rtDW->DataTypeConversion[1] = 0;
 2858              		.loc 1 1567 7 is_stmt 1 view .LVU958
 2859              		.loc 1 1567 35 is_stmt 0 view .LVU959
 2860 0416 A4F85420 		strh	r2, [r4, #84]	@ movhi
 2861              	.L212:
1568:Src/BLDC_controller.c ****     }
1569:Src/BLDC_controller.c **** 
1570:Src/BLDC_controller.c ****     if (UnitDelay3 == 0) {
 2862              		.loc 1 1570 5 is_stmt 1 view .LVU960
 2863              		.loc 1 1570 8 is_stmt 0 view .LVU961
 2864 041a B9F1000F 		cmp	r9, #0
 2865 041e 40F0A080 		bne	.L198
1571:Src/BLDC_controller.c ****       if (0 != rtb_Sum2_h) {
 2866              		.loc 1 1571 7 is_stmt 1 view .LVU962
 2867              		.loc 1 1571 10 is_stmt 0 view .LVU963
 2868 0422 002B     		cmp	r3, #0
 2869 0424 70D1     		bne	.L440
ARM GAS  /tmp/ccVzdWer.s 			page 82


 2870              	.LVL285:
 2871              	.L213:
1572:Src/BLDC_controller.c ****         /* SystemReset for IfAction SubSystem: '<S45>/Current_Filtering' incorporates:
1573:Src/BLDC_controller.c ****          *  ActionPort: '<S50>/Action Port'
1574:Src/BLDC_controller.c ****          */
1575:Src/BLDC_controller.c **** 
1576:Src/BLDC_controller.c ****         /* SystemReset for Atomic SubSystem: '<S50>/Low_Pass_Filter' */
1577:Src/BLDC_controller.c **** 
1578:Src/BLDC_controller.c ****         /* SystemReset for If: '<S45>/If2' */
1579:Src/BLDC_controller.c ****         Low_Pass_Filter_Reset(&rtDW->Low_Pass_Filter_m);
1580:Src/BLDC_controller.c **** 
1581:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S50>/Low_Pass_Filter' */
1582:Src/BLDC_controller.c **** 
1583:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S45>/Current_Filtering' */
1584:Src/BLDC_controller.c ****       }
1585:Src/BLDC_controller.c **** 
1586:Src/BLDC_controller.c ****       /* Sum: '<S51>/Sum6' incorporates:
1587:Src/BLDC_controller.c ****        *  Product: '<S51>/Divide1'
1588:Src/BLDC_controller.c ****        *  Product: '<S51>/Divide4'
1589:Src/BLDC_controller.c ****        */
1590:Src/BLDC_controller.c ****       rtb_Gain3 = (int16_T)((rtb_Merge1 * rtDW->r_cos_M1) >> 14) - (int16_T)
 2872              		.loc 1 1590 7 is_stmt 1 view .LVU964
 2873              		.loc 1 1590 41 is_stmt 0 view .LVU965
 2874 0426 4046     		mov	r0, r8
 2875              		.loc 1 1590 47 view .LVU966
 2876 0428 B4F97E10 		ldrsh	r1, [r4, #126]
 2877              		.loc 1 1590 41 view .LVU967
 2878 042c 01FB08F8 		mul	r8, r1, r8
 2879              	.LVL286:
 2880              		.loc 1 1590 19 view .LVU968
 2881 0430 48F38F38 		sbfx	r8, r8, #14, #16
1591:Src/BLDC_controller.c ****         ((rtb_Saturation * rtDW->r_sin_M1) >> 14);
 2882              		.loc 1 1591 26 view .LVU969
 2883 0434 5346     		mov	r3, r10
 2884              		.loc 1 1591 32 view .LVU970
 2885 0436 B4F97C20 		ldrsh	r2, [r4, #124]
 2886              		.loc 1 1591 26 view .LVU971
 2887 043a 02FB0AFA 		mul	r10, r2, r10
 2888              	.LVL287:
1590:Src/BLDC_controller.c ****         ((rtb_Saturation * rtDW->r_sin_M1) >> 14);
 2889              		.loc 1 1590 68 view .LVU972
 2890 043e 4AF38F3A 		sbfx	r10, r10, #14, #16
1590:Src/BLDC_controller.c ****         ((rtb_Saturation * rtDW->r_sin_M1) >> 14);
 2891              		.loc 1 1590 17 view .LVU973
 2892 0442 A8EB0A0A 		sub	r10, r8, r10
 2893              	.LVL288:
1592:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2894              		.loc 1 1592 7 is_stmt 1 view .LVU974
 2895              		.loc 1 1592 10 is_stmt 0 view .LVU975
 2896 0446 BAF5004F 		cmp	r10, #32768
 2897 044a 62DA     		bge	.L372
1593:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1594:Src/BLDC_controller.c ****       } else {
1595:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
 2898              		.loc 1 1595 9 is_stmt 1 view .LVU976
 2899              		.loc 1 1595 12 is_stmt 0 view .LVU977
 2900 044c 1AF5004F 		cmn	r10, #32768
ARM GAS  /tmp/ccVzdWer.s 			page 83


 2901 0450 61DA     		bge	.L214
1596:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2902              		.loc 1 1596 21 view .LVU978
 2903 0452 DFF86CA2 		ldr	r10, .L469+4
 2904              	.LVL289:
 2905              		.loc 1 1596 21 view .LVU979
 2906 0456 5EE0     		b	.L214
 2907              	.LVL290:
 2908              	.L199:
1473:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesBC' incorporates:
 2909              		.loc 1 1473 12 is_stmt 1 view .LVU980
1473:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesBC' incorporates:
 2910              		.loc 1 1473 15 is_stmt 0 view .LVU981
 2911 0458 012B     		cmp	r3, #1
 2912 045a 1CD0     		beq	.L441
1512:Src/BLDC_controller.c **** 
 2913              		.loc 1 1512 7 is_stmt 1 view .LVU982
1512:Src/BLDC_controller.c **** 
 2914              		.loc 1 1512 17 is_stmt 0 view .LVU983
 2915 045c 44F6E712 		movw	r2, #18919
 2916 0460 02FB0AF1 		mul	r1, r2, r10
 2917              	.LVL291:
1515:Src/BLDC_controller.c **** 
 2918              		.loc 1 1515 7 is_stmt 1 view .LVU984
1515:Src/BLDC_controller.c **** 
 2919              		.loc 1 1515 19 is_stmt 0 view .LVU985
 2920 0464 02FB08F2 		mul	r2, r2, r8
 2921              	.LVL292:
1521:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2922              		.loc 1 1521 7 is_stmt 1 view .LVU986
1521:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2923              		.loc 1 1521 45 is_stmt 0 view .LVU987
 2924 0468 0029     		cmp	r1, #0
 2925 046a 42DB     		blt	.L442
 2926 046c 0023     		movs	r3, #0
 2927              	.L208:
1521:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2928              		.loc 1 1521 50 discriminator 4 view .LVU988
 2929 046e 0B44     		add	r3, r3, r1
1521:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2930              		.loc 1 1521 63 discriminator 4 view .LVU989
 2931 0470 DB13     		asrs	r3, r3, #15
1521:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2932              		.loc 1 1521 19 discriminator 4 view .LVU990
 2933 0472 5B42     		rsbs	r3, r3, #0
1522:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2934              		.loc 1 1522 36 discriminator 4 view .LVU991
 2935 0474 002A     		cmp	r2, #0
 2936 0476 3FDB     		blt	.L443
1522:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2937              		.loc 1 1522 36 view .LVU992
 2938 0478 4FF00008 		mov	r8, #0
 2939              	.LVL293:
 2940              	.L209:
1522:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2941              		.loc 1 1522 41 discriminator 4 view .LVU993
 2942 047c 9044     		add	r8, r8, r2
ARM GAS  /tmp/ccVzdWer.s 			page 84


1521:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2943              		.loc 1 1521 72 discriminator 4 view .LVU994
 2944 047e 48F38F38 		sbfx	r8, r8, #14, #16
1521:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2945              		.loc 1 1521 17 discriminator 4 view .LVU995
 2946 0482 A3EB0803 		sub	r3, r3, r8
 2947              	.LVL294:
1523:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2948              		.loc 1 1523 7 is_stmt 1 discriminator 4 view .LVU996
1523:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2949              		.loc 1 1523 10 is_stmt 0 discriminator 4 view .LVU997
 2950 0486 B3F5004F 		cmp	r3, #32768
 2951 048a 38DA     		bge	.L370
1526:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2952              		.loc 1 1526 9 is_stmt 1 view .LVU998
1526:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2953              		.loc 1 1526 12 is_stmt 0 view .LVU999
 2954 048c 13F5004F 		cmn	r3, #32768
 2955 0490 37DA     		bge	.L210
1527:Src/BLDC_controller.c ****         }
 2956              		.loc 1 1527 21 view .LVU1000
 2957 0492 8B4B     		ldr	r3, .L469+4
 2958              	.LVL295:
1527:Src/BLDC_controller.c ****         }
 2959              		.loc 1 1527 21 view .LVU1001
 2960 0494 35E0     		b	.L210
 2961              	.LVL296:
 2962              	.L441:
1478:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2963              		.loc 1 1478 7 is_stmt 1 view .LVU1002
1478:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2964              		.loc 1 1478 34 is_stmt 0 view .LVU1003
 2965 0496 5346     		mov	r3, r10
 2966 0498 4146     		mov	r1, r8
1478:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2967              		.loc 1 1478 17 view .LVU1004
 2968 049a AAEB0802 		sub	r2, r10, r8
 2969              	.LVL297:
1479:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2970              		.loc 1 1479 7 is_stmt 1 view .LVU1005
1479:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2971              		.loc 1 1479 10 is_stmt 0 view .LVU1006
 2972 049e B2F5004F 		cmp	r2, #32768
 2973 04a2 04DA     		bge	.L363
1482:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2974              		.loc 1 1482 9 is_stmt 1 view .LVU1007
1482:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2975              		.loc 1 1482 12 is_stmt 0 view .LVU1008
 2976 04a4 12F5004F 		cmn	r2, #32768
 2977 04a8 03DA     		bge	.L205
1483:Src/BLDC_controller.c ****         }
 2978              		.loc 1 1483 21 view .LVU1009
 2979 04aa 854A     		ldr	r2, .L469+4
 2980              	.LVL298:
1483:Src/BLDC_controller.c ****         }
 2981              		.loc 1 1483 21 view .LVU1010
 2982 04ac 01E0     		b	.L205
ARM GAS  /tmp/ccVzdWer.s 			page 85


 2983              	.LVL299:
 2984              	.L363:
1480:Src/BLDC_controller.c ****       } else {
 2985              		.loc 1 1480 19 view .LVU1011
 2986 04ae 47F6FF72 		movw	r2, #32767
 2987              	.LVL300:
 2988              	.L205:
1490:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15);
 2989              		.loc 1 1490 7 is_stmt 1 view .LVU1012
1490:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15);
 2990              		.loc 1 1490 17 is_stmt 0 view .LVU1013
 2991 04b2 44F6E718 		movw	r8, #18919
 2992              	.LVL301:
1490:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15);
 2993              		.loc 1 1490 17 view .LVU1014
 2994 04b6 08FB02F8 		mul	r8, r8, r2
 2995              	.LVL302:
1491:Src/BLDC_controller.c **** 
 2996              		.loc 1 1491 7 is_stmt 1 view .LVU1015
1491:Src/BLDC_controller.c **** 
 2997              		.loc 1 1491 54 is_stmt 0 view .LVU1016
 2998 04ba B8F1000F 		cmp	r8, #0
 2999 04be 10DB     		blt	.L444
 3000 04c0 4FF0000A 		mov	r10, #0
 3001              	.LVL303:
 3002              	.L206:
1491:Src/BLDC_controller.c **** 
 3003              		.loc 1 1491 59 discriminator 4 view .LVU1017
 3004 04c4 D044     		add	r8, r8, r10
 3005              	.LVL304:
1491:Src/BLDC_controller.c **** 
 3006              		.loc 1 1491 18 discriminator 4 view .LVU1018
 3007 04c6 48F3CF38 		sbfx	r8, r8, #15, #16
 3008              	.LVL305:
1494:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 3009              		.loc 1 1494 7 is_stmt 1 discriminator 4 view .LVU1019
1494:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 3010              		.loc 1 1494 19 is_stmt 0 discriminator 4 view .LVU1020
 3011 04ca C3F1000A 		rsb	r10, r3, #0
1494:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 3012              		.loc 1 1494 17 discriminator 4 view .LVU1021
 3013 04ce AAEB0101 		sub	r1, r10, r1
 3014              	.LVL306:
1495:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 3015              		.loc 1 1495 7 is_stmt 1 discriminator 4 view .LVU1022
1495:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 3016              		.loc 1 1495 10 is_stmt 0 discriminator 4 view .LVU1023
 3017 04d2 B1F5004F 		cmp	r1, #32768
 3018 04d6 07DA     		bge	.L366
1498:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 3019              		.loc 1 1498 9 is_stmt 1 view .LVU1024
1498:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 3020              		.loc 1 1498 12 is_stmt 0 view .LVU1025
 3021 04d8 11F5004F 		cmn	r1, #32768
 3022 04dc 06DA     		bge	.L207
1499:Src/BLDC_controller.c ****         }
 3023              		.loc 1 1499 21 view .LVU1026
ARM GAS  /tmp/ccVzdWer.s 			page 86


 3024 04de 7849     		ldr	r1, .L469+4
 3025              	.LVL307:
1499:Src/BLDC_controller.c ****         }
 3026              		.loc 1 1499 21 view .LVU1027
 3027 04e0 04E0     		b	.L207
 3028              	.LVL308:
 3029              	.L444:
1491:Src/BLDC_controller.c **** 
 3030              		.loc 1 1491 54 view .LVU1028
 3031 04e2 47F6FF7A 		movw	r10, #32767
 3032              	.LVL309:
1491:Src/BLDC_controller.c **** 
 3033              		.loc 1 1491 54 view .LVU1029
 3034 04e6 EDE7     		b	.L206
 3035              	.LVL310:
 3036              	.L366:
1496:Src/BLDC_controller.c ****       } else {
 3037              		.loc 1 1496 19 view .LVU1030
 3038 04e8 47F6FF71 		movw	r1, #32767
 3039              	.LVL311:
 3040              	.L207:
1503:Src/BLDC_controller.c **** 
 3041              		.loc 1 1503 7 is_stmt 1 view .LVU1031
1503:Src/BLDC_controller.c **** 
 3042              		.loc 1 1503 22 is_stmt 0 view .LVU1032
 3043 04ec 0FFA81FA 		sxth	r10, r1
 3044              	.LVL312:
1503:Src/BLDC_controller.c **** 
 3045              		.loc 1 1503 22 view .LVU1033
 3046 04f0 6FE7     		b	.L203
 3047              	.LVL313:
 3048              	.L442:
1521:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 3049              		.loc 1 1521 45 view .LVU1034
 3050 04f2 47F6FF73 		movw	r3, #32767
 3051 04f6 BAE7     		b	.L208
 3052              	.L443:
1522:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 3053              		.loc 1 1522 36 view .LVU1035
 3054 04f8 43F6FF78 		movw	r8, #16383
 3055              	.LVL314:
1522:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 3056              		.loc 1 1522 36 view .LVU1036
 3057 04fc BEE7     		b	.L209
 3058              	.LVL315:
 3059              	.L370:
1524:Src/BLDC_controller.c ****       } else {
 3060              		.loc 1 1524 19 view .LVU1037
 3061 04fe 47F6FF73 		movw	r3, #32767
 3062              	.LVL316:
 3063              	.L210:
1531:Src/BLDC_controller.c **** 
 3064              		.loc 1 1531 7 is_stmt 1 view .LVU1038
1531:Src/BLDC_controller.c **** 
 3065              		.loc 1 1531 18 is_stmt 0 view .LVU1039
 3066 0502 0FFA83F8 		sxth	r8, r3
 3067              	.LVL317:
ARM GAS  /tmp/ccVzdWer.s 			page 87


1531:Src/BLDC_controller.c **** 
 3068              		.loc 1 1531 18 view .LVU1040
 3069 0506 64E7     		b	.L203
 3070              	.LVL318:
 3071              	.L440:
1579:Src/BLDC_controller.c **** 
 3072              		.loc 1 1579 9 is_stmt 1 view .LVU1041
 3073 0508 04F13800 		add	r0, r4, #56
 3074 050c FFF7FEFF 		bl	Low_Pass_Filter_Reset
 3075              	.LVL319:
1579:Src/BLDC_controller.c **** 
 3076              		.loc 1 1579 9 is_stmt 0 view .LVU1042
 3077 0510 89E7     		b	.L213
 3078              	.LVL320:
 3079              	.L372:
1593:Src/BLDC_controller.c ****       } else {
 3080              		.loc 1 1593 19 view .LVU1043
 3081 0512 47F6FF7A 		movw	r10, #32767
 3082              	.LVL321:
 3083              	.L214:
1597:Src/BLDC_controller.c ****         }
1598:Src/BLDC_controller.c ****       }
1599:Src/BLDC_controller.c **** 
1600:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S45>/Current_Filtering' incorporates:
1601:Src/BLDC_controller.c ****        *  ActionPort: '<S50>/Action Port'
1602:Src/BLDC_controller.c ****        */
1603:Src/BLDC_controller.c ****       /* SignalConversion: '<S50>/TmpSignal ConversionAtLow_Pass_FilterInport1' incorporates:
1604:Src/BLDC_controller.c ****        *  Sum: '<S51>/Sum6'
1605:Src/BLDC_controller.c ****        */
1606:Src/BLDC_controller.c ****       rtb_TmpSignalConversionAtLow_Pa[0] = (int16_T)rtb_Gain3;
 3084              		.loc 1 1606 7 is_stmt 1 view .LVU1044
 3085              		.loc 1 1606 42 is_stmt 0 view .LVU1045
 3086 0516 ADF848A0 		strh	r10, [sp, #72]	@ movhi
1607:Src/BLDC_controller.c **** 
1608:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S45>/Current_Filtering' */
1609:Src/BLDC_controller.c **** 
1610:Src/BLDC_controller.c ****       /* Sum: '<S51>/Sum1' incorporates:
1611:Src/BLDC_controller.c ****        *  Product: '<S51>/Divide2'
1612:Src/BLDC_controller.c ****        *  Product: '<S51>/Divide3'
1613:Src/BLDC_controller.c ****        */
1614:Src/BLDC_controller.c ****       rtb_Gain3 = (int16_T)((rtb_Saturation * rtDW->r_cos_M1) >> 14) + (int16_T)
 3087              		.loc 1 1614 7 is_stmt 1 view .LVU1046
 3088              		.loc 1 1614 45 is_stmt 0 view .LVU1047
 3089 051a 03FB01F3 		mul	r3, r3, r1
 3090              		.loc 1 1614 19 view .LVU1048
 3091 051e 43F38F33 		sbfx	r3, r3, #14, #16
1615:Src/BLDC_controller.c ****         ((rtb_Merge1 * rtDW->r_sin_M1) >> 14);
 3092              		.loc 1 1615 22 view .LVU1049
 3093 0522 02FB00F2 		mul	r2, r2, r0
1614:Src/BLDC_controller.c ****         ((rtb_Merge1 * rtDW->r_sin_M1) >> 14);
 3094              		.loc 1 1614 72 view .LVU1050
 3095 0526 42F38F32 		sbfx	r2, r2, #14, #16
1614:Src/BLDC_controller.c ****         ((rtb_Merge1 * rtDW->r_sin_M1) >> 14);
 3096              		.loc 1 1614 17 view .LVU1051
 3097 052a 1344     		add	r3, r3, r2
 3098              	.LVL322:
1616:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
ARM GAS  /tmp/ccVzdWer.s 			page 88


 3099              		.loc 1 1616 7 is_stmt 1 view .LVU1052
 3100              		.loc 1 1616 10 is_stmt 0 view .LVU1053
 3101 052c B3F5004F 		cmp	r3, #32768
 3102 0530 04DA     		bge	.L374
1617:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1618:Src/BLDC_controller.c ****       } else {
1619:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
 3103              		.loc 1 1619 9 is_stmt 1 view .LVU1054
 3104              		.loc 1 1619 12 is_stmt 0 view .LVU1055
 3105 0532 13F5004F 		cmn	r3, #32768
 3106 0536 03DA     		bge	.L215
1620:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 3107              		.loc 1 1620 21 view .LVU1056
 3108 0538 614B     		ldr	r3, .L469+4
 3109              	.LVL323:
 3110              		.loc 1 1620 21 view .LVU1057
 3111 053a 01E0     		b	.L215
 3112              	.LVL324:
 3113              	.L374:
1617:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 3114              		.loc 1 1617 19 view .LVU1058
 3115 053c 47F6FF73 		movw	r3, #32767
 3116              	.LVL325:
 3117              	.L215:
1621:Src/BLDC_controller.c ****         }
1622:Src/BLDC_controller.c ****       }
1623:Src/BLDC_controller.c **** 
1624:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S45>/Current_Filtering' incorporates:
1625:Src/BLDC_controller.c ****        *  ActionPort: '<S50>/Action Port'
1626:Src/BLDC_controller.c ****        */
1627:Src/BLDC_controller.c ****       /* SignalConversion: '<S50>/TmpSignal ConversionAtLow_Pass_FilterInport1' incorporates:
1628:Src/BLDC_controller.c ****        *  Sum: '<S51>/Sum1'
1629:Src/BLDC_controller.c ****        */
1630:Src/BLDC_controller.c ****       rtb_TmpSignalConversionAtLow_Pa[1] = (int16_T)rtb_Gain3;
 3118              		.loc 1 1630 7 is_stmt 1 view .LVU1059
 3119              		.loc 1 1630 42 is_stmt 0 view .LVU1060
 3120 0540 ADF84A30 		strh	r3, [sp, #74]	@ movhi
1631:Src/BLDC_controller.c **** 
1632:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S50>/Low_Pass_Filter' */
1633:Src/BLDC_controller.c ****       Low_Pass_Filter(rtb_TmpSignalConversionAtLow_Pa, rtP->cf_currFilt,
 3121              		.loc 1 1633 7 is_stmt 1 view .LVU1061
 3122 0544 04F13803 		add	r3, r4, #56
 3123              	.LVL326:
 3124              		.loc 1 1633 7 is_stmt 0 view .LVU1062
 3125 0548 04F15202 		add	r2, r4, #82
 3126 054c B5F8EC10 		ldrh	r1, [r5, #236]
 3127 0550 12A8     		add	r0, sp, #72
 3128 0552 FFF7FEFF 		bl	Low_Pass_Filter
 3129              	.LVL327:
1634:Src/BLDC_controller.c ****                       rtDW->DataTypeConversion, &rtDW->Low_Pass_Filter_m);
1635:Src/BLDC_controller.c **** 
1636:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S50>/Low_Pass_Filter' */
1637:Src/BLDC_controller.c **** 
1638:Src/BLDC_controller.c ****       /* Abs: '<S50>/Abs5' incorporates:
1639:Src/BLDC_controller.c ****        *  Constant: '<S50>/cf_currFilt'
1640:Src/BLDC_controller.c ****        */
1641:Src/BLDC_controller.c ****       if (rtDW->DataTypeConversion[0] < 0) {
ARM GAS  /tmp/ccVzdWer.s 			page 89


 3130              		.loc 1 1641 7 is_stmt 1 view .LVU1063
 3131              		.loc 1 1641 35 is_stmt 0 view .LVU1064
 3132 0556 B4F95230 		ldrsh	r3, [r4, #82]
 3133              		.loc 1 1641 10 view .LVU1065
 3134 055a 002B     		cmp	r3, #0
 3135 055c 49DB     		blt	.L445
1642:Src/BLDC_controller.c ****         rtDW->Abs5_h = (int16_T)-rtDW->DataTypeConversion[0];
1643:Src/BLDC_controller.c ****       } else {
1644:Src/BLDC_controller.c ****         rtDW->Abs5_h = rtDW->DataTypeConversion[0];
 3136              		.loc 1 1644 9 is_stmt 1 view .LVU1066
 3137              		.loc 1 1644 22 is_stmt 0 view .LVU1067
 3138 055e A4F87830 		strh	r3, [r4, #120]	@ movhi
 3139              	.L198:
1645:Src/BLDC_controller.c ****       }
1646:Src/BLDC_controller.c **** 
1647:Src/BLDC_controller.c ****       /* End of Abs: '<S50>/Abs5' */
1648:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S45>/Current_Filtering' */
1649:Src/BLDC_controller.c ****     }
1650:Src/BLDC_controller.c **** 
1651:Src/BLDC_controller.c ****     /* End of If: '<S45>/If2' */
1652:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S7>/Clarke_Park_Transform_Forward' */
1653:Src/BLDC_controller.c ****   }
1654:Src/BLDC_controller.c **** 
1655:Src/BLDC_controller.c ****   /* End of If: '<S7>/If1' */
1656:Src/BLDC_controller.c **** 
1657:Src/BLDC_controller.c ****   /* Chart: '<S1>/Task_Scheduler' incorporates:
1658:Src/BLDC_controller.c ****    *  UnitDelay: '<S2>/UnitDelay2'
1659:Src/BLDC_controller.c ****    *  UnitDelay: '<S2>/UnitDelay5'
1660:Src/BLDC_controller.c ****    *  UnitDelay: '<S2>/UnitDelay6'
1661:Src/BLDC_controller.c ****    */
1662:Src/BLDC_controller.c ****   if (rtDW->UnitDelay2_DSTATE_c) {
 3140              		.loc 1 1662 3 is_stmt 1 view .LVU1068
 3141              		.loc 1 1662 11 is_stmt 0 view .LVU1069
 3142 0562 94F8A330 		ldrb	r3, [r4, #163]	@ zero_extendqisi2
 3143              		.loc 1 1662 6 view .LVU1070
 3144 0566 002B     		cmp	r3, #0
 3145 0568 00F0F081 		beq	.L217
1663:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F02_Diagnostics' */
1664:Src/BLDC_controller.c ****     /* If: '<S4>/If2' incorporates:
1665:Src/BLDC_controller.c ****      *  Constant: '<S20>/CTRL_COMM2'
1666:Src/BLDC_controller.c ****      *  Constant: '<S20>/t_errDequal'
1667:Src/BLDC_controller.c ****      *  Constant: '<S20>/t_errQual'
1668:Src/BLDC_controller.c ****      *  Constant: '<S4>/b_diagEna'
1669:Src/BLDC_controller.c ****      *  RelationalOperator: '<S20>/Relational Operator2'
1670:Src/BLDC_controller.c ****      */
1671:Src/BLDC_controller.c ****     if (rtP->b_diagEna) {
 3146              		.loc 1 1671 5 is_stmt 1 view .LVU1071
 3147              		.loc 1 1671 12 is_stmt 0 view .LVU1072
 3148 056c 95F8FD30 		ldrb	r3, [r5, #253]	@ zero_extendqisi2
 3149              		.loc 1 1671 8 view .LVU1073
 3150 0570 002B     		cmp	r3, #0
 3151 0572 34D0     		beq	.L218
1672:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S4>/Diagnostics_Enabled' incorporates:
1673:Src/BLDC_controller.c ****        *  ActionPort: '<S20>/Action Port'
1674:Src/BLDC_controller.c ****        */
1675:Src/BLDC_controller.c ****       /* Switch: '<S20>/Switch3' incorporates:
1676:Src/BLDC_controller.c ****        *  Abs: '<S20>/Abs4'
ARM GAS  /tmp/ccVzdWer.s 			page 90


1677:Src/BLDC_controller.c ****        *  Constant: '<S13>/n_stdStillDet'
1678:Src/BLDC_controller.c ****        *  Constant: '<S20>/CTRL_COMM4'
1679:Src/BLDC_controller.c ****        *  Constant: '<S20>/r_errInpTgtThres'
1680:Src/BLDC_controller.c ****        *  Inport: '<Root>/b_motEna'
1681:Src/BLDC_controller.c ****        *  Logic: '<S20>/Logical Operator1'
1682:Src/BLDC_controller.c ****        *  RelationalOperator: '<S13>/Relational Operator9'
1683:Src/BLDC_controller.c ****        *  RelationalOperator: '<S20>/Relational Operator7'
1684:Src/BLDC_controller.c ****        *  S-Function (sfix_bitop): '<S20>/Bitwise Operator1'
1685:Src/BLDC_controller.c ****        *  UnitDelay: '<S20>/UnitDelay'
1686:Src/BLDC_controller.c ****        *  UnitDelay: '<S8>/UnitDelay4'
1687:Src/BLDC_controller.c ****        */
1688:Src/BLDC_controller.c ****       if ((rtDW->UnitDelay_DSTATE_e & 4) != 0) {
 3152              		.loc 1 1688 7 is_stmt 1 view .LVU1074
 3153              		.loc 1 1688 16 is_stmt 0 view .LVU1075
 3154 0574 94F89D30 		ldrb	r3, [r4, #157]	@ zero_extendqisi2
 3155              		.loc 1 1688 10 view .LVU1076
 3156 0578 13F0040F 		tst	r3, #4
 3157 057c 3ED0     		beq	.L219
1689:Src/BLDC_controller.c ****         rtb_RelationalOperator1_mv = true;
 3158              		.loc 1 1689 9 is_stmt 1 view .LVU1077
 3159              		.loc 1 1689 36 is_stmt 0 view .LVU1078
 3160 057e 0123     		movs	r3, #1
 3161 0580 8DF84F30 		strb	r3, [sp, #79]
 3162              	.L220:
1690:Src/BLDC_controller.c ****       } else {
1691:Src/BLDC_controller.c ****         if (rtDW->UnitDelay4_DSTATE_eu < 0) {
1692:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
1693:Src/BLDC_controller.c ****            *  UnitDelay: '<S8>/UnitDelay4'
1694:Src/BLDC_controller.c ****            */
1695:Src/BLDC_controller.c ****           rtb_Saturation1 = (int16_T)-rtDW->UnitDelay4_DSTATE_eu;
1696:Src/BLDC_controller.c ****         } else {
1697:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
1698:Src/BLDC_controller.c ****            *  UnitDelay: '<S8>/UnitDelay4'
1699:Src/BLDC_controller.c ****            */
1700:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->UnitDelay4_DSTATE_eu;
1701:Src/BLDC_controller.c ****         }
1702:Src/BLDC_controller.c **** 
1703:Src/BLDC_controller.c ****         rtb_RelationalOperator1_mv = (rtU->b_motEna && (Abs5 <
1704:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
1705:Src/BLDC_controller.c ****       }
1706:Src/BLDC_controller.c **** 
1707:Src/BLDC_controller.c ****       /* End of Switch: '<S20>/Switch3' */
1708:Src/BLDC_controller.c **** 
1709:Src/BLDC_controller.c ****       /* Sum: '<S20>/Sum' incorporates:
1710:Src/BLDC_controller.c ****        *  Constant: '<S20>/CTRL_COMM'
1711:Src/BLDC_controller.c ****        *  Constant: '<S20>/CTRL_COMM1'
1712:Src/BLDC_controller.c ****        *  DataTypeConversion: '<S20>/Data Type Conversion3'
1713:Src/BLDC_controller.c ****        *  Gain: '<S20>/g_Hb'
1714:Src/BLDC_controller.c ****        *  Gain: '<S20>/g_Hb1'
1715:Src/BLDC_controller.c ****        *  RelationalOperator: '<S20>/Relational Operator1'
1716:Src/BLDC_controller.c ****        *  RelationalOperator: '<S20>/Relational Operator3'
1717:Src/BLDC_controller.c ****        */
1718:Src/BLDC_controller.c ****       rtb_a_elecAngle_XA_g = (uint8_T)(((uint32_T)((Sum == 7) << 1) + (Sum == 0))
 3163              		.loc 1 1718 7 is_stmt 1 view .LVU1079
 3164              		.loc 1 1718 63 is_stmt 0 view .LVU1080
 3165 0584 099B     		ldr	r3, [sp, #36]
 3166 0586 072B     		cmp	r3, #7
ARM GAS  /tmp/ccVzdWer.s 			page 91


 3167 0588 55D0     		beq	.L446
 3168 058a 4FF00008 		mov	r8, #0
 3169              	.L223:
 3170              		.loc 1 1718 69 discriminator 4 view .LVU1081
 3171 058e 099B     		ldr	r3, [sp, #36]
 3172 0590 002B     		cmp	r3, #0
 3173 0592 08BF     		it	eq
 3174 0594 08F10108 		addeq	r8, r8, #1
1719:Src/BLDC_controller.c ****         + (rtb_RelationalOperator1_mv << 2));
 3175              		.loc 1 1719 39 discriminator 4 view .LVU1082
 3176 0598 9DF84F30 		ldrb	r3, [sp, #79]	@ zero_extendqisi2
 3177 059c 9B00     		lsls	r3, r3, #2
 3178 059e DBB2     		uxtb	r3, r3
1718:Src/BLDC_controller.c ****         + (rtb_RelationalOperator1_mv << 2));
 3179              		.loc 1 1718 28 discriminator 4 view .LVU1083
 3180 05a0 9844     		add	r8, r8, r3
 3181              	.LVL328:
1720:Src/BLDC_controller.c **** 
1721:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S20>/Debounce_Filter' */
1722:Src/BLDC_controller.c ****       Debounce_Filter(rtb_a_elecAngle_XA_g != 0, rtP->t_errQual,
 3182              		.loc 1 1722 7 is_stmt 1 discriminator 4 view .LVU1084
 3183 05a2 EA89     		ldrh	r2, [r5, #14]
 3184 05a4 298A     		ldrh	r1, [r5, #16]
 3185 05a6 18F0FF08 		ands	r8, r8, #255
 3186              	.LVL329:
 3187              		.loc 1 1722 7 is_stmt 0 discriminator 4 view .LVU1085
 3188 05aa 04F12E03 		add	r3, r4, #46
 3189 05ae 0093     		str	r3, [sp]
 3190 05b0 04F1A103 		add	r3, r4, #161
 3191 05b4 14BF     		ite	ne
 3192 05b6 0120     		movne	r0, #1
 3193 05b8 0020     		moveq	r0, #0
 3194 05ba FFF7FEFF 		bl	Debounce_Filter
 3195              	.LVL330:
1723:Src/BLDC_controller.c ****                       rtP->t_errDequal, &rtDW->Merge_p, &rtDW->Debounce_Filter_k);
1724:Src/BLDC_controller.c **** 
1725:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S20>/Debounce_Filter' */
1726:Src/BLDC_controller.c **** 
1727:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S20>/either_edge' */
1728:Src/BLDC_controller.c ****       either_edge(rtDW->Merge_p, &rtb_RelationalOperator1_mv,
 3196              		.loc 1 1728 7 is_stmt 1 discriminator 4 view .LVU1086
 3197 05be 04F12C02 		add	r2, r4, #44
 3198 05c2 0DF14F01 		add	r1, sp, #79
 3199 05c6 94F8A100 		ldrb	r0, [r4, #161]	@ zero_extendqisi2
 3200 05ca FFF7FEFF 		bl	either_edge
 3201              	.LVL331:
1729:Src/BLDC_controller.c ****                   &rtDW->either_edge_i);
1730:Src/BLDC_controller.c **** 
1731:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S20>/either_edge' */
1732:Src/BLDC_controller.c **** 
1733:Src/BLDC_controller.c ****       /* Switch: '<S20>/Switch1' incorporates:
1734:Src/BLDC_controller.c ****        *  Constant: '<S20>/CTRL_COMM2'
1735:Src/BLDC_controller.c ****        *  Constant: '<S20>/t_errDequal'
1736:Src/BLDC_controller.c ****        *  Constant: '<S20>/t_errQual'
1737:Src/BLDC_controller.c ****        *  RelationalOperator: '<S20>/Relational Operator2'
1738:Src/BLDC_controller.c ****        */
1739:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
ARM GAS  /tmp/ccVzdWer.s 			page 92


 3202              		.loc 1 1739 7 discriminator 4 view .LVU1087
 3203              		.loc 1 1739 11 is_stmt 0 discriminator 4 view .LVU1088
 3204 05ce 9DF84F30 		ldrb	r3, [sp, #79]	@ zero_extendqisi2
 3205              		.loc 1 1739 10 discriminator 4 view .LVU1089
 3206 05d2 9BB3     		cbz	r3, .L224
1740:Src/BLDC_controller.c ****         /* Outport: '<Root>/z_errCode' */
1741:Src/BLDC_controller.c ****         rtY->z_errCode = rtb_a_elecAngle_XA_g;
 3207              		.loc 1 1741 9 is_stmt 1 view .LVU1090
 3208              		.loc 1 1741 24 is_stmt 0 view .LVU1091
 3209 05d4 87F80680 		strb	r8, [r7, #6]
 3210              	.L225:
1742:Src/BLDC_controller.c ****       } else {
1743:Src/BLDC_controller.c ****         /* Outport: '<Root>/z_errCode' incorporates:
1744:Src/BLDC_controller.c ****          *  UnitDelay: '<S20>/UnitDelay'
1745:Src/BLDC_controller.c ****          */
1746:Src/BLDC_controller.c ****         rtY->z_errCode = rtDW->UnitDelay_DSTATE_e;
1747:Src/BLDC_controller.c ****       }
1748:Src/BLDC_controller.c **** 
1749:Src/BLDC_controller.c ****       /* End of Switch: '<S20>/Switch1' */
1750:Src/BLDC_controller.c **** 
1751:Src/BLDC_controller.c ****       /* Update for UnitDelay: '<S20>/UnitDelay' incorporates:
1752:Src/BLDC_controller.c ****        *  Outport: '<Root>/z_errCode'
1753:Src/BLDC_controller.c ****        */
1754:Src/BLDC_controller.c ****       rtDW->UnitDelay_DSTATE_e = rtY->z_errCode;
 3211              		.loc 1 1754 7 is_stmt 1 view .LVU1092
 3212              		.loc 1 1754 37 is_stmt 0 view .LVU1093
 3213 05d8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3214              		.loc 1 1754 32 view .LVU1094
 3215 05da 84F89D30 		strb	r3, [r4, #157]
 3216              	.L218:
1755:Src/BLDC_controller.c **** 
1756:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S4>/Diagnostics_Enabled' */
1757:Src/BLDC_controller.c ****     }
1758:Src/BLDC_controller.c **** 
1759:Src/BLDC_controller.c ****     /* End of If: '<S4>/If2' */
1760:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S1>/F02_Diagnostics' */
1761:Src/BLDC_controller.c **** 
1762:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F03_Control_Mode_Manager' */
1763:Src/BLDC_controller.c ****     /* Logic: '<S31>/Logical Operator4' incorporates:
1764:Src/BLDC_controller.c ****      *  Constant: '<S31>/constant8'
1765:Src/BLDC_controller.c ****      *  Inport: '<Root>/b_motEna'
1766:Src/BLDC_controller.c ****      *  Inport: '<Root>/z_ctrlModReq'
1767:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator7'
1768:Src/BLDC_controller.c ****      *  RelationalOperator: '<S31>/Relational Operator10'
1769:Src/BLDC_controller.c ****      */
1770:Src/BLDC_controller.c ****     rtb_RelationalOperator1_mv = (rtDW->Merge_p || (!rtU->b_motEna) ||
 3217              		.loc 1 1770 5 is_stmt 1 view .LVU1095
 3218              		.loc 1 1770 39 is_stmt 0 view .LVU1096
 3219 05de 94F8A130 		ldrb	r3, [r4, #161]	@ zero_extendqisi2
 3220              		.loc 1 1770 69 view .LVU1097
 3221 05e2 7BBB     		cbnz	r3, .L380
 3222              		.loc 1 1770 57 discriminator 2 view .LVU1098
 3223 05e4 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 3224              		.loc 1 1770 49 discriminator 2 view .LVU1099
 3225 05e6 002B     		cmp	r3, #0
 3226 05e8 38D0     		beq	.L381
1771:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
ARM GAS  /tmp/ccVzdWer.s 			page 93


 3227              		.loc 1 1771 11 discriminator 4 view .LVU1100
 3228 05ea 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
1770:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3229              		.loc 1 1770 69 discriminator 4 view .LVU1101
 3230 05ec C3BB     		cbnz	r3, .L382
1770:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3231              		.loc 1 1770 69 view .LVU1102
 3232 05ee 0123     		movs	r3, #1
 3233 05f0 29E0     		b	.L226
 3234              	.L445:
1642:Src/BLDC_controller.c ****       } else {
 3235              		.loc 1 1642 9 is_stmt 1 view .LVU1103
1642:Src/BLDC_controller.c ****       } else {
 3236              		.loc 1 1642 58 is_stmt 0 view .LVU1104
 3237 05f2 9BB2     		uxth	r3, r3
1642:Src/BLDC_controller.c ****       } else {
 3238              		.loc 1 1642 24 view .LVU1105
 3239 05f4 5B42     		rsbs	r3, r3, #0
1642:Src/BLDC_controller.c ****       } else {
 3240              		.loc 1 1642 22 view .LVU1106
 3241 05f6 A4F87830 		strh	r3, [r4, #120]	@ movhi
 3242 05fa B2E7     		b	.L198
 3243              	.L219:
1691:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
 3244              		.loc 1 1691 9 is_stmt 1 view .LVU1107
1691:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
 3245              		.loc 1 1691 17 is_stmt 0 view .LVU1108
 3246 05fc B4F98C30 		ldrsh	r3, [r4, #140]
1691:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
 3247              		.loc 1 1691 12 view .LVU1109
 3248 0600 002B     		cmp	r3, #0
 3249 0602 0CDB     		blt	.L447
 3250              	.L221:
 3251              	.LVL332:
1703:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
 3252              		.loc 1 1703 9 is_stmt 1 view .LVU1110
1703:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
 3253              		.loc 1 1703 42 is_stmt 0 view .LVU1111
 3254 0604 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
1704:Src/BLDC_controller.c ****       }
 3255              		.loc 1 1704 31 view .LVU1112
 3256 0606 72B1     		cbz	r2, .L376
1704:Src/BLDC_controller.c ****       }
 3257              		.loc 1 1704 14 discriminator 1 view .LVU1113
 3258 0608 B5F9DC20 		ldrsh	r2, [r5, #220]
1703:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
 3259              		.loc 1 1703 53 discriminator 1 view .LVU1114
 3260 060c 0799     		ldr	r1, [sp, #28]
 3261 060e 8A42     		cmp	r2, r1
 3262 0610 0DDD     		ble	.L377
1704:Src/BLDC_controller.c ****       }
 3263              		.loc 1 1704 56 discriminator 4 view .LVU1115
 3264 0612 B5F9DE20 		ldrsh	r2, [r5, #222]
1704:Src/BLDC_controller.c ****       }
 3265              		.loc 1 1704 31 discriminator 4 view .LVU1116
 3266 0616 9A42     		cmp	r2, r3
 3267 0618 0BDB     		blt	.L378
ARM GAS  /tmp/ccVzdWer.s 			page 94


1704:Src/BLDC_controller.c ****       }
 3268              		.loc 1 1704 31 view .LVU1117
 3269 061a 0023     		movs	r3, #0
 3270              	.LVL333:
1704:Src/BLDC_controller.c ****       }
 3271              		.loc 1 1704 31 view .LVU1118
 3272 061c 04E0     		b	.L222
 3273              	.L447:
1695:Src/BLDC_controller.c ****         } else {
 3274              		.loc 1 1695 11 is_stmt 1 view .LVU1119
1695:Src/BLDC_controller.c ****         } else {
 3275              		.loc 1 1695 43 is_stmt 0 view .LVU1120
 3276 061e 9BB2     		uxth	r3, r3
1695:Src/BLDC_controller.c ****         } else {
 3277              		.loc 1 1695 29 view .LVU1121
 3278 0620 5B42     		rsbs	r3, r3, #0
1695:Src/BLDC_controller.c ****         } else {
 3279              		.loc 1 1695 27 view .LVU1122
 3280 0622 1BB2     		sxth	r3, r3
 3281              	.LVL334:
1695:Src/BLDC_controller.c ****         } else {
 3282              		.loc 1 1695 27 view .LVU1123
 3283 0624 EEE7     		b	.L221
 3284              	.L376:
1704:Src/BLDC_controller.c ****       }
 3285              		.loc 1 1704 31 view .LVU1124
 3286 0626 0023     		movs	r3, #0
 3287              	.LVL335:
 3288              	.L222:
1703:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
 3289              		.loc 1 1703 36 view .LVU1125
 3290 0628 8DF84F30 		strb	r3, [sp, #79]
 3291 062c AAE7     		b	.L220
 3292              	.LVL336:
 3293              	.L377:
1704:Src/BLDC_controller.c ****       }
 3294              		.loc 1 1704 31 view .LVU1126
 3295 062e 0023     		movs	r3, #0
 3296              	.LVL337:
1704:Src/BLDC_controller.c ****       }
 3297              		.loc 1 1704 31 view .LVU1127
 3298 0630 FAE7     		b	.L222
 3299              	.LVL338:
 3300              	.L378:
1704:Src/BLDC_controller.c ****       }
 3301              		.loc 1 1704 31 view .LVU1128
 3302 0632 0123     		movs	r3, #1
 3303              	.LVL339:
1704:Src/BLDC_controller.c ****       }
 3304              		.loc 1 1704 31 view .LVU1129
 3305 0634 F8E7     		b	.L222
 3306              	.L446:
1718:Src/BLDC_controller.c ****         + (rtb_RelationalOperator1_mv << 2));
 3307              		.loc 1 1718 63 view .LVU1130
 3308 0636 4FF00208 		mov	r8, #2
 3309 063a A8E7     		b	.L223
 3310              	.L224:
ARM GAS  /tmp/ccVzdWer.s 			page 95


1746:Src/BLDC_controller.c ****       }
 3311              		.loc 1 1746 9 is_stmt 1 view .LVU1131
1746:Src/BLDC_controller.c ****       }
 3312              		.loc 1 1746 30 is_stmt 0 view .LVU1132
 3313 063c 94F89D30 		ldrb	r3, [r4, #157]	@ zero_extendqisi2
1746:Src/BLDC_controller.c ****       }
 3314              		.loc 1 1746 24 view .LVU1133
 3315 0640 BB71     		strb	r3, [r7, #6]
 3316 0642 C9E7     		b	.L225
 3317              	.L380:
1770:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3318              		.loc 1 1770 69 view .LVU1134
 3319 0644 0123     		movs	r3, #1
 3320              	.L226:
1770:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3321              		.loc 1 1770 32 discriminator 8 view .LVU1135
 3322 0646 DBB2     		uxtb	r3, r3
 3323 0648 8DF84F30 		strb	r3, [sp, #79]
1772:Src/BLDC_controller.c **** 
1773:Src/BLDC_controller.c ****     /* Logic: '<S31>/Logical Operator1' incorporates:
1774:Src/BLDC_controller.c ****      *  Constant: '<S1>/b_cruiseCtrlEna'
1775:Src/BLDC_controller.c ****      *  Constant: '<S31>/constant1'
1776:Src/BLDC_controller.c ****      *  Inport: '<Root>/z_ctrlModReq'
1777:Src/BLDC_controller.c ****      *  RelationalOperator: '<S31>/Relational Operator1'
1778:Src/BLDC_controller.c ****      */
1779:Src/BLDC_controller.c ****     rtb_LogicalOperator1_j = ((rtU->z_ctrlModReq == 2) || rtP->b_cruiseCtrlEna);
 3324              		.loc 1 1779 5 is_stmt 1 discriminator 8 view .LVU1136
 3325              		.loc 1 1779 35 is_stmt 0 discriminator 8 view .LVU1137
 3326 064c 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 3327              		.loc 1 1779 56 discriminator 8 view .LVU1138
 3328 064e 022A     		cmp	r2, #2
 3329 0650 08D0     		beq	.L383
 3330              		.loc 1 1779 62 discriminator 2 view .LVU1139
 3331 0652 95F8FC10 		ldrb	r1, [r5, #252]	@ zero_extendqisi2
 3332              		.loc 1 1779 56 discriminator 2 view .LVU1140
 3333 0656 39B3     		cbz	r1, .L384
 3334              		.loc 1 1779 56 view .LVU1141
 3335 0658 0121     		movs	r1, #1
 3336 065a 04E0     		b	.L227
 3337              	.L381:
1770:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3338              		.loc 1 1770 69 view .LVU1142
 3339 065c 0123     		movs	r3, #1
 3340 065e F2E7     		b	.L226
 3341              	.L382:
 3342 0660 0023     		movs	r3, #0
 3343 0662 F0E7     		b	.L226
 3344              	.L383:
 3345              		.loc 1 1779 56 view .LVU1143
 3346 0664 0121     		movs	r1, #1
 3347              	.L227:
 3348              		.loc 1 1779 28 discriminator 6 view .LVU1144
 3349 0666 C8B2     		uxtb	r0, r1
 3350              	.LVL340:
1780:Src/BLDC_controller.c **** 
1781:Src/BLDC_controller.c ****     /* Logic: '<S31>/Logical Operator2' incorporates:
1782:Src/BLDC_controller.c ****      *  Constant: '<S1>/b_cruiseCtrlEna'
ARM GAS  /tmp/ccVzdWer.s 			page 96


1783:Src/BLDC_controller.c ****      *  Constant: '<S31>/constant'
1784:Src/BLDC_controller.c ****      *  Inport: '<Root>/z_ctrlModReq'
1785:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator5'
1786:Src/BLDC_controller.c ****      *  RelationalOperator: '<S31>/Relational Operator4'
1787:Src/BLDC_controller.c ****      */
1788:Src/BLDC_controller.c ****     rtb_LogicalOperator2_p = ((rtU->z_ctrlModReq == 3) && (!rtP->b_cruiseCtrlEna));
 3351              		.loc 1 1788 5 is_stmt 1 discriminator 6 view .LVU1145
 3352              		.loc 1 1788 56 is_stmt 0 discriminator 6 view .LVU1146
 3353 0668 032A     		cmp	r2, #3
 3354 066a 1FD0     		beq	.L448
 3355              		.loc 1 1788 56 view .LVU1147
 3356 066c 0022     		movs	r2, #0
 3357              	.L228:
 3358              		.loc 1 1788 28 discriminator 6 view .LVU1148
 3359 066e D1B2     		uxtb	r1, r2
 3360              	.LVL341:
1789:Src/BLDC_controller.c **** 
1790:Src/BLDC_controller.c ****     /* Chart: '<S5>/F03_02_Control_Mode_Manager' incorporates:
1791:Src/BLDC_controller.c ****      *  Constant: '<S31>/constant5'
1792:Src/BLDC_controller.c ****      *  Inport: '<Root>/z_ctrlModReq'
1793:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator3'
1794:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator6'
1795:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator9'
1796:Src/BLDC_controller.c ****      *  RelationalOperator: '<S31>/Relational Operator5'
1797:Src/BLDC_controller.c ****      */
1798:Src/BLDC_controller.c ****     if (rtDW->is_active_c1_BLDC_controller == 0U) {
 3361              		.loc 1 1798 5 is_stmt 1 discriminator 6 view .LVU1149
 3362              		.loc 1 1798 13 is_stmt 0 discriminator 6 view .LVU1150
 3363 0670 94F89E20 		ldrb	r2, [r4, #158]	@ zero_extendqisi2
 3364              		.loc 1 1798 8 discriminator 6 view .LVU1151
 3365 0674 42BB     		cbnz	r2, .L229
1799:Src/BLDC_controller.c ****       rtDW->is_active_c1_BLDC_controller = 1U;
 3366              		.loc 1 1799 7 is_stmt 1 view .LVU1152
 3367              		.loc 1 1799 42 is_stmt 0 view .LVU1153
 3368 0676 0123     		movs	r3, #1
 3369 0678 84F89E30 		strb	r3, [r4, #158]
1800:Src/BLDC_controller.c ****       rtDW->is_c1_BLDC_controller = IN_OPEN;
 3370              		.loc 1 1800 7 is_stmt 1 view .LVU1154
 3371              		.loc 1 1800 35 is_stmt 0 view .LVU1155
 3372 067c 0223     		movs	r3, #2
 3373 067e 84F89F30 		strb	r3, [r4, #159]
1801:Src/BLDC_controller.c ****       rtDW->z_ctrlMod = OPEN_MODE;
 3374              		.loc 1 1801 7 is_stmt 1 view .LVU1156
 3375              		.loc 1 1801 23 is_stmt 0 view .LVU1157
 3376 0682 0023     		movs	r3, #0
 3377 0684 84F89930 		strb	r3, [r4, #153]
 3378              	.L230:
1802:Src/BLDC_controller.c ****     } else if (rtDW->is_c1_BLDC_controller == IN_ACTIVE) {
1803:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
1804:Src/BLDC_controller.c ****         rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
1805:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_OPEN;
1806:Src/BLDC_controller.c ****         rtDW->z_ctrlMod = OPEN_MODE;
1807:Src/BLDC_controller.c ****       } else {
1808:Src/BLDC_controller.c ****         switch (rtDW->is_ACTIVE) {
1809:Src/BLDC_controller.c ****          case IN_SPEED_MODE:
1810:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = SPD_MODE;
1811:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator1_j) {
ARM GAS  /tmp/ccVzdWer.s 			page 97


1812:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
1813:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
1814:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
1815:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
1816:Src/BLDC_controller.c ****             } else {
1817:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_VOLTAGE_MODE;
1818:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
1819:Src/BLDC_controller.c ****             }
1820:Src/BLDC_controller.c ****           }
1821:Src/BLDC_controller.c ****           break;
1822:Src/BLDC_controller.c **** 
1823:Src/BLDC_controller.c ****          case IN_TORQUE_MODE:
1824:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = TRQ_MODE;
1825:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator2_p) {
1826:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
1827:Src/BLDC_controller.c ****             if (rtb_LogicalOperator1_j) {
1828:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
1829:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
1830:Src/BLDC_controller.c ****             } else {
1831:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_VOLTAGE_MODE;
1832:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
1833:Src/BLDC_controller.c ****             }
1834:Src/BLDC_controller.c ****           }
1835:Src/BLDC_controller.c ****           break;
1836:Src/BLDC_controller.c **** 
1837:Src/BLDC_controller.c ****          default:
1838:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = VLT_MODE;
1839:Src/BLDC_controller.c ****           if (rtb_LogicalOperator2_p || rtb_LogicalOperator1_j) {
1840:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
1841:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
1842:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
1843:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
1844:Src/BLDC_controller.c ****             } else if (rtb_LogicalOperator1_j) {
1845:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
1846:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
1847:Src/BLDC_controller.c ****             } else {
1848:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_VOLTAGE_MODE;
1849:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
1850:Src/BLDC_controller.c ****             }
1851:Src/BLDC_controller.c ****           }
1852:Src/BLDC_controller.c ****           break;
1853:Src/BLDC_controller.c ****         }
1854:Src/BLDC_controller.c ****       }
1855:Src/BLDC_controller.c ****     } else {
1856:Src/BLDC_controller.c ****       rtDW->z_ctrlMod = OPEN_MODE;
1857:Src/BLDC_controller.c ****       if ((!rtb_RelationalOperator1_mv) && ((rtU->z_ctrlModReq == 1) ||
1858:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
1859:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_ACTIVE;
1860:Src/BLDC_controller.c ****         if (rtb_LogicalOperator2_p) {
1861:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_TORQUE_MODE;
1862:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = TRQ_MODE;
1863:Src/BLDC_controller.c ****         } else if (rtb_LogicalOperator1_j) {
1864:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_SPEED_MODE;
1865:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = SPD_MODE;
1866:Src/BLDC_controller.c ****         } else {
1867:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_VOLTAGE_MODE;
1868:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = VLT_MODE;
ARM GAS  /tmp/ccVzdWer.s 			page 98


1869:Src/BLDC_controller.c ****         }
1870:Src/BLDC_controller.c ****       }
1871:Src/BLDC_controller.c ****     }
1872:Src/BLDC_controller.c **** 
1873:Src/BLDC_controller.c ****     /* End of Chart: '<S5>/F03_02_Control_Mode_Manager' */
1874:Src/BLDC_controller.c **** 
1875:Src/BLDC_controller.c ****     /* If: '<S33>/If1' incorporates:
1876:Src/BLDC_controller.c ****      *  Constant: '<S1>/z_ctrlTypSel'
1877:Src/BLDC_controller.c ****      *  Inport: '<S34>/r_inpTgt'
1878:Src/BLDC_controller.c ****      *  Saturate: '<S33>/Saturation'
1879:Src/BLDC_controller.c ****      */
1880:Src/BLDC_controller.c ****     if (rtP->z_ctrlTypSel == 2) {
 3379              		.loc 1 1880 5 is_stmt 1 view .LVU1158
 3380              		.loc 1 1880 12 is_stmt 0 view .LVU1159
 3381 0688 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
 3382              		.loc 1 1880 8 view .LVU1160
 3383 068c 022B     		cmp	r3, #2
 3384 068e 00F09680 		beq	.L449
1881:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/FOC_Control_Type' incorporates:
1882:Src/BLDC_controller.c ****        *  ActionPort: '<S36>/Action Port'
1883:Src/BLDC_controller.c ****        */
1884:Src/BLDC_controller.c ****       /* SignalConversion: '<S36>/TmpSignal ConversionAtSelectorInport1' incorporates:
1885:Src/BLDC_controller.c ****        *  Constant: '<S36>/Vd_max'
1886:Src/BLDC_controller.c ****        *  Constant: '<S36>/constant1'
1887:Src/BLDC_controller.c ****        *  Constant: '<S36>/i_max'
1888:Src/BLDC_controller.c ****        *  Constant: '<S36>/n_max'
1889:Src/BLDC_controller.c ****        */
1890:Src/BLDC_controller.c ****       tmp[0] = 0;
1891:Src/BLDC_controller.c ****       tmp[1] = rtP->Vd_max;
1892:Src/BLDC_controller.c ****       tmp[2] = rtP->n_max;
1893:Src/BLDC_controller.c ****       tmp[3] = rtP->i_max;
1894:Src/BLDC_controller.c **** 
1895:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/FOC_Control_Type' */
1896:Src/BLDC_controller.c **** 
1897:Src/BLDC_controller.c ****       /* Saturate: '<S33>/Saturation' */
1898:Src/BLDC_controller.c ****       if (DataTypeConversion2 > 16000) {
1899:Src/BLDC_controller.c ****         DataTypeConversion2 = 16000;
1900:Src/BLDC_controller.c ****       } else {
1901:Src/BLDC_controller.c ****         if (DataTypeConversion2 < -16000) {
1902:Src/BLDC_controller.c ****           DataTypeConversion2 = -16000;
1903:Src/BLDC_controller.c ****         }
1904:Src/BLDC_controller.c ****       }
1905:Src/BLDC_controller.c **** 
1906:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/FOC_Control_Type' incorporates:
1907:Src/BLDC_controller.c ****        *  ActionPort: '<S36>/Action Port'
1908:Src/BLDC_controller.c ****        */
1909:Src/BLDC_controller.c ****       /* Product: '<S36>/Divide1' incorporates:
1910:Src/BLDC_controller.c ****        *  Inport: '<Root>/z_ctrlModReq'
1911:Src/BLDC_controller.c ****        *  Product: '<S36>/Divide4'
1912:Src/BLDC_controller.c ****        *  Selector: '<S36>/Selector'
1913:Src/BLDC_controller.c ****        */
1914:Src/BLDC_controller.c ****       rtb_Saturation = (int16_T)(((uint16_T)((tmp[rtU->z_ctrlModReq] << 5) / 125)
1915:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
1916:Src/BLDC_controller.c **** 
1917:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/FOC_Control_Type' */
1918:Src/BLDC_controller.c ****     } else if (DataTypeConversion2 > 16000) {
 3385              		.loc 1 1918 12 is_stmt 1 view .LVU1161
ARM GAS  /tmp/ccVzdWer.s 			page 99


 3386              		.loc 1 1918 15 is_stmt 0 view .LVU1162
 3387 0692 BBF57A5F 		cmp	fp, #16000
 3388 0696 00F30981 		bgt	.L389
1919:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Default_Control_Type' incorporates:
1920:Src/BLDC_controller.c ****        *  ActionPort: '<S34>/Action Port'
1921:Src/BLDC_controller.c ****        */
1922:Src/BLDC_controller.c ****       /* Saturate: '<S33>/Saturation' incorporates:
1923:Src/BLDC_controller.c ****        *  Inport: '<S34>/r_inpTgt'
1924:Src/BLDC_controller.c ****        */
1925:Src/BLDC_controller.c ****       rtb_Saturation = 16000;
1926:Src/BLDC_controller.c **** 
1927:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Default_Control_Type' */
1928:Src/BLDC_controller.c ****     } else if (DataTypeConversion2 < -16000) {
 3389              		.loc 1 1928 12 is_stmt 1 view .LVU1163
 3390              		.loc 1 1928 15 is_stmt 0 view .LVU1164
 3391 069a 1BF57A5F 		cmn	fp, #16000
 3392 069e 80F2BA80 		bge	.L246
1929:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Default_Control_Type' incorporates:
1930:Src/BLDC_controller.c ****        *  ActionPort: '<S34>/Action Port'
1931:Src/BLDC_controller.c ****        */
1932:Src/BLDC_controller.c ****       /* Saturate: '<S33>/Saturation' incorporates:
1933:Src/BLDC_controller.c ****        *  Inport: '<S34>/r_inpTgt'
1934:Src/BLDC_controller.c ****        */
1935:Src/BLDC_controller.c ****       rtb_Saturation = -16000;
 3393              		.loc 1 1935 22 view .LVU1165
 3394 06a2 DFF820B0 		ldr	fp, .L469+8
 3395              	.LVL342:
 3396              		.loc 1 1935 22 view .LVU1166
 3397 06a6 B6E0     		b	.L246
 3398              	.LVL343:
 3399              	.L384:
1779:Src/BLDC_controller.c **** 
 3400              		.loc 1 1779 56 view .LVU1167
 3401 06a8 0021     		movs	r1, #0
 3402 06aa DCE7     		b	.L227
 3403              	.LVL344:
 3404              	.L448:
1788:Src/BLDC_controller.c **** 
 3405              		.loc 1 1788 64 discriminator 1 view .LVU1168
 3406 06ac 95F8FC20 		ldrb	r2, [r5, #252]	@ zero_extendqisi2
1788:Src/BLDC_controller.c **** 
 3407              		.loc 1 1788 56 discriminator 1 view .LVU1169
 3408 06b0 0AB1     		cbz	r2, .L386
1788:Src/BLDC_controller.c **** 
 3409              		.loc 1 1788 56 view .LVU1170
 3410 06b2 0022     		movs	r2, #0
 3411 06b4 DBE7     		b	.L228
 3412              	.L386:
 3413 06b6 0122     		movs	r2, #1
 3414 06b8 D9E7     		b	.L228
 3415              	.L470:
 3416 06ba 00BF     		.align	2
 3417              	.L469:
 3418 06bc 00000000 		.word	rtConstP
 3419 06c0 0080FFFF 		.word	-32768
 3420 06c4 80C1FFFF 		.word	-16000
 3421              	.LVL345:
ARM GAS  /tmp/ccVzdWer.s 			page 100


 3422              	.L229:
1802:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
 3423              		.loc 1 1802 12 is_stmt 1 view .LVU1171
1802:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
 3424              		.loc 1 1802 20 is_stmt 0 view .LVU1172
 3425 06c8 94F89F20 		ldrb	r2, [r4, #159]	@ zero_extendqisi2
1802:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
 3426              		.loc 1 1802 15 view .LVU1173
 3427 06cc 012A     		cmp	r2, #1
 3428 06ce 16D0     		beq	.L450
1856:Src/BLDC_controller.c ****       if ((!rtb_RelationalOperator1_mv) && ((rtU->z_ctrlModReq == 1) ||
 3429              		.loc 1 1856 7 is_stmt 1 view .LVU1174
1856:Src/BLDC_controller.c ****       if ((!rtb_RelationalOperator1_mv) && ((rtU->z_ctrlModReq == 1) ||
 3430              		.loc 1 1856 23 is_stmt 0 view .LVU1175
 3431 06d0 0022     		movs	r2, #0
 3432 06d2 84F89920 		strb	r2, [r4, #153]
1857:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3433              		.loc 1 1857 7 is_stmt 1 view .LVU1176
1857:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3434              		.loc 1 1857 10 is_stmt 0 view .LVU1177
 3435 06d6 002B     		cmp	r3, #0
 3436 06d8 D6D1     		bne	.L230
1857:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3437              		.loc 1 1857 49 discriminator 1 view .LVU1178
 3438 06da 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
1857:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3439              		.loc 1 1857 41 discriminator 1 view .LVU1179
 3440 06dc 012B     		cmp	r3, #1
 3441 06de 02D0     		beq	.L241
1857:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3442              		.loc 1 1857 70 discriminator 2 view .LVU1180
 3443 06e0 08B9     		cbnz	r0, .L241
1858:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_ACTIVE;
 3444              		.loc 1 1858 35 view .LVU1181
 3445 06e2 0029     		cmp	r1, #0
 3446 06e4 D0D0     		beq	.L230
 3447              	.L241:
1859:Src/BLDC_controller.c ****         if (rtb_LogicalOperator2_p) {
 3448              		.loc 1 1859 9 is_stmt 1 view .LVU1182
1859:Src/BLDC_controller.c ****         if (rtb_LogicalOperator2_p) {
 3449              		.loc 1 1859 37 is_stmt 0 view .LVU1183
 3450 06e6 0123     		movs	r3, #1
 3451 06e8 84F89F30 		strb	r3, [r4, #159]
1860:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3452              		.loc 1 1860 9 is_stmt 1 view .LVU1184
1860:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3453              		.loc 1 1860 12 is_stmt 0 view .LVU1185
 3454 06ec 0029     		cmp	r1, #0
 3455 06ee 57D0     		beq	.L242
1861:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = TRQ_MODE;
 3456              		.loc 1 1861 11 is_stmt 1 view .LVU1186
1861:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = TRQ_MODE;
 3457              		.loc 1 1861 27 is_stmt 0 view .LVU1187
 3458 06f0 0223     		movs	r3, #2
 3459 06f2 84F8A030 		strb	r3, [r4, #160]
1862:Src/BLDC_controller.c ****         } else if (rtb_LogicalOperator1_j) {
 3460              		.loc 1 1862 11 is_stmt 1 view .LVU1188
ARM GAS  /tmp/ccVzdWer.s 			page 101


1862:Src/BLDC_controller.c ****         } else if (rtb_LogicalOperator1_j) {
 3461              		.loc 1 1862 27 is_stmt 0 view .LVU1189
 3462 06f6 0323     		movs	r3, #3
 3463 06f8 84F89930 		strb	r3, [r4, #153]
 3464 06fc C4E7     		b	.L230
 3465              	.L450:
1803:Src/BLDC_controller.c ****         rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3466              		.loc 1 1803 7 is_stmt 1 view .LVU1190
1803:Src/BLDC_controller.c ****         rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3467              		.loc 1 1803 10 is_stmt 0 view .LVU1191
 3468 06fe 43B1     		cbz	r3, .L232
1804:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_OPEN;
 3469              		.loc 1 1804 9 is_stmt 1 view .LVU1192
1804:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_OPEN;
 3470              		.loc 1 1804 25 is_stmt 0 view .LVU1193
 3471 0700 0023     		movs	r3, #0
 3472 0702 84F8A030 		strb	r3, [r4, #160]
1805:Src/BLDC_controller.c ****         rtDW->z_ctrlMod = OPEN_MODE;
 3473              		.loc 1 1805 9 is_stmt 1 view .LVU1194
1805:Src/BLDC_controller.c ****         rtDW->z_ctrlMod = OPEN_MODE;
 3474              		.loc 1 1805 37 is_stmt 0 view .LVU1195
 3475 0706 0222     		movs	r2, #2
 3476 0708 84F89F20 		strb	r2, [r4, #159]
1806:Src/BLDC_controller.c ****       } else {
 3477              		.loc 1 1806 9 is_stmt 1 view .LVU1196
1806:Src/BLDC_controller.c ****       } else {
 3478              		.loc 1 1806 25 is_stmt 0 view .LVU1197
 3479 070c 84F89930 		strb	r3, [r4, #153]
 3480 0710 BAE7     		b	.L230
 3481              	.L232:
1808:Src/BLDC_controller.c ****          case IN_SPEED_MODE:
 3482              		.loc 1 1808 9 is_stmt 1 view .LVU1198
1808:Src/BLDC_controller.c ****          case IN_SPEED_MODE:
 3483              		.loc 1 1808 21 is_stmt 0 view .LVU1199
 3484 0712 94F8A030 		ldrb	r3, [r4, #160]	@ zero_extendqisi2
1808:Src/BLDC_controller.c ****          case IN_SPEED_MODE:
 3485              		.loc 1 1808 9 view .LVU1200
 3486 0716 012B     		cmp	r3, #1
 3487 0718 0FD0     		beq	.L233
 3488 071a 022B     		cmp	r3, #2
 3489 071c 20D0     		beq	.L234
1838:Src/BLDC_controller.c ****           if (rtb_LogicalOperator2_p || rtb_LogicalOperator1_j) {
 3490              		.loc 1 1838 11 is_stmt 1 view .LVU1201
1838:Src/BLDC_controller.c ****           if (rtb_LogicalOperator2_p || rtb_LogicalOperator1_j) {
 3491              		.loc 1 1838 27 is_stmt 0 view .LVU1202
 3492 071e 0123     		movs	r3, #1
 3493 0720 84F89930 		strb	r3, [r4, #153]
1839:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3494              		.loc 1 1839 11 is_stmt 1 view .LVU1203
1839:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3495              		.loc 1 1839 14 is_stmt 0 view .LVU1204
 3496 0724 09B9     		cbnz	r1, .L238
1839:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3497              		.loc 1 1839 38 discriminator 1 view .LVU1205
 3498 0726 0028     		cmp	r0, #0
 3499 0728 AED0     		beq	.L230
 3500              	.L238:
ARM GAS  /tmp/ccVzdWer.s 			page 102


1840:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
 3501              		.loc 1 1840 13 is_stmt 1 view .LVU1206
1841:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3502              		.loc 1 1841 13 view .LVU1207
1841:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3503              		.loc 1 1841 16 is_stmt 0 view .LVU1208
 3504 072a 69B3     		cbz	r1, .L239
1842:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
 3505              		.loc 1 1842 15 is_stmt 1 view .LVU1209
1842:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
 3506              		.loc 1 1842 31 is_stmt 0 view .LVU1210
 3507 072c 0223     		movs	r3, #2
 3508 072e 84F8A030 		strb	r3, [r4, #160]
1843:Src/BLDC_controller.c ****             } else if (rtb_LogicalOperator1_j) {
 3509              		.loc 1 1843 15 is_stmt 1 view .LVU1211
1843:Src/BLDC_controller.c ****             } else if (rtb_LogicalOperator1_j) {
 3510              		.loc 1 1843 31 is_stmt 0 view .LVU1212
 3511 0732 0323     		movs	r3, #3
 3512 0734 84F89930 		strb	r3, [r4, #153]
 3513 0738 A6E7     		b	.L230
 3514              	.L233:
1810:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator1_j) {
 3515              		.loc 1 1810 11 is_stmt 1 view .LVU1213
1810:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator1_j) {
 3516              		.loc 1 1810 27 is_stmt 0 view .LVU1214
 3517 073a 0223     		movs	r3, #2
 3518 073c 84F89930 		strb	r3, [r4, #153]
1811:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3519              		.loc 1 1811 11 is_stmt 1 view .LVU1215
1811:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3520              		.loc 1 1811 14 is_stmt 0 view .LVU1216
 3521 0740 0028     		cmp	r0, #0
 3522 0742 A1D1     		bne	.L230
1812:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
 3523              		.loc 1 1812 13 is_stmt 1 view .LVU1217
1813:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3524              		.loc 1 1813 13 view .LVU1218
1813:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3525              		.loc 1 1813 16 is_stmt 0 view .LVU1219
 3526 0744 29B1     		cbz	r1, .L236
1814:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
 3527              		.loc 1 1814 15 is_stmt 1 view .LVU1220
1814:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
 3528              		.loc 1 1814 31 is_stmt 0 view .LVU1221
 3529 0746 84F8A030 		strb	r3, [r4, #160]
1815:Src/BLDC_controller.c ****             } else {
 3530              		.loc 1 1815 15 is_stmt 1 view .LVU1222
1815:Src/BLDC_controller.c ****             } else {
 3531              		.loc 1 1815 31 is_stmt 0 view .LVU1223
 3532 074a 0323     		movs	r3, #3
 3533 074c 84F89930 		strb	r3, [r4, #153]
 3534 0750 9AE7     		b	.L230
 3535              	.L236:
1817:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3536              		.loc 1 1817 15 is_stmt 1 view .LVU1224
1817:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3537              		.loc 1 1817 31 is_stmt 0 view .LVU1225
ARM GAS  /tmp/ccVzdWer.s 			page 103


 3538 0752 0323     		movs	r3, #3
 3539 0754 84F8A030 		strb	r3, [r4, #160]
1818:Src/BLDC_controller.c ****             }
 3540              		.loc 1 1818 15 is_stmt 1 view .LVU1226
1818:Src/BLDC_controller.c ****             }
 3541              		.loc 1 1818 31 is_stmt 0 view .LVU1227
 3542 0758 0123     		movs	r3, #1
 3543 075a 84F89930 		strb	r3, [r4, #153]
 3544 075e 93E7     		b	.L230
 3545              	.L234:
1824:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator2_p) {
 3546              		.loc 1 1824 11 is_stmt 1 view .LVU1228
1824:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator2_p) {
 3547              		.loc 1 1824 27 is_stmt 0 view .LVU1229
 3548 0760 0323     		movs	r3, #3
 3549 0762 84F89930 		strb	r3, [r4, #153]
1825:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3550              		.loc 1 1825 11 is_stmt 1 view .LVU1230
1825:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3551              		.loc 1 1825 14 is_stmt 0 view .LVU1231
 3552 0766 0029     		cmp	r1, #0
 3553 0768 8ED1     		bne	.L230
1826:Src/BLDC_controller.c ****             if (rtb_LogicalOperator1_j) {
 3554              		.loc 1 1826 13 is_stmt 1 view .LVU1232
1827:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
 3555              		.loc 1 1827 13 view .LVU1233
1827:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
 3556              		.loc 1 1827 16 is_stmt 0 view .LVU1234
 3557 076a 30B1     		cbz	r0, .L237
1828:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
 3558              		.loc 1 1828 15 is_stmt 1 view .LVU1235
1828:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
 3559              		.loc 1 1828 31 is_stmt 0 view .LVU1236
 3560 076c 0123     		movs	r3, #1
 3561 076e 84F8A030 		strb	r3, [r4, #160]
1829:Src/BLDC_controller.c ****             } else {
 3562              		.loc 1 1829 15 is_stmt 1 view .LVU1237
1829:Src/BLDC_controller.c ****             } else {
 3563              		.loc 1 1829 31 is_stmt 0 view .LVU1238
 3564 0772 0223     		movs	r3, #2
 3565 0774 84F89930 		strb	r3, [r4, #153]
 3566 0778 86E7     		b	.L230
 3567              	.L237:
1831:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3568              		.loc 1 1831 15 is_stmt 1 view .LVU1239
1831:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3569              		.loc 1 1831 31 is_stmt 0 view .LVU1240
 3570 077a 0323     		movs	r3, #3
 3571 077c 84F8A030 		strb	r3, [r4, #160]
1832:Src/BLDC_controller.c ****             }
 3572              		.loc 1 1832 15 is_stmt 1 view .LVU1241
1832:Src/BLDC_controller.c ****             }
 3573              		.loc 1 1832 31 is_stmt 0 view .LVU1242
 3574 0780 0123     		movs	r3, #1
 3575 0782 84F89930 		strb	r3, [r4, #153]
 3576 0786 7FE7     		b	.L230
 3577              	.L239:
ARM GAS  /tmp/ccVzdWer.s 			page 104


1844:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
 3578              		.loc 1 1844 20 is_stmt 1 view .LVU1243
1844:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
 3579              		.loc 1 1844 23 is_stmt 0 view .LVU1244
 3580 0788 30B1     		cbz	r0, .L240
1845:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
 3581              		.loc 1 1845 15 is_stmt 1 view .LVU1245
1845:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
 3582              		.loc 1 1845 31 is_stmt 0 view .LVU1246
 3583 078a 0123     		movs	r3, #1
 3584 078c 84F8A030 		strb	r3, [r4, #160]
1846:Src/BLDC_controller.c ****             } else {
 3585              		.loc 1 1846 15 is_stmt 1 view .LVU1247
1846:Src/BLDC_controller.c ****             } else {
 3586              		.loc 1 1846 31 is_stmt 0 view .LVU1248
 3587 0790 0223     		movs	r3, #2
 3588 0792 84F89930 		strb	r3, [r4, #153]
 3589 0796 77E7     		b	.L230
 3590              	.L240:
1848:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3591              		.loc 1 1848 15 is_stmt 1 view .LVU1249
1848:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3592              		.loc 1 1848 31 is_stmt 0 view .LVU1250
 3593 0798 0323     		movs	r3, #3
 3594 079a 84F8A030 		strb	r3, [r4, #160]
1849:Src/BLDC_controller.c ****             }
 3595              		.loc 1 1849 15 is_stmt 1 view .LVU1251
 3596 079e 73E7     		b	.L230
 3597              	.L242:
1863:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_SPEED_MODE;
 3598              		.loc 1 1863 16 view .LVU1252
1863:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_SPEED_MODE;
 3599              		.loc 1 1863 19 is_stmt 0 view .LVU1253
 3600 07a0 30B1     		cbz	r0, .L243
1864:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = SPD_MODE;
 3601              		.loc 1 1864 11 is_stmt 1 view .LVU1254
1864:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = SPD_MODE;
 3602              		.loc 1 1864 27 is_stmt 0 view .LVU1255
 3603 07a2 0123     		movs	r3, #1
 3604 07a4 84F8A030 		strb	r3, [r4, #160]
1865:Src/BLDC_controller.c ****         } else {
 3605              		.loc 1 1865 11 is_stmt 1 view .LVU1256
1865:Src/BLDC_controller.c ****         } else {
 3606              		.loc 1 1865 27 is_stmt 0 view .LVU1257
 3607 07a8 0223     		movs	r3, #2
 3608 07aa 84F89930 		strb	r3, [r4, #153]
 3609 07ae 6BE7     		b	.L230
 3610              	.L243:
1867:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = VLT_MODE;
 3611              		.loc 1 1867 11 is_stmt 1 view .LVU1258
1867:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = VLT_MODE;
 3612              		.loc 1 1867 27 is_stmt 0 view .LVU1259
 3613 07b0 0323     		movs	r3, #3
 3614 07b2 84F8A030 		strb	r3, [r4, #160]
1868:Src/BLDC_controller.c ****         }
 3615              		.loc 1 1868 11 is_stmt 1 view .LVU1260
1868:Src/BLDC_controller.c ****         }
ARM GAS  /tmp/ccVzdWer.s 			page 105


 3616              		.loc 1 1868 27 is_stmt 0 view .LVU1261
 3617 07b6 0123     		movs	r3, #1
 3618 07b8 84F89930 		strb	r3, [r4, #153]
 3619 07bc 64E7     		b	.L230
 3620              	.L449:
1890:Src/BLDC_controller.c ****       tmp[1] = rtP->Vd_max;
 3621              		.loc 1 1890 7 is_stmt 1 view .LVU1262
1890:Src/BLDC_controller.c ****       tmp[1] = rtP->Vd_max;
 3622              		.loc 1 1890 14 is_stmt 0 view .LVU1263
 3623 07be 0023     		movs	r3, #0
 3624 07c0 ADF84030 		strh	r3, [sp, #64]	@ movhi
1891:Src/BLDC_controller.c ****       tmp[2] = rtP->n_max;
 3625              		.loc 1 1891 7 is_stmt 1 view .LVU1264
1891:Src/BLDC_controller.c ****       tmp[2] = rtP->n_max;
 3626              		.loc 1 1891 19 is_stmt 0 view .LVU1265
 3627 07c4 B5F91230 		ldrsh	r3, [r5, #18]
1891:Src/BLDC_controller.c ****       tmp[2] = rtP->n_max;
 3628              		.loc 1 1891 14 view .LVU1266
 3629 07c8 ADF84230 		strh	r3, [sp, #66]	@ movhi
1892:Src/BLDC_controller.c ****       tmp[3] = rtP->i_max;
 3630              		.loc 1 1892 7 is_stmt 1 view .LVU1267
1892:Src/BLDC_controller.c ****       tmp[3] = rtP->i_max;
 3631              		.loc 1 1892 19 is_stmt 0 view .LVU1268
 3632 07cc B5F9DA30 		ldrsh	r3, [r5, #218]
1892:Src/BLDC_controller.c ****       tmp[3] = rtP->i_max;
 3633              		.loc 1 1892 14 view .LVU1269
 3634 07d0 ADF84430 		strh	r3, [sp, #68]	@ movhi
1893:Src/BLDC_controller.c **** 
 3635              		.loc 1 1893 7 is_stmt 1 view .LVU1270
1893:Src/BLDC_controller.c **** 
 3636              		.loc 1 1893 19 is_stmt 0 view .LVU1271
 3637 07d4 B5F9CE30 		ldrsh	r3, [r5, #206]
1893:Src/BLDC_controller.c **** 
 3638              		.loc 1 1893 14 view .LVU1272
 3639 07d8 ADF84630 		strh	r3, [sp, #70]	@ movhi
1898:Src/BLDC_controller.c ****         DataTypeConversion2 = 16000;
 3640              		.loc 1 1898 7 is_stmt 1 view .LVU1273
1898:Src/BLDC_controller.c ****         DataTypeConversion2 = 16000;
 3641              		.loc 1 1898 10 is_stmt 0 view .LVU1274
 3642 07dc BBF57A5F 		cmp	fp, #16000
 3643 07e0 05DC     		bgt	.L387
1901:Src/BLDC_controller.c ****           DataTypeConversion2 = -16000;
 3644              		.loc 1 1901 9 is_stmt 1 view .LVU1275
1901:Src/BLDC_controller.c ****           DataTypeConversion2 = -16000;
 3645              		.loc 1 1901 12 is_stmt 0 view .LVU1276
 3646 07e2 1BF57A5F 		cmn	fp, #16000
 3647 07e6 04DA     		bge	.L245
1902:Src/BLDC_controller.c ****         }
 3648              		.loc 1 1902 31 view .LVU1277
 3649 07e8 DFF81CB3 		ldr	fp, .L471+12
 3650              	.LVL346:
1902:Src/BLDC_controller.c ****         }
 3651              		.loc 1 1902 31 view .LVU1278
 3652 07ec 01E0     		b	.L245
 3653              	.LVL347:
 3654              	.L387:
1899:Src/BLDC_controller.c ****       } else {
ARM GAS  /tmp/ccVzdWer.s 			page 106


 3655              		.loc 1 1899 29 view .LVU1279
 3656 07ee 4FF47A5B 		mov	fp, #16000
 3657              	.LVL348:
 3658              	.L245:
1914:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3659              		.loc 1 1914 7 is_stmt 1 view .LVU1280
1914:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3660              		.loc 1 1914 54 is_stmt 0 view .LVU1281
 3661 07f2 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
1914:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3662              		.loc 1 1914 50 view .LVU1282
 3663 07f4 14AA     		add	r2, sp, #80
 3664 07f6 02EB4303 		add	r3, r2, r3, lsl #1
 3665 07fa 33F9103C 		ldrsh	r3, [r3, #-16]
1914:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3666              		.loc 1 1914 70 view .LVU1283
 3667 07fe 5B01     		lsls	r3, r3, #5
1914:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3668              		.loc 1 1914 76 view .LVU1284
 3669 0800 BE4A     		ldr	r2, .L471
 3670 0802 82FB0312 		smull	r1, r2, r2, r3
 3671              	.LVL349:
1914:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3672              		.loc 1 1914 76 view .LVU1285
 3673 0806 DB17     		asrs	r3, r3, #31
 3674 0808 C3EBE203 		rsb	r3, r3, r2, asr #3
1915:Src/BLDC_controller.c **** 
 3675              		.loc 1 1915 9 view .LVU1286
 3676 080c 9BB2     		uxth	r3, r3
 3677 080e 0BFB03FB 		mul	fp, fp, r3
 3678              	.LVL350:
1914:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3679              		.loc 1 1914 22 view .LVU1287
 3680 0812 4BF30F3B 		sbfx	fp, fp, #12, #16
 3681              	.LVL351:
 3682              	.L246:
1936:Src/BLDC_controller.c **** 
1937:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Default_Control_Type' */
1938:Src/BLDC_controller.c ****     } else {
1939:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Default_Control_Type' incorporates:
1940:Src/BLDC_controller.c ****        *  ActionPort: '<S34>/Action Port'
1941:Src/BLDC_controller.c ****        */
1942:Src/BLDC_controller.c ****       rtb_Saturation = DataTypeConversion2;
1943:Src/BLDC_controller.c **** 
1944:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Default_Control_Type' */
1945:Src/BLDC_controller.c ****     }
1946:Src/BLDC_controller.c **** 
1947:Src/BLDC_controller.c ****     /* End of If: '<S33>/If1' */
1948:Src/BLDC_controller.c **** 
1949:Src/BLDC_controller.c ****     /* If: '<S33>/If2' incorporates:
1950:Src/BLDC_controller.c ****      *  Inport: '<S35>/r_inpTgtScaRaw'
1951:Src/BLDC_controller.c ****      */
1952:Src/BLDC_controller.c ****     rtb_Sum2_h = rtDW->If2_ActiveSubsystem_f;
 3683              		.loc 1 1952 5 is_stmt 1 view .LVU1288
 3684              		.loc 1 1952 16 is_stmt 0 view .LVU1289
 3685 0816 94F99710 		ldrsb	r1, [r4, #151]
 3686              	.LVL352:
ARM GAS  /tmp/ccVzdWer.s 			page 107


1953:Src/BLDC_controller.c ****     UnitDelay3 = (int8_T)!(rtDW->z_ctrlMod == 0);
 3687              		.loc 1 1953 5 is_stmt 1 view .LVU1290
 3688              		.loc 1 1953 32 is_stmt 0 view .LVU1291
 3689 081a 94F89930 		ldrb	r3, [r4, #153]	@ zero_extendqisi2
 3690              		.loc 1 1953 18 view .LVU1292
 3691 081e 003B     		subs	r3, r3, #0
 3692 0820 18BF     		it	ne
 3693 0822 0123     		movne	r3, #1
 3694              		.loc 1 1953 16 view .LVU1293
 3695 0824 5AB2     		sxtb	r2, r3
 3696              	.LVL353:
1954:Src/BLDC_controller.c ****     rtDW->If2_ActiveSubsystem_f = UnitDelay3;
 3697              		.loc 1 1954 5 is_stmt 1 view .LVU1294
 3698              		.loc 1 1954 33 is_stmt 0 view .LVU1295
 3699 0826 84F89720 		strb	r2, [r4, #151]
1955:Src/BLDC_controller.c ****     switch (UnitDelay3) {
 3700              		.loc 1 1955 5 is_stmt 1 view .LVU1296
 3701 082a 002B     		cmp	r3, #0
 3702 082c 41D0     		beq	.L247
 3703 082e 002B     		cmp	r3, #0
 3704 0830 40F08480 		bne	.L248
 3705              	.LVL354:
 3706              	.L249:
1956:Src/BLDC_controller.c ****      case 0:
1957:Src/BLDC_controller.c ****       if (UnitDelay3 != rtb_Sum2_h) {
1958:Src/BLDC_controller.c ****         /* SystemReset for IfAction SubSystem: '<S33>/Open_Mode' incorporates:
1959:Src/BLDC_controller.c ****          *  ActionPort: '<S37>/Action Port'
1960:Src/BLDC_controller.c ****          */
1961:Src/BLDC_controller.c ****         /* SystemReset for Atomic SubSystem: '<S37>/rising_edge_init' */
1962:Src/BLDC_controller.c ****         /* SystemReset for If: '<S33>/If2' incorporates:
1963:Src/BLDC_controller.c ****          *  UnitDelay: '<S39>/UnitDelay'
1964:Src/BLDC_controller.c ****          *  UnitDelay: '<S40>/UnitDelay'
1965:Src/BLDC_controller.c ****          */
1966:Src/BLDC_controller.c ****         rtDW->UnitDelay_DSTATE_b = true;
1967:Src/BLDC_controller.c **** 
1968:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S37>/rising_edge_init' */
1969:Src/BLDC_controller.c **** 
1970:Src/BLDC_controller.c ****         /* SystemReset for Atomic SubSystem: '<S37>/Rate_Limiter' */
1971:Src/BLDC_controller.c ****         rtDW->UnitDelay_DSTATE = 0;
1972:Src/BLDC_controller.c **** 
1973:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S37>/Rate_Limiter' */
1974:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S33>/Open_Mode' */
1975:Src/BLDC_controller.c ****       }
1976:Src/BLDC_controller.c **** 
1977:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Open_Mode' incorporates:
1978:Src/BLDC_controller.c ****        *  ActionPort: '<S37>/Action Port'
1979:Src/BLDC_controller.c ****        */
1980:Src/BLDC_controller.c ****       /* DataTypeConversion: '<S37>/Data Type Conversion' incorporates:
1981:Src/BLDC_controller.c ****        *  UnitDelay: '<S8>/UnitDelay4'
1982:Src/BLDC_controller.c ****        */
1983:Src/BLDC_controller.c ****       rtb_Gain3 = rtDW->UnitDelay4_DSTATE_eu << 12;
1984:Src/BLDC_controller.c ****       rtb_Sum1_jt = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
1985:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
1986:Src/BLDC_controller.c **** 
1987:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S37>/rising_edge_init' */
1988:Src/BLDC_controller.c ****       /* UnitDelay: '<S39>/UnitDelay' */
1989:Src/BLDC_controller.c ****       rtb_RelationalOperator1_mv = rtDW->UnitDelay_DSTATE_b;
ARM GAS  /tmp/ccVzdWer.s 			page 108


1990:Src/BLDC_controller.c **** 
1991:Src/BLDC_controller.c ****       /* Update for UnitDelay: '<S39>/UnitDelay' incorporates:
1992:Src/BLDC_controller.c ****        *  Constant: '<S39>/Constant'
1993:Src/BLDC_controller.c ****        */
1994:Src/BLDC_controller.c ****       rtDW->UnitDelay_DSTATE_b = false;
1995:Src/BLDC_controller.c **** 
1996:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S37>/rising_edge_init' */
1997:Src/BLDC_controller.c **** 
1998:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S37>/Rate_Limiter' */
1999:Src/BLDC_controller.c ****       /* Switch: '<S40>/Switch1' incorporates:
2000:Src/BLDC_controller.c ****        *  UnitDelay: '<S40>/UnitDelay'
2001:Src/BLDC_controller.c ****        */
2002:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
2003:Src/BLDC_controller.c ****         rtb_Switch1 = rtb_Sum1_jt;
2004:Src/BLDC_controller.c ****       } else {
2005:Src/BLDC_controller.c ****         rtb_Switch1 = rtDW->UnitDelay_DSTATE;
2006:Src/BLDC_controller.c ****       }
2007:Src/BLDC_controller.c **** 
2008:Src/BLDC_controller.c ****       /* End of Switch: '<S40>/Switch1' */
2009:Src/BLDC_controller.c **** 
2010:Src/BLDC_controller.c ****       /* Sum: '<S38>/Sum1' */
2011:Src/BLDC_controller.c ****       rtb_Gain3 = -rtb_Switch1;
2012:Src/BLDC_controller.c ****       rtb_Sum1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
2013:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
2014:Src/BLDC_controller.c **** 
2015:Src/BLDC_controller.c ****       /* Switch: '<S41>/Switch2' incorporates:
2016:Src/BLDC_controller.c ****        *  Constant: '<S37>/dV_openRate'
2017:Src/BLDC_controller.c ****        *  RelationalOperator: '<S41>/LowerRelop1'
2018:Src/BLDC_controller.c ****        */
2019:Src/BLDC_controller.c ****       if (rtb_Sum1 > rtP->dV_openRate) {
2020:Src/BLDC_controller.c ****         rtb_Sum1 = rtP->dV_openRate;
2021:Src/BLDC_controller.c ****       } else {
2022:Src/BLDC_controller.c ****         /* Gain: '<S37>/Gain3' */
2023:Src/BLDC_controller.c ****         rtb_Gain3 = -rtP->dV_openRate;
2024:Src/BLDC_controller.c ****         rtb_Gain3 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
2025:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
2026:Src/BLDC_controller.c **** 
2027:Src/BLDC_controller.c ****         /* Switch: '<S41>/Switch' incorporates:
2028:Src/BLDC_controller.c ****          *  RelationalOperator: '<S41>/UpperRelop'
2029:Src/BLDC_controller.c ****          */
2030:Src/BLDC_controller.c ****         if (rtb_Sum1 < rtb_Gain3) {
2031:Src/BLDC_controller.c ****           rtb_Sum1 = rtb_Gain3;
2032:Src/BLDC_controller.c ****         }
2033:Src/BLDC_controller.c **** 
2034:Src/BLDC_controller.c ****         /* End of Switch: '<S41>/Switch' */
2035:Src/BLDC_controller.c ****       }
2036:Src/BLDC_controller.c **** 
2037:Src/BLDC_controller.c ****       /* End of Switch: '<S41>/Switch2' */
2038:Src/BLDC_controller.c **** 
2039:Src/BLDC_controller.c ****       /* Sum: '<S38>/Sum2' */
2040:Src/BLDC_controller.c ****       rtb_Gain3 = rtb_Sum1 + rtb_Switch1;
2041:Src/BLDC_controller.c ****       rtb_Switch1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
2042:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
2043:Src/BLDC_controller.c **** 
2044:Src/BLDC_controller.c ****       /* Switch: '<S40>/Switch2' */
2045:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
2046:Src/BLDC_controller.c ****         /* Update for UnitDelay: '<S40>/UnitDelay' */
ARM GAS  /tmp/ccVzdWer.s 			page 109


2047:Src/BLDC_controller.c ****         rtDW->UnitDelay_DSTATE = rtb_Sum1_jt;
2048:Src/BLDC_controller.c ****       } else {
2049:Src/BLDC_controller.c ****         /* Update for UnitDelay: '<S40>/UnitDelay' */
2050:Src/BLDC_controller.c ****         rtDW->UnitDelay_DSTATE = rtb_Switch1;
2051:Src/BLDC_controller.c ****       }
2052:Src/BLDC_controller.c **** 
2053:Src/BLDC_controller.c ****       /* End of Switch: '<S40>/Switch2' */
2054:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S37>/Rate_Limiter' */
2055:Src/BLDC_controller.c **** 
2056:Src/BLDC_controller.c ****       /* DataTypeConversion: '<S37>/Data Type Conversion1' */
2057:Src/BLDC_controller.c ****       rtDW->Merge1 = (int16_T)(rtb_Switch1 >> 12);
2058:Src/BLDC_controller.c **** 
2059:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Open_Mode' */
2060:Src/BLDC_controller.c ****       break;
2061:Src/BLDC_controller.c **** 
2062:Src/BLDC_controller.c ****      case 1:
2063:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Default_Mode' incorporates:
2064:Src/BLDC_controller.c ****        *  ActionPort: '<S35>/Action Port'
2065:Src/BLDC_controller.c ****        */
2066:Src/BLDC_controller.c ****       rtDW->Merge1 = rtb_Saturation;
2067:Src/BLDC_controller.c **** 
2068:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Default_Mode' */
2069:Src/BLDC_controller.c ****       break;
2070:Src/BLDC_controller.c ****     }
2071:Src/BLDC_controller.c **** 
2072:Src/BLDC_controller.c ****     /* End of If: '<S33>/If2' */
2073:Src/BLDC_controller.c **** 
2074:Src/BLDC_controller.c ****     /* Abs: '<S5>/Abs1' */
2075:Src/BLDC_controller.c ****     if (rtDW->Merge1 < 0) {
 3707              		.loc 1 2075 5 view .LVU1297
 3708              		.loc 1 2075 13 is_stmt 0 view .LVU1298
 3709 0834 B4F97430 		ldrsh	r3, [r4, #116]
 3710              		.loc 1 2075 8 view .LVU1299
 3711 0838 002B     		cmp	r3, #0
 3712 083a C0F28280 		blt	.L451
2076:Src/BLDC_controller.c ****       rtDW->Abs1 = (int16_T)-rtDW->Merge1;
2077:Src/BLDC_controller.c ****     } else {
2078:Src/BLDC_controller.c ****       rtDW->Abs1 = rtDW->Merge1;
 3713              		.loc 1 2078 7 is_stmt 1 view .LVU1300
 3714              		.loc 1 2078 18 is_stmt 0 view .LVU1301
 3715 083e A4F87630 		strh	r3, [r4, #118]	@ movhi
 3716              	.LVL355:
 3717              	.L264:
2079:Src/BLDC_controller.c ****     }
2080:Src/BLDC_controller.c **** 
2081:Src/BLDC_controller.c ****     /* End of Abs: '<S5>/Abs1' */
2082:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S1>/F03_Control_Mode_Manager' */
2083:Src/BLDC_controller.c ****   } else if (rtDW->UnitDelay5_DSTATE_m) {
2084:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F04_Field_Weakening' */
2085:Src/BLDC_controller.c ****     /* If: '<S6>/If3' incorporates:
2086:Src/BLDC_controller.c ****      *  Constant: '<S6>/b_fieldWeakEna'
2087:Src/BLDC_controller.c ****      */
2088:Src/BLDC_controller.c ****     if (rtP->b_fieldWeakEna) {
2089:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S6>/Field_Weakening_Enabled' incorporates:
2090:Src/BLDC_controller.c ****        *  ActionPort: '<S42>/Action Port'
2091:Src/BLDC_controller.c ****        */
2092:Src/BLDC_controller.c ****       /* Abs: '<S42>/Abs5' */
ARM GAS  /tmp/ccVzdWer.s 			page 110


2093:Src/BLDC_controller.c ****       if (DataTypeConversion2 < 0) {
2094:Src/BLDC_controller.c ****         DataTypeConversion2 = (int16_T)-DataTypeConversion2;
2095:Src/BLDC_controller.c ****       }
2096:Src/BLDC_controller.c **** 
2097:Src/BLDC_controller.c ****       /* End of Abs: '<S42>/Abs5' */
2098:Src/BLDC_controller.c **** 
2099:Src/BLDC_controller.c ****       /* Switch: '<S44>/Switch2' incorporates:
2100:Src/BLDC_controller.c ****        *  Constant: '<S42>/r_fieldWeakHi'
2101:Src/BLDC_controller.c ****        *  Constant: '<S42>/r_fieldWeakLo'
2102:Src/BLDC_controller.c ****        *  RelationalOperator: '<S44>/LowerRelop1'
2103:Src/BLDC_controller.c ****        *  RelationalOperator: '<S44>/UpperRelop'
2104:Src/BLDC_controller.c ****        *  Switch: '<S44>/Switch'
2105:Src/BLDC_controller.c ****        */
2106:Src/BLDC_controller.c ****       if (DataTypeConversion2 > rtP->r_fieldWeakHi) {
2107:Src/BLDC_controller.c ****         DataTypeConversion2 = rtP->r_fieldWeakHi;
2108:Src/BLDC_controller.c ****       } else {
2109:Src/BLDC_controller.c ****         if (DataTypeConversion2 < rtP->r_fieldWeakLo) {
2110:Src/BLDC_controller.c ****           /* Switch: '<S44>/Switch' incorporates:
2111:Src/BLDC_controller.c ****            *  Constant: '<S42>/r_fieldWeakLo'
2112:Src/BLDC_controller.c ****            */
2113:Src/BLDC_controller.c ****           DataTypeConversion2 = rtP->r_fieldWeakLo;
2114:Src/BLDC_controller.c ****         }
2115:Src/BLDC_controller.c ****       }
2116:Src/BLDC_controller.c **** 
2117:Src/BLDC_controller.c ****       /* End of Switch: '<S44>/Switch2' */
2118:Src/BLDC_controller.c **** 
2119:Src/BLDC_controller.c ****       /* Switch: '<S42>/Switch2' incorporates:
2120:Src/BLDC_controller.c ****        *  Constant: '<S1>/z_ctrlTypSel'
2121:Src/BLDC_controller.c ****        *  Constant: '<S42>/CTRL_COMM2'
2122:Src/BLDC_controller.c ****        *  Constant: '<S42>/a_phaAdvMax'
2123:Src/BLDC_controller.c ****        *  Constant: '<S42>/id_fieldWeakMax'
2124:Src/BLDC_controller.c ****        *  RelationalOperator: '<S42>/Relational Operator1'
2125:Src/BLDC_controller.c ****        */
2126:Src/BLDC_controller.c ****       if (rtP->z_ctrlTypSel == 2) {
2127:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->id_fieldWeakMax;
2128:Src/BLDC_controller.c ****       } else {
2129:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->a_phaAdvMax;
2130:Src/BLDC_controller.c ****       }
2131:Src/BLDC_controller.c **** 
2132:Src/BLDC_controller.c ****       /* End of Switch: '<S42>/Switch2' */
2133:Src/BLDC_controller.c **** 
2134:Src/BLDC_controller.c ****       /* Switch: '<S43>/Switch2' incorporates:
2135:Src/BLDC_controller.c ****        *  Constant: '<S42>/n_fieldWeakAuthHi'
2136:Src/BLDC_controller.c ****        *  Constant: '<S42>/n_fieldWeakAuthLo'
2137:Src/BLDC_controller.c ****        *  RelationalOperator: '<S43>/LowerRelop1'
2138:Src/BLDC_controller.c ****        *  RelationalOperator: '<S43>/UpperRelop'
2139:Src/BLDC_controller.c ****        *  Switch: '<S43>/Switch'
2140:Src/BLDC_controller.c ****        */
2141:Src/BLDC_controller.c ****       if (Abs5 > rtP->n_fieldWeakAuthHi) {
2142:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthHi;
2143:Src/BLDC_controller.c ****       } else if (Abs5 < rtP->n_fieldWeakAuthLo) {
2144:Src/BLDC_controller.c ****         /* Switch: '<S43>/Switch' incorporates:
2145:Src/BLDC_controller.c ****          *  Constant: '<S42>/n_fieldWeakAuthLo'
2146:Src/BLDC_controller.c ****          */
2147:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthLo;
2148:Src/BLDC_controller.c ****       } else {
2149:Src/BLDC_controller.c ****         rtb_Saturation = Abs5;
ARM GAS  /tmp/ccVzdWer.s 			page 111


2150:Src/BLDC_controller.c ****       }
2151:Src/BLDC_controller.c **** 
2152:Src/BLDC_controller.c ****       /* End of Switch: '<S43>/Switch2' */
2153:Src/BLDC_controller.c **** 
2154:Src/BLDC_controller.c ****       /* Product: '<S42>/Divide3' incorporates:
2155:Src/BLDC_controller.c ****        *  Constant: '<S42>/n_fieldWeakAuthHi'
2156:Src/BLDC_controller.c ****        *  Constant: '<S42>/n_fieldWeakAuthLo'
2157:Src/BLDC_controller.c ****        *  Constant: '<S42>/r_fieldWeakHi'
2158:Src/BLDC_controller.c ****        *  Constant: '<S42>/r_fieldWeakLo'
2159:Src/BLDC_controller.c ****        *  Product: '<S42>/Divide1'
2160:Src/BLDC_controller.c ****        *  Product: '<S42>/Divide14'
2161:Src/BLDC_controller.c ****        *  Product: '<S42>/Divide2'
2162:Src/BLDC_controller.c ****        *  Sum: '<S42>/Sum1'
2163:Src/BLDC_controller.c ****        *  Sum: '<S42>/Sum2'
2164:Src/BLDC_controller.c ****        *  Sum: '<S42>/Sum3'
2165:Src/BLDC_controller.c ****        *  Sum: '<S42>/Sum4'
2166:Src/BLDC_controller.c ****        */
2167:Src/BLDC_controller.c ****       rtDW->Divide3 = (int16_T)(((uint16_T)(((uint32_T)(uint16_T)(((int16_T)
2168:Src/BLDC_controller.c ****         (DataTypeConversion2 - rtP->r_fieldWeakLo) << 15) / (int16_T)
2169:Src/BLDC_controller.c ****         (rtP->r_fieldWeakHi - rtP->r_fieldWeakLo)) * (uint16_T)(((int16_T)
2170:Src/BLDC_controller.c ****         (rtb_Saturation - rtP->n_fieldWeakAuthLo) << 15) / (int16_T)
2171:Src/BLDC_controller.c ****         (rtP->n_fieldWeakAuthHi - rtP->n_fieldWeakAuthLo))) >> 15) *
2172:Src/BLDC_controller.c ****         rtb_Saturation1) >> 15);
2173:Src/BLDC_controller.c **** 
2174:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S6>/Field_Weakening_Enabled' */
2175:Src/BLDC_controller.c ****     }
2176:Src/BLDC_controller.c **** 
2177:Src/BLDC_controller.c ****     /* End of If: '<S6>/If3' */
2178:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S1>/F04_Field_Weakening' */
2179:Src/BLDC_controller.c **** 
2180:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S7>/Motor_Limitations' */
2181:Src/BLDC_controller.c ****     /* If: '<S48>/If1' incorporates:
2182:Src/BLDC_controller.c ****      *  Constant: '<S1>/z_ctrlTypSel'
2183:Src/BLDC_controller.c ****      *  Constant: '<S80>/Vd_max1'
2184:Src/BLDC_controller.c ****      *  Constant: '<S80>/i_max'
2185:Src/BLDC_controller.c ****      */
2186:Src/BLDC_controller.c ****     rtb_Sum2_h = rtDW->If1_ActiveSubsystem_o;
2187:Src/BLDC_controller.c ****     UnitDelay3 = -1;
2188:Src/BLDC_controller.c ****     if (rtP->z_ctrlTypSel == 2) {
2189:Src/BLDC_controller.c ****       UnitDelay3 = 0;
2190:Src/BLDC_controller.c ****     }
2191:Src/BLDC_controller.c **** 
2192:Src/BLDC_controller.c ****     rtDW->If1_ActiveSubsystem_o = UnitDelay3;
2193:Src/BLDC_controller.c ****     if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
2194:Src/BLDC_controller.c ****       /* Disable for SwitchCase: '<S80>/Switch Case' */
2195:Src/BLDC_controller.c ****       rtDW->SwitchCase_ActiveSubsystem_d = -1;
2196:Src/BLDC_controller.c ****     }
2197:Src/BLDC_controller.c **** 
2198:Src/BLDC_controller.c ****     if (UnitDelay3 == 0) {
2199:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' incorporates:
2200:Src/BLDC_controller.c ****        *  ActionPort: '<S80>/Action Port'
2201:Src/BLDC_controller.c ****        */
2202:Src/BLDC_controller.c ****       rtDW->Vd_max1 = rtP->Vd_max;
2203:Src/BLDC_controller.c **** 
2204:Src/BLDC_controller.c ****       /* Gain: '<S80>/Gain3' incorporates:
2205:Src/BLDC_controller.c ****        *  Constant: '<S80>/Vd_max1'
2206:Src/BLDC_controller.c ****        */
ARM GAS  /tmp/ccVzdWer.s 			page 112


2207:Src/BLDC_controller.c ****       rtDW->Gain3 = (int16_T)-rtDW->Vd_max1;
2208:Src/BLDC_controller.c **** 
2209:Src/BLDC_controller.c ****       /* Interpolation_n-D: '<S80>/Vq_max_M1' incorporates:
2210:Src/BLDC_controller.c ****        *  Abs: '<S80>/Abs5'
2211:Src/BLDC_controller.c ****        *  PreLookup: '<S80>/Vq_max_XA'
2212:Src/BLDC_controller.c ****        *  UnitDelay: '<S7>/UnitDelay4'
2213:Src/BLDC_controller.c ****        */
2214:Src/BLDC_controller.c ****       if (rtDW->Switch1 < 0) {
2215:Src/BLDC_controller.c ****         rtb_Saturation1 = (int16_T)-rtDW->Switch1;
2216:Src/BLDC_controller.c ****       } else {
2217:Src/BLDC_controller.c ****         rtb_Saturation1 = rtDW->Switch1;
2218:Src/BLDC_controller.c ****       }
2219:Src/BLDC_controller.c **** 
2220:Src/BLDC_controller.c ****       rtDW->Vq_max_M1 = rtP->Vq_max_M1[plook_u8s16_evencka(rtb_Saturation1,
2221:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
2222:Src/BLDC_controller.c ****         45U)];
2223:Src/BLDC_controller.c **** 
2224:Src/BLDC_controller.c ****       /* End of Interpolation_n-D: '<S80>/Vq_max_M1' */
2225:Src/BLDC_controller.c **** 
2226:Src/BLDC_controller.c ****       /* Gain: '<S80>/Gain5' */
2227:Src/BLDC_controller.c ****       rtDW->Gain5 = (int16_T)-rtDW->Vq_max_M1;
2228:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
2229:Src/BLDC_controller.c **** 
2230:Src/BLDC_controller.c ****       /* Interpolation_n-D: '<S80>/iq_maxSca_M1' incorporates:
2231:Src/BLDC_controller.c ****        *  Constant: '<S80>/i_max'
2232:Src/BLDC_controller.c ****        *  Product: '<S80>/Divide4'
2233:Src/BLDC_controller.c ****        */
2234:Src/BLDC_controller.c ****       rtb_Gain3 = rtDW->Divide3 << 16;
2235:Src/BLDC_controller.c ****       rtb_Gain3 = (rtb_Gain3 == MIN_int32_T) && (rtDW->i_max == -1) ?
2236:Src/BLDC_controller.c ****         MAX_int32_T : rtb_Gain3 / rtDW->i_max;
2237:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
2238:Src/BLDC_controller.c ****         rtb_Gain3 = 0;
2239:Src/BLDC_controller.c ****       } else {
2240:Src/BLDC_controller.c ****         if (rtb_Gain3 > 65535) {
2241:Src/BLDC_controller.c ****           rtb_Gain3 = 65535;
2242:Src/BLDC_controller.c ****         }
2243:Src/BLDC_controller.c ****       }
2244:Src/BLDC_controller.c **** 
2245:Src/BLDC_controller.c ****       /* Product: '<S80>/Divide1' incorporates:
2246:Src/BLDC_controller.c ****        *  Interpolation_n-D: '<S80>/iq_maxSca_M1'
2247:Src/BLDC_controller.c ****        *  PreLookup: '<S80>/iq_maxSca_XA'
2248:Src/BLDC_controller.c ****        *  Product: '<S80>/Divide4'
2249:Src/BLDC_controller.c ****        */
2250:Src/BLDC_controller.c ****       rtDW->Divide1_n = (int16_T)
2251:Src/BLDC_controller.c ****         ((rtConstP.iq_maxSca_M1_Table[plook_u8u16_evencka((uint16_T)rtb_Gain3,
2252:Src/BLDC_controller.c ****            0U, 1311U, 49U)] * rtDW->i_max) >> 16);
2253:Src/BLDC_controller.c **** 
2254:Src/BLDC_controller.c ****       /* Gain: '<S80>/Gain1' */
2255:Src/BLDC_controller.c ****       rtDW->Gain1 = (int16_T)-rtDW->Divide1_n;
2256:Src/BLDC_controller.c **** 
2257:Src/BLDC_controller.c ****       /* SwitchCase: '<S80>/Switch Case' incorporates:
2258:Src/BLDC_controller.c ****        *  Constant: '<S80>/n_max1'
2259:Src/BLDC_controller.c ****        *  Constant: '<S82>/Constant1'
2260:Src/BLDC_controller.c ****        *  Constant: '<S82>/cf_KbLimProt'
2261:Src/BLDC_controller.c ****        *  Constant: '<S82>/cf_nKiLimProt'
2262:Src/BLDC_controller.c ****        *  Constant: '<S83>/Constant'
2263:Src/BLDC_controller.c ****        *  Constant: '<S83>/Constant1'
ARM GAS  /tmp/ccVzdWer.s 			page 113


2264:Src/BLDC_controller.c ****        *  Constant: '<S83>/cf_KbLimProt'
2265:Src/BLDC_controller.c ****        *  Constant: '<S83>/cf_iqKiLimProt'
2266:Src/BLDC_controller.c ****        *  Constant: '<S83>/cf_nKiLimProt'
2267:Src/BLDC_controller.c ****        *  Sum: '<S82>/Sum1'
2268:Src/BLDC_controller.c ****        *  Sum: '<S83>/Sum1'
2269:Src/BLDC_controller.c ****        *  Sum: '<S83>/Sum2'
2270:Src/BLDC_controller.c ****        */
2271:Src/BLDC_controller.c ****       rtb_Sum2_h = rtDW->SwitchCase_ActiveSubsystem_d;
2272:Src/BLDC_controller.c ****       UnitDelay3 = -1;
2273:Src/BLDC_controller.c ****       switch (rtDW->z_ctrlMod) {
2274:Src/BLDC_controller.c ****        case 1:
2275:Src/BLDC_controller.c ****         UnitDelay3 = 0;
2276:Src/BLDC_controller.c ****         break;
2277:Src/BLDC_controller.c **** 
2278:Src/BLDC_controller.c ****        case 2:
2279:Src/BLDC_controller.c ****         UnitDelay3 = 1;
2280:Src/BLDC_controller.c ****         break;
2281:Src/BLDC_controller.c **** 
2282:Src/BLDC_controller.c ****        case 3:
2283:Src/BLDC_controller.c ****         UnitDelay3 = 2;
2284:Src/BLDC_controller.c ****         break;
2285:Src/BLDC_controller.c ****       }
2286:Src/BLDC_controller.c **** 
2287:Src/BLDC_controller.c ****       rtDW->SwitchCase_ActiveSubsystem_d = UnitDelay3;
2288:Src/BLDC_controller.c ****       switch (UnitDelay3) {
2289:Src/BLDC_controller.c ****        case 0:
2290:Src/BLDC_controller.c ****         if (UnitDelay3 != rtb_Sum2_h) {
2291:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' incorporates:
2292:Src/BLDC_controller.c ****            *  ActionPort: '<S83>/Action Port'
2293:Src/BLDC_controller.c ****            */
2294:Src/BLDC_controller.c **** 
2295:Src/BLDC_controller.c ****           /* SystemReset for Atomic SubSystem: '<S83>/I_backCalc_fixdt' */
2296:Src/BLDC_controller.c **** 
2297:Src/BLDC_controller.c ****           /* SystemReset for SwitchCase: '<S80>/Switch Case' */
2298:Src/BLDC_controller.c ****           I_backCalc_fixdt_Reset(&rtDW->I_backCalc_fixdt_i, 65536000);
2299:Src/BLDC_controller.c **** 
2300:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S83>/I_backCalc_fixdt' */
2301:Src/BLDC_controller.c **** 
2302:Src/BLDC_controller.c ****           /* SystemReset for Atomic SubSystem: '<S83>/I_backCalc_fixdt1' */
2303:Src/BLDC_controller.c ****           I_backCalc_fixdt_Reset(&rtDW->I_backCalc_fixdt1, 65536000);
2304:Src/BLDC_controller.c **** 
2305:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S83>/I_backCalc_fixdt1' */
2306:Src/BLDC_controller.c **** 
2307:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S80>/Voltage_Mode_Protection' */
2308:Src/BLDC_controller.c ****         }
2309:Src/BLDC_controller.c **** 
2310:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' incorporates:
2311:Src/BLDC_controller.c ****          *  ActionPort: '<S83>/Action Port'
2312:Src/BLDC_controller.c ****          */
2313:Src/BLDC_controller.c **** 
2314:Src/BLDC_controller.c ****         /* Outputs for Atomic SubSystem: '<S83>/I_backCalc_fixdt' */
2315:Src/BLDC_controller.c ****         I_backCalc_fixdt((int16_T)(rtDW->Divide1_n - rtDW->Abs5_h),
2316:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
2317:Src/BLDC_controller.c ****                          &rtDW->Switch2_a, &rtDW->I_backCalc_fixdt_i);
2318:Src/BLDC_controller.c **** 
2319:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S83>/I_backCalc_fixdt' */
2320:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 114


2321:Src/BLDC_controller.c ****         /* Outputs for Atomic SubSystem: '<S83>/I_backCalc_fixdt1' */
2322:Src/BLDC_controller.c ****         I_backCalc_fixdt((int16_T)(rtP->n_max - Abs5), rtP->cf_nKiLimProt,
2323:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
2324:Src/BLDC_controller.c ****                          &rtDW->I_backCalc_fixdt1);
2325:Src/BLDC_controller.c **** 
2326:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S83>/I_backCalc_fixdt1' */
2327:Src/BLDC_controller.c **** 
2328:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S80>/Voltage_Mode_Protection' */
2329:Src/BLDC_controller.c ****         break;
2330:Src/BLDC_controller.c **** 
2331:Src/BLDC_controller.c ****        case 1:
2332:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S80>/Speed_Mode_Protection' incorporates:
2333:Src/BLDC_controller.c ****          *  ActionPort: '<S81>/Action Port'
2334:Src/BLDC_controller.c ****          */
2335:Src/BLDC_controller.c ****         /* Switch: '<S84>/Switch2' incorporates:
2336:Src/BLDC_controller.c ****          *  RelationalOperator: '<S84>/LowerRelop1'
2337:Src/BLDC_controller.c ****          *  RelationalOperator: '<S84>/UpperRelop'
2338:Src/BLDC_controller.c ****          *  Switch: '<S84>/Switch'
2339:Src/BLDC_controller.c ****          */
2340:Src/BLDC_controller.c ****         if (rtDW->DataTypeConversion[0] > rtDW->Divide1_n) {
2341:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Divide1_n;
2342:Src/BLDC_controller.c ****         } else if (rtDW->DataTypeConversion[0] < rtDW->Gain1) {
2343:Src/BLDC_controller.c ****           /* Switch: '<S84>/Switch' */
2344:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Gain1;
2345:Src/BLDC_controller.c ****         } else {
2346:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->DataTypeConversion[0];
2347:Src/BLDC_controller.c ****         }
2348:Src/BLDC_controller.c **** 
2349:Src/BLDC_controller.c ****         /* End of Switch: '<S84>/Switch2' */
2350:Src/BLDC_controller.c **** 
2351:Src/BLDC_controller.c ****         /* Product: '<S81>/Divide1' incorporates:
2352:Src/BLDC_controller.c ****          *  Constant: '<S81>/cf_iqKiLimProt'
2353:Src/BLDC_controller.c ****          *  Sum: '<S81>/Sum3'
2354:Src/BLDC_controller.c ****          */
2355:Src/BLDC_controller.c ****         rtDW->Divide1 = (int16_T)(rtb_Saturation1 - rtDW->DataTypeConversion[0])
2356:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
2357:Src/BLDC_controller.c **** 
2358:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S80>/Speed_Mode_Protection' */
2359:Src/BLDC_controller.c ****         break;
2360:Src/BLDC_controller.c **** 
2361:Src/BLDC_controller.c ****        case 2:
2362:Src/BLDC_controller.c ****         if (UnitDelay3 != rtb_Sum2_h) {
2363:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Torque_Mode_Protection' incorporates:
2364:Src/BLDC_controller.c ****            *  ActionPort: '<S82>/Action Port'
2365:Src/BLDC_controller.c ****            */
2366:Src/BLDC_controller.c **** 
2367:Src/BLDC_controller.c ****           /* SystemReset for Atomic SubSystem: '<S82>/I_backCalc_fixdt' */
2368:Src/BLDC_controller.c **** 
2369:Src/BLDC_controller.c ****           /* SystemReset for SwitchCase: '<S80>/Switch Case' */
2370:Src/BLDC_controller.c ****           I_backCalc_fixdt_Reset(&rtDW->I_backCalc_fixdt_j, 58982400);
2371:Src/BLDC_controller.c **** 
2372:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S82>/I_backCalc_fixdt' */
2373:Src/BLDC_controller.c **** 
2374:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S80>/Torque_Mode_Protection' */
2375:Src/BLDC_controller.c ****         }
2376:Src/BLDC_controller.c **** 
2377:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S80>/Torque_Mode_Protection' incorporates:
ARM GAS  /tmp/ccVzdWer.s 			page 115


2378:Src/BLDC_controller.c ****          *  ActionPort: '<S82>/Action Port'
2379:Src/BLDC_controller.c ****          */
2380:Src/BLDC_controller.c **** 
2381:Src/BLDC_controller.c ****         /* Outputs for Atomic SubSystem: '<S82>/I_backCalc_fixdt' */
2382:Src/BLDC_controller.c ****         I_backCalc_fixdt((int16_T)(rtP->n_max - Abs5), rtP->cf_nKiLimProt,
2383:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
2384:Src/BLDC_controller.c ****                          &rtDW->I_backCalc_fixdt_j);
2385:Src/BLDC_controller.c **** 
2386:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S82>/I_backCalc_fixdt' */
2387:Src/BLDC_controller.c **** 
2388:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S80>/Torque_Mode_Protection' */
2389:Src/BLDC_controller.c ****         break;
2390:Src/BLDC_controller.c ****       }
2391:Src/BLDC_controller.c **** 
2392:Src/BLDC_controller.c ****       /* End of SwitchCase: '<S80>/Switch Case' */
2393:Src/BLDC_controller.c **** 
2394:Src/BLDC_controller.c ****       /* Gain: '<S80>/Gain4' */
2395:Src/BLDC_controller.c ****       rtDW->Gain4 = (int16_T)-rtDW->i_max;
2396:Src/BLDC_controller.c **** 
2397:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S48>/Motor_Limitations_Enabled' */
2398:Src/BLDC_controller.c ****     }
2399:Src/BLDC_controller.c **** 
2400:Src/BLDC_controller.c ****     /* End of If: '<S48>/If1' */
2401:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S7>/Motor_Limitations' */
2402:Src/BLDC_controller.c ****   } else {
2403:Src/BLDC_controller.c ****     if (rtDW->UnitDelay6_DSTATE) {
2404:Src/BLDC_controller.c ****       /* Outputs for Function Call SubSystem: '<S7>/FOC' */
2405:Src/BLDC_controller.c ****       /* If: '<S47>/If1' incorporates:
2406:Src/BLDC_controller.c ****        *  Constant: '<S1>/z_ctrlTypSel'
2407:Src/BLDC_controller.c ****        */
2408:Src/BLDC_controller.c ****       rtb_Sum2_h = rtDW->If1_ActiveSubsystem_j;
2409:Src/BLDC_controller.c ****       UnitDelay3 = -1;
2410:Src/BLDC_controller.c ****       if (rtP->z_ctrlTypSel == 2) {
2411:Src/BLDC_controller.c ****         UnitDelay3 = 0;
2412:Src/BLDC_controller.c ****       }
2413:Src/BLDC_controller.c **** 
2414:Src/BLDC_controller.c ****       rtDW->If1_ActiveSubsystem_j = UnitDelay3;
2415:Src/BLDC_controller.c ****       if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
2416:Src/BLDC_controller.c ****         /* Disable for SwitchCase: '<S59>/Switch Case' */
2417:Src/BLDC_controller.c ****         rtDW->SwitchCase_ActiveSubsystem = -1;
2418:Src/BLDC_controller.c **** 
2419:Src/BLDC_controller.c ****         /* Disable for If: '<S59>/If1' */
2420:Src/BLDC_controller.c ****         rtDW->If1_ActiveSubsystem_a = -1;
2421:Src/BLDC_controller.c ****       }
2422:Src/BLDC_controller.c **** 
2423:Src/BLDC_controller.c ****       if (UnitDelay3 == 0) {
2424:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S47>/FOC_Enabled' incorporates:
2425:Src/BLDC_controller.c ****          *  ActionPort: '<S59>/Action Port'
2426:Src/BLDC_controller.c ****          */
2427:Src/BLDC_controller.c ****         /* SwitchCase: '<S59>/Switch Case' incorporates:
2428:Src/BLDC_controller.c ****          *  Constant: '<S61>/cf_nKi'
2429:Src/BLDC_controller.c ****          *  Constant: '<S61>/cf_nKp'
2430:Src/BLDC_controller.c ****          *  Inport: '<S60>/r_inpTgtSca'
2431:Src/BLDC_controller.c ****          *  Sum: '<S61>/Sum3'
2432:Src/BLDC_controller.c ****          *  UnitDelay: '<S8>/UnitDelay4'
2433:Src/BLDC_controller.c ****          */
2434:Src/BLDC_controller.c ****         rtb_Sum2_h = rtDW->SwitchCase_ActiveSubsystem;
ARM GAS  /tmp/ccVzdWer.s 			page 116


2435:Src/BLDC_controller.c ****         switch (rtDW->z_ctrlMod) {
2436:Src/BLDC_controller.c ****          case 1:
2437:Src/BLDC_controller.c ****           break;
2438:Src/BLDC_controller.c **** 
2439:Src/BLDC_controller.c ****          case 2:
2440:Src/BLDC_controller.c ****           UnitDelay3 = 1;
2441:Src/BLDC_controller.c ****           break;
2442:Src/BLDC_controller.c **** 
2443:Src/BLDC_controller.c ****          case 3:
2444:Src/BLDC_controller.c ****           UnitDelay3 = 2;
2445:Src/BLDC_controller.c ****           break;
2446:Src/BLDC_controller.c **** 
2447:Src/BLDC_controller.c ****          default:
2448:Src/BLDC_controller.c ****           UnitDelay3 = 3;
2449:Src/BLDC_controller.c ****           break;
2450:Src/BLDC_controller.c ****         }
2451:Src/BLDC_controller.c **** 
2452:Src/BLDC_controller.c ****         rtDW->SwitchCase_ActiveSubsystem = UnitDelay3;
2453:Src/BLDC_controller.c ****         switch (UnitDelay3) {
2454:Src/BLDC_controller.c ****          case 0:
2455:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Voltage_Mode' incorporates:
2456:Src/BLDC_controller.c ****            *  ActionPort: '<S64>/Action Port'
2457:Src/BLDC_controller.c ****            */
2458:Src/BLDC_controller.c ****           /* MinMax: '<S64>/MinMax' */
2459:Src/BLDC_controller.c ****           if (rtDW->Abs1 < rtDW->Switch2_a) {
2460:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
2461:Src/BLDC_controller.c ****           } else {
2462:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_a;
2463:Src/BLDC_controller.c ****           }
2464:Src/BLDC_controller.c **** 
2465:Src/BLDC_controller.c ****           if (!(DataTypeConversion2 < rtDW->Switch2_o)) {
2466:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_o;
2467:Src/BLDC_controller.c ****           }
2468:Src/BLDC_controller.c **** 
2469:Src/BLDC_controller.c ****           /* End of MinMax: '<S64>/MinMax' */
2470:Src/BLDC_controller.c **** 
2471:Src/BLDC_controller.c ****           /* Signum: '<S64>/SignDeltaU2' */
2472:Src/BLDC_controller.c ****           if (rtDW->Merge1 < 0) {
2473:Src/BLDC_controller.c ****             rtb_Saturation1 = -1;
2474:Src/BLDC_controller.c ****           } else {
2475:Src/BLDC_controller.c ****             rtb_Saturation1 = (int16_T)(rtDW->Merge1 > 0);
2476:Src/BLDC_controller.c ****           }
2477:Src/BLDC_controller.c **** 
2478:Src/BLDC_controller.c ****           /* End of Signum: '<S64>/SignDeltaU2' */
2479:Src/BLDC_controller.c **** 
2480:Src/BLDC_controller.c ****           /* Product: '<S64>/Divide1' */
2481:Src/BLDC_controller.c ****           rtb_Saturation = (int16_T)(DataTypeConversion2 * rtb_Saturation1);
2482:Src/BLDC_controller.c **** 
2483:Src/BLDC_controller.c ****           /* Switch: '<S79>/Switch2' incorporates:
2484:Src/BLDC_controller.c ****            *  RelationalOperator: '<S79>/LowerRelop1'
2485:Src/BLDC_controller.c ****            *  RelationalOperator: '<S79>/UpperRelop'
2486:Src/BLDC_controller.c ****            *  Switch: '<S79>/Switch'
2487:Src/BLDC_controller.c ****            */
2488:Src/BLDC_controller.c ****           if (rtb_Saturation > rtDW->Vq_max_M1) {
2489:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' */
2490:Src/BLDC_controller.c ****             rtDW->Merge = rtDW->Vq_max_M1;
2491:Src/BLDC_controller.c ****           } else if (rtb_Saturation < rtDW->Gain5) {
ARM GAS  /tmp/ccVzdWer.s 			page 117


2492:Src/BLDC_controller.c ****             /* Switch: '<S79>/Switch' incorporates:
2493:Src/BLDC_controller.c ****              *  SignalConversion: '<S64>/Signal Conversion2'
2494:Src/BLDC_controller.c ****              */
2495:Src/BLDC_controller.c ****             rtDW->Merge = rtDW->Gain5;
2496:Src/BLDC_controller.c ****           } else {
2497:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' incorporates:
2498:Src/BLDC_controller.c ****              *  Switch: '<S79>/Switch'
2499:Src/BLDC_controller.c ****              */
2500:Src/BLDC_controller.c ****             rtDW->Merge = rtb_Saturation;
2501:Src/BLDC_controller.c ****           }
2502:Src/BLDC_controller.c **** 
2503:Src/BLDC_controller.c ****           /* End of Switch: '<S79>/Switch2' */
2504:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Voltage_Mode' */
2505:Src/BLDC_controller.c ****           break;
2506:Src/BLDC_controller.c **** 
2507:Src/BLDC_controller.c ****          case 1:
2508:Src/BLDC_controller.c ****           if (UnitDelay3 != rtb_Sum2_h) {
2509:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Speed_Mode' incorporates:
2510:Src/BLDC_controller.c ****              *  ActionPort: '<S61>/Action Port'
2511:Src/BLDC_controller.c ****              */
2512:Src/BLDC_controller.c **** 
2513:Src/BLDC_controller.c ****             /* SystemReset for Atomic SubSystem: '<S61>/PI_clamp_fixdt' */
2514:Src/BLDC_controller.c **** 
2515:Src/BLDC_controller.c ****             /* SystemReset for SwitchCase: '<S59>/Switch Case' */
2516:Src/BLDC_controller.c ****             PI_clamp_fixdt_b_Reset(&rtDW->PI_clamp_fixdt_l4);
2517:Src/BLDC_controller.c **** 
2518:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S61>/PI_clamp_fixdt' */
2519:Src/BLDC_controller.c **** 
2520:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S59>/Speed_Mode' */
2521:Src/BLDC_controller.c ****           }
2522:Src/BLDC_controller.c **** 
2523:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Speed_Mode' incorporates:
2524:Src/BLDC_controller.c ****            *  ActionPort: '<S61>/Action Port'
2525:Src/BLDC_controller.c ****            */
2526:Src/BLDC_controller.c ****           /* DataTypeConversion: '<S61>/Data Type Conversion2' incorporates:
2527:Src/BLDC_controller.c ****            *  Constant: '<S61>/n_cruiseMotTgt'
2528:Src/BLDC_controller.c ****            */
2529:Src/BLDC_controller.c ****           rtb_Saturation = (int16_T)(rtP->n_cruiseMotTgt << 4);
2530:Src/BLDC_controller.c **** 
2531:Src/BLDC_controller.c ****           /* Switch: '<S61>/Switch4' incorporates:
2532:Src/BLDC_controller.c ****            *  Constant: '<S1>/b_cruiseCtrlEna'
2533:Src/BLDC_controller.c ****            *  Logic: '<S61>/Logical Operator1'
2534:Src/BLDC_controller.c ****            *  RelationalOperator: '<S61>/Relational Operator3'
2535:Src/BLDC_controller.c ****            */
2536:Src/BLDC_controller.c ****           if (rtP->b_cruiseCtrlEna && (rtb_Saturation != 0)) {
2537:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
2538:Src/BLDC_controller.c ****              *  MinMax: '<S61>/MinMax4'
2539:Src/BLDC_controller.c ****              */
2540:Src/BLDC_controller.c ****             if (rtb_Saturation > 0) {
2541:Src/BLDC_controller.c ****               rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
2542:Src/BLDC_controller.c **** 
2543:Src/BLDC_controller.c ****               /* MinMax: '<S61>/MinMax3' */
2544:Src/BLDC_controller.c ****               if (rtDW->Merge1 > rtDW->Gain5) {
2545:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
2546:Src/BLDC_controller.c ****               } else {
2547:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
2548:Src/BLDC_controller.c ****               }
ARM GAS  /tmp/ccVzdWer.s 			page 118


2549:Src/BLDC_controller.c **** 
2550:Src/BLDC_controller.c ****               /* End of MinMax: '<S61>/MinMax3' */
2551:Src/BLDC_controller.c ****             } else {
2552:Src/BLDC_controller.c ****               if (rtDW->Vq_max_M1 < rtDW->Merge1) {
2553:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
2554:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
2555:Src/BLDC_controller.c ****               } else {
2556:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Merge1;
2557:Src/BLDC_controller.c ****               }
2558:Src/BLDC_controller.c **** 
2559:Src/BLDC_controller.c ****               rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
2560:Src/BLDC_controller.c ****             }
2561:Src/BLDC_controller.c **** 
2562:Src/BLDC_controller.c ****             /* End of Switch: '<S61>/Switch3' */
2563:Src/BLDC_controller.c ****           } else {
2564:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
2565:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
2566:Src/BLDC_controller.c ****           }
2567:Src/BLDC_controller.c **** 
2568:Src/BLDC_controller.c ****           /* End of Switch: '<S61>/Switch4' */
2569:Src/BLDC_controller.c **** 
2570:Src/BLDC_controller.c ****           /* Switch: '<S61>/Switch2' incorporates:
2571:Src/BLDC_controller.c ****            *  Constant: '<S1>/b_cruiseCtrlEna'
2572:Src/BLDC_controller.c ****            */
2573:Src/BLDC_controller.c ****           if (!rtP->b_cruiseCtrlEna) {
2574:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Merge1;
2575:Src/BLDC_controller.c ****           }
2576:Src/BLDC_controller.c **** 
2577:Src/BLDC_controller.c ****           /* End of Switch: '<S61>/Switch2' */
2578:Src/BLDC_controller.c **** 
2579:Src/BLDC_controller.c ****           /* Sum: '<S61>/Sum3' */
2580:Src/BLDC_controller.c ****           rtb_Gain3 = rtb_Saturation - Switch2;
2581:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
2582:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
2583:Src/BLDC_controller.c ****           } else {
2584:Src/BLDC_controller.c ****             if (rtb_Gain3 < -32768) {
2585:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
2586:Src/BLDC_controller.c ****             }
2587:Src/BLDC_controller.c ****           }
2588:Src/BLDC_controller.c **** 
2589:Src/BLDC_controller.c ****           /* Outputs for Atomic SubSystem: '<S61>/PI_clamp_fixdt' */
2590:Src/BLDC_controller.c ****           PI_clamp_fixdt_l((int16_T)rtb_Gain3, rtP->cf_nKp, rtP->cf_nKi,
2591:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu,
2592:Src/BLDC_controller.c ****                            rtb_TmpSignalConversionAtLow_Pa[0],
2593:Src/BLDC_controller.c ****                            rtb_TmpSignalConversionAtLow_Pa[1], rtDW->Divide1,
2594:Src/BLDC_controller.c ****                            &rtDW->Merge, &rtDW->PI_clamp_fixdt_l4);
2595:Src/BLDC_controller.c **** 
2596:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S61>/PI_clamp_fixdt' */
2597:Src/BLDC_controller.c **** 
2598:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Speed_Mode' */
2599:Src/BLDC_controller.c ****           break;
2600:Src/BLDC_controller.c **** 
2601:Src/BLDC_controller.c ****          case 2:
2602:Src/BLDC_controller.c ****           if (UnitDelay3 != rtb_Sum2_h) {
2603:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Torque_Mode' incorporates:
2604:Src/BLDC_controller.c ****              *  ActionPort: '<S62>/Action Port'
2605:Src/BLDC_controller.c ****              */
ARM GAS  /tmp/ccVzdWer.s 			page 119


2606:Src/BLDC_controller.c **** 
2607:Src/BLDC_controller.c ****             /* SystemReset for Atomic SubSystem: '<S62>/PI_clamp_fixdt' */
2608:Src/BLDC_controller.c **** 
2609:Src/BLDC_controller.c ****             /* SystemReset for SwitchCase: '<S59>/Switch Case' */
2610:Src/BLDC_controller.c ****             PI_clamp_fixdt_g_Reset(&rtDW->PI_clamp_fixdt_kh);
2611:Src/BLDC_controller.c **** 
2612:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S62>/PI_clamp_fixdt' */
2613:Src/BLDC_controller.c **** 
2614:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S59>/Torque_Mode' */
2615:Src/BLDC_controller.c ****           }
2616:Src/BLDC_controller.c **** 
2617:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Torque_Mode' incorporates:
2618:Src/BLDC_controller.c ****            *  ActionPort: '<S62>/Action Port'
2619:Src/BLDC_controller.c ****            */
2620:Src/BLDC_controller.c ****           /* Gain: '<S62>/Gain4' */
2621:Src/BLDC_controller.c ****           rtb_Saturation = (int16_T)-rtDW->Switch2_i;
2622:Src/BLDC_controller.c **** 
2623:Src/BLDC_controller.c ****           /* Switch: '<S70>/Switch2' incorporates:
2624:Src/BLDC_controller.c ****            *  RelationalOperator: '<S70>/LowerRelop1'
2625:Src/BLDC_controller.c ****            *  RelationalOperator: '<S70>/UpperRelop'
2626:Src/BLDC_controller.c ****            *  Switch: '<S70>/Switch'
2627:Src/BLDC_controller.c ****            */
2628:Src/BLDC_controller.c ****           if (rtDW->Merge1 > rtDW->Divide1_n) {
2629:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
2630:Src/BLDC_controller.c ****           } else if (rtDW->Merge1 < rtDW->Gain1) {
2631:Src/BLDC_controller.c ****             /* Switch: '<S70>/Switch' */
2632:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Gain1;
2633:Src/BLDC_controller.c ****           } else {
2634:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Merge1;
2635:Src/BLDC_controller.c ****           }
2636:Src/BLDC_controller.c **** 
2637:Src/BLDC_controller.c ****           /* End of Switch: '<S70>/Switch2' */
2638:Src/BLDC_controller.c **** 
2639:Src/BLDC_controller.c ****           /* Sum: '<S62>/Sum2' */
2640:Src/BLDC_controller.c ****           rtb_Gain3 = rtb_Saturation1 - rtDW->DataTypeConversion[0];
2641:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
2642:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
2643:Src/BLDC_controller.c ****           } else {
2644:Src/BLDC_controller.c ****             if (rtb_Gain3 < -32768) {
2645:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
2646:Src/BLDC_controller.c ****             }
2647:Src/BLDC_controller.c ****           }
2648:Src/BLDC_controller.c **** 
2649:Src/BLDC_controller.c ****           /* MinMax: '<S62>/MinMax1' */
2650:Src/BLDC_controller.c ****           if (rtDW->Vq_max_M1 < rtDW->Switch2_i) {
2651:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Vq_max_M1;
2652:Src/BLDC_controller.c ****           } else {
2653:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Switch2_i;
2654:Src/BLDC_controller.c ****           }
2655:Src/BLDC_controller.c **** 
2656:Src/BLDC_controller.c ****           /* End of MinMax: '<S62>/MinMax1' */
2657:Src/BLDC_controller.c **** 
2658:Src/BLDC_controller.c ****           /* MinMax: '<S62>/MinMax2' */
2659:Src/BLDC_controller.c ****           if (!(rtb_Saturation > rtDW->Gain5)) {
2660:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Gain5;
2661:Src/BLDC_controller.c ****           }
2662:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 120


2663:Src/BLDC_controller.c ****           /* End of MinMax: '<S62>/MinMax2' */
2664:Src/BLDC_controller.c **** 
2665:Src/BLDC_controller.c ****           /* Outputs for Atomic SubSystem: '<S62>/PI_clamp_fixdt' */
2666:Src/BLDC_controller.c **** 
2667:Src/BLDC_controller.c ****           /* SignalConversion: '<S62>/Signal Conversion2' incorporates:
2668:Src/BLDC_controller.c ****            *  Constant: '<S62>/cf_iqKi'
2669:Src/BLDC_controller.c ****            *  Constant: '<S62>/cf_iqKp'
2670:Src/BLDC_controller.c ****            *  Constant: '<S62>/constant2'
2671:Src/BLDC_controller.c ****            *  Sum: '<S62>/Sum2'
2672:Src/BLDC_controller.c ****            *  UnitDelay: '<S8>/UnitDelay4'
2673:Src/BLDC_controller.c ****            */
2674:Src/BLDC_controller.c ****           PI_clamp_fixdt_k((int16_T)rtb_Gain3, rtP->cf_iqKp, rtP->cf_iqKi,
2675:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu, rtb_Saturation1,
2676:Src/BLDC_controller.c ****                            rtb_Saturation, 0, &rtDW->Merge,
2677:Src/BLDC_controller.c ****                            &rtDW->PI_clamp_fixdt_kh);
2678:Src/BLDC_controller.c **** 
2679:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S62>/PI_clamp_fixdt' */
2680:Src/BLDC_controller.c **** 
2681:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Torque_Mode' */
2682:Src/BLDC_controller.c ****           break;
2683:Src/BLDC_controller.c **** 
2684:Src/BLDC_controller.c ****          case 3:
2685:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Open_Mode' incorporates:
2686:Src/BLDC_controller.c ****            *  ActionPort: '<S60>/Action Port'
2687:Src/BLDC_controller.c ****            */
2688:Src/BLDC_controller.c ****           rtDW->Merge = rtDW->Merge1;
2689:Src/BLDC_controller.c **** 
2690:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Open_Mode' */
2691:Src/BLDC_controller.c ****           break;
2692:Src/BLDC_controller.c ****         }
2693:Src/BLDC_controller.c **** 
2694:Src/BLDC_controller.c ****         /* End of SwitchCase: '<S59>/Switch Case' */
2695:Src/BLDC_controller.c **** 
2696:Src/BLDC_controller.c ****         /* If: '<S59>/If1' incorporates:
2697:Src/BLDC_controller.c ****          *  Constant: '<S63>/cf_idKi1'
2698:Src/BLDC_controller.c ****          *  Constant: '<S63>/cf_idKp1'
2699:Src/BLDC_controller.c ****          *  Constant: '<S63>/constant1'
2700:Src/BLDC_controller.c ****          *  Constant: '<S63>/constant2'
2701:Src/BLDC_controller.c ****          *  Sum: '<S63>/Sum3'
2702:Src/BLDC_controller.c ****          */
2703:Src/BLDC_controller.c ****         rtb_Sum2_h = rtDW->If1_ActiveSubsystem_a;
2704:Src/BLDC_controller.c ****         UnitDelay3 = -1;
2705:Src/BLDC_controller.c ****         if (rtb_LogicalOperator) {
2706:Src/BLDC_controller.c ****           UnitDelay3 = 0;
2707:Src/BLDC_controller.c ****         }
2708:Src/BLDC_controller.c **** 
2709:Src/BLDC_controller.c ****         rtDW->If1_ActiveSubsystem_a = UnitDelay3;
2710:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
2711:Src/BLDC_controller.c ****           if (0 != rtb_Sum2_h) {
2712:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Vd_Calculation' incorporates:
2713:Src/BLDC_controller.c ****              *  ActionPort: '<S63>/Action Port'
2714:Src/BLDC_controller.c ****              */
2715:Src/BLDC_controller.c **** 
2716:Src/BLDC_controller.c ****             /* SystemReset for Atomic SubSystem: '<S63>/PI_clamp_fixdt' */
2717:Src/BLDC_controller.c **** 
2718:Src/BLDC_controller.c ****             /* SystemReset for If: '<S59>/If1' */
2719:Src/BLDC_controller.c ****             PI_clamp_fixdt_Reset(&rtDW->PI_clamp_fixdt_i);
ARM GAS  /tmp/ccVzdWer.s 			page 121


2720:Src/BLDC_controller.c **** 
2721:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S63>/PI_clamp_fixdt' */
2722:Src/BLDC_controller.c **** 
2723:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S59>/Vd_Calculation' */
2724:Src/BLDC_controller.c ****           }
2725:Src/BLDC_controller.c **** 
2726:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Vd_Calculation' incorporates:
2727:Src/BLDC_controller.c ****            *  ActionPort: '<S63>/Action Port'
2728:Src/BLDC_controller.c ****            */
2729:Src/BLDC_controller.c ****           /* Gain: '<S63>/toNegative' */
2730:Src/BLDC_controller.c ****           rtb_Saturation = (int16_T)-rtDW->Divide3;
2731:Src/BLDC_controller.c **** 
2732:Src/BLDC_controller.c ****           /* Switch: '<S75>/Switch2' incorporates:
2733:Src/BLDC_controller.c ****            *  RelationalOperator: '<S75>/LowerRelop1'
2734:Src/BLDC_controller.c ****            *  RelationalOperator: '<S75>/UpperRelop'
2735:Src/BLDC_controller.c ****            *  Switch: '<S75>/Switch'
2736:Src/BLDC_controller.c ****            */
2737:Src/BLDC_controller.c ****           if (rtb_Saturation > rtDW->i_max) {
2738:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->i_max;
2739:Src/BLDC_controller.c ****           } else {
2740:Src/BLDC_controller.c ****             if (rtb_Saturation < rtDW->Gain4) {
2741:Src/BLDC_controller.c ****               /* Switch: '<S75>/Switch' */
2742:Src/BLDC_controller.c ****               rtb_Saturation = rtDW->Gain4;
2743:Src/BLDC_controller.c ****             }
2744:Src/BLDC_controller.c ****           }
2745:Src/BLDC_controller.c **** 
2746:Src/BLDC_controller.c ****           /* End of Switch: '<S75>/Switch2' */
2747:Src/BLDC_controller.c **** 
2748:Src/BLDC_controller.c ****           /* Sum: '<S63>/Sum3' */
2749:Src/BLDC_controller.c ****           rtb_Gain3 = rtb_Saturation - rtDW->DataTypeConversion[1];
2750:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
2751:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
2752:Src/BLDC_controller.c ****           } else {
2753:Src/BLDC_controller.c ****             if (rtb_Gain3 < -32768) {
2754:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
2755:Src/BLDC_controller.c ****             }
2756:Src/BLDC_controller.c ****           }
2757:Src/BLDC_controller.c **** 
2758:Src/BLDC_controller.c ****           /* Outputs for Atomic SubSystem: '<S63>/PI_clamp_fixdt' */
2759:Src/BLDC_controller.c ****           PI_clamp_fixdt((int16_T)rtb_Gain3, rtP->cf_idKp, rtP->cf_idKi, 0,
2760:Src/BLDC_controller.c ****                          rtDW->Vd_max1, rtDW->Gain3, 0, &rtDW->Switch1,
2761:Src/BLDC_controller.c ****                          &rtDW->PI_clamp_fixdt_i);
2762:Src/BLDC_controller.c **** 
2763:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S63>/PI_clamp_fixdt' */
2764:Src/BLDC_controller.c **** 
2765:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Vd_Calculation' */
2766:Src/BLDC_controller.c ****         }
2767:Src/BLDC_controller.c **** 
2768:Src/BLDC_controller.c ****         /* End of If: '<S59>/If1' */
2769:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S47>/FOC_Enabled' */
2770:Src/BLDC_controller.c ****       }
2771:Src/BLDC_controller.c **** 
2772:Src/BLDC_controller.c ****       /* End of If: '<S47>/If1' */
2773:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S7>/FOC' */
2774:Src/BLDC_controller.c ****     }
2775:Src/BLDC_controller.c ****   }
2776:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 122


2777:Src/BLDC_controller.c ****   /* End of Chart: '<S1>/Task_Scheduler' */
2778:Src/BLDC_controller.c **** 
2779:Src/BLDC_controller.c ****   /* If: '<S7>/If2' incorporates:
2780:Src/BLDC_controller.c ****    *  Constant: '<S1>/z_ctrlTypSel'
2781:Src/BLDC_controller.c ****    *  Constant: '<S8>/CTRL_COMM1'
2782:Src/BLDC_controller.c ****    *  RelationalOperator: '<S8>/Relational Operator6'
2783:Src/BLDC_controller.c ****    *  Switch: '<S8>/Switch2'
2784:Src/BLDC_controller.c ****    */
2785:Src/BLDC_controller.c ****   rtb_Sum2_h = rtDW->If2_ActiveSubsystem;
 3718              		.loc 1 2785 3 is_stmt 1 view .LVU1302
 3719              		.loc 1 2785 14 is_stmt 0 view .LVU1303
 3720 0842 94F99120 		ldrsb	r2, [r4, #145]
 3721              	.LVL356:
2786:Src/BLDC_controller.c ****   UnitDelay3 = -1;
 3722              		.loc 1 2786 3 is_stmt 1 view .LVU1304
2787:Src/BLDC_controller.c ****   if (rtP->z_ctrlTypSel == 2) {
 3723              		.loc 1 2787 3 view .LVU1305
 3724              		.loc 1 2787 10 is_stmt 0 view .LVU1306
 3725 0846 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
 3726              		.loc 1 2787 6 view .LVU1307
 3727 084a 022B     		cmp	r3, #2
 3728 084c 00F03F83 		beq	.L452
2788:Src/BLDC_controller.c ****     rtb_Saturation = rtDW->Merge;
2789:Src/BLDC_controller.c ****     UnitDelay3 = 0;
2790:Src/BLDC_controller.c ****   } else {
2791:Src/BLDC_controller.c ****     rtb_Saturation = rtDW->Merge1;
 3729              		.loc 1 2791 5 is_stmt 1 view .LVU1308
 3730              		.loc 1 2791 20 is_stmt 0 view .LVU1309
 3731 0850 B4F97480 		ldrsh	r8, [r4, #116]
 3732              	.LVL357:
2786:Src/BLDC_controller.c ****   if (rtP->z_ctrlTypSel == 2) {
 3733              		.loc 1 2786 14 view .LVU1310
 3734 0854 4FF0FF33 		mov	r3, #-1
 3735              	.LVL358:
 3736              	.L325:
2792:Src/BLDC_controller.c ****   }
2793:Src/BLDC_controller.c **** 
2794:Src/BLDC_controller.c ****   rtDW->If2_ActiveSubsystem = UnitDelay3;
 3737              		.loc 1 2794 3 is_stmt 1 view .LVU1311
 3738              		.loc 1 2794 29 is_stmt 0 view .LVU1312
 3739 0858 84F89130 		strb	r3, [r4, #145]
2795:Src/BLDC_controller.c ****   if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 3740              		.loc 1 2795 3 is_stmt 1 view .LVU1313
 3741              		.loc 1 2795 6 is_stmt 0 view .LVU1314
 3742 085c 9342     		cmp	r3, r2
 3743 085e 06D0     		beq	.L326
 3744              		.loc 1 2795 34 discriminator 1 view .LVU1315
 3745 0860 2AB9     		cbnz	r2, .L326
2796:Src/BLDC_controller.c ****     /* Disable for Outport: '<S46>/V_phaABC_FOC' */
2797:Src/BLDC_controller.c ****     rtDW->Gain4_e[0] = 0;
 3746              		.loc 1 2797 5 is_stmt 1 view .LVU1316
 3747              		.loc 1 2797 22 is_stmt 0 view .LVU1317
 3748 0862 A4F84C20 		strh	r2, [r4, #76]	@ movhi
2798:Src/BLDC_controller.c ****     rtDW->Gain4_e[1] = 0;
 3749              		.loc 1 2798 5 is_stmt 1 view .LVU1318
 3750              		.loc 1 2798 22 is_stmt 0 view .LVU1319
 3751 0866 A4F84E20 		strh	r2, [r4, #78]	@ movhi
ARM GAS  /tmp/ccVzdWer.s 			page 123


2799:Src/BLDC_controller.c ****     rtDW->Gain4_e[2] = 0;
 3752              		.loc 1 2799 5 is_stmt 1 view .LVU1320
 3753              		.loc 1 2799 22 is_stmt 0 view .LVU1321
 3754 086a A4F85020 		strh	r2, [r4, #80]	@ movhi
 3755              	.L326:
2800:Src/BLDC_controller.c ****   }
2801:Src/BLDC_controller.c **** 
2802:Src/BLDC_controller.c ****   if (UnitDelay3 == 0) {
 3756              		.loc 1 2802 3 is_stmt 1 view .LVU1322
 3757              		.loc 1 2802 6 is_stmt 0 view .LVU1323
 3758 086e 002B     		cmp	r3, #0
 3759 0870 40F0C983 		bne	.L327
2803:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S7>/Clarke_Park_Transform_Inverse' incorporates:
2804:Src/BLDC_controller.c ****      *  ActionPort: '<S46>/Action Port'
2805:Src/BLDC_controller.c ****      */
2806:Src/BLDC_controller.c ****     /* Sum: '<S58>/Sum6' incorporates:
2807:Src/BLDC_controller.c ****      *  Product: '<S58>/Divide1'
2808:Src/BLDC_controller.c ****      *  Product: '<S58>/Divide4'
2809:Src/BLDC_controller.c ****      */
2810:Src/BLDC_controller.c ****     rtb_Gain3 = (int16_T)((rtDW->Switch1 * rtDW->r_cos_M1) >> 14) - (int16_T)
 3760              		.loc 1 2810 5 is_stmt 1 view .LVU1324
 3761              		.loc 1 2810 32 is_stmt 0 view .LVU1325
 3762 0874 B4F95AC0 		ldrsh	ip, [r4, #90]
 3763              		.loc 1 2810 48 view .LVU1326
 3764 0878 B4F97E00 		ldrsh	r0, [r4, #126]
 3765              		.loc 1 2810 42 view .LVU1327
 3766 087c 00FB0CF2 		mul	r2, r0, ip
 3767              	.LVL359:
 3768              		.loc 1 2810 17 view .LVU1328
 3769 0880 42F38F3E 		sbfx	lr, r2, #14, #16
2811:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_sin_M1) >> 14);
 3770              		.loc 1 2811 13 view .LVU1329
 3771 0884 B4F95810 		ldrsh	r1, [r4, #88]
 3772              		.loc 1 2811 27 view .LVU1330
 3773 0888 B4F97C30 		ldrsh	r3, [r4, #124]
 3774              	.LVL360:
 3775              		.loc 1 2811 21 view .LVU1331
 3776 088c 03FB01F2 		mul	r2, r3, r1
2810:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_sin_M1) >> 14);
 3777              		.loc 1 2810 69 view .LVU1332
 3778 0890 42F38F32 		sbfx	r2, r2, #14, #16
2810:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_sin_M1) >> 14);
 3779              		.loc 1 2810 15 view .LVU1333
 3780 0894 AEEB0202 		sub	r2, lr, r2
 3781              	.LVL361:
2812:Src/BLDC_controller.c ****     if (rtb_Gain3 > 32767) {
 3782              		.loc 1 2812 5 is_stmt 1 view .LVU1334
 3783              		.loc 1 2812 8 is_stmt 0 view .LVU1335
 3784 0898 B2F5004F 		cmp	r2, #32768
 3785 089c 80F21B83 		bge	.L407
2813:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
2814:Src/BLDC_controller.c ****     } else {
2815:Src/BLDC_controller.c ****       if (rtb_Gain3 < -32768) {
 3786              		.loc 1 2815 7 is_stmt 1 view .LVU1336
 3787              		.loc 1 2815 10 is_stmt 0 view .LVU1337
 3788 08a0 12F5004F 		cmn	r2, #32768
 3789 08a4 80F21983 		bge	.L328
ARM GAS  /tmp/ccVzdWer.s 			page 124


2816:Src/BLDC_controller.c ****         rtb_Gain3 = -32768;
 3790              		.loc 1 2816 19 view .LVU1338
 3791 08a8 954A     		ldr	r2, .L471+4
 3792              	.LVL362:
 3793              		.loc 1 2816 19 view .LVU1339
 3794 08aa 16E3     		b	.L328
 3795              	.LVL363:
 3796              	.L389:
1925:Src/BLDC_controller.c **** 
 3797              		.loc 1 1925 22 view .LVU1340
 3798 08ac 4FF47A5B 		mov	fp, #16000
 3799              	.LVL364:
1925:Src/BLDC_controller.c **** 
 3800              		.loc 1 1925 22 view .LVU1341
 3801 08b0 B1E7     		b	.L246
 3802              	.LVL365:
 3803              	.L247:
1957:Src/BLDC_controller.c ****         /* SystemReset for IfAction SubSystem: '<S33>/Open_Mode' incorporates:
 3804              		.loc 1 1957 7 is_stmt 1 view .LVU1342
1957:Src/BLDC_controller.c ****         /* SystemReset for IfAction SubSystem: '<S33>/Open_Mode' incorporates:
 3805              		.loc 1 1957 10 is_stmt 0 view .LVU1343
 3806 08b2 9142     		cmp	r1, r2
 3807 08b4 04D0     		beq	.L250
1966:Src/BLDC_controller.c **** 
 3808              		.loc 1 1966 9 is_stmt 1 view .LVU1344
1966:Src/BLDC_controller.c **** 
 3809              		.loc 1 1966 34 is_stmt 0 view .LVU1345
 3810 08b6 0123     		movs	r3, #1
 3811 08b8 84F8A630 		strb	r3, [r4, #166]
1971:Src/BLDC_controller.c **** 
 3812              		.loc 1 1971 9 is_stmt 1 view .LVU1346
1971:Src/BLDC_controller.c **** 
 3813              		.loc 1 1971 32 is_stmt 0 view .LVU1347
 3814 08bc 0023     		movs	r3, #0
 3815 08be A364     		str	r3, [r4, #72]
 3816              	.L250:
1983:Src/BLDC_controller.c ****       rtb_Sum1_jt = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3817              		.loc 1 1983 7 is_stmt 1 view .LVU1348
1983:Src/BLDC_controller.c ****       rtb_Sum1_jt = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3818              		.loc 1 1983 23 is_stmt 0 view .LVU1349
 3819 08c0 B4F98C30 		ldrsh	r3, [r4, #140]
1983:Src/BLDC_controller.c ****       rtb_Sum1_jt = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3820              		.loc 1 1983 17 view .LVU1350
 3821 08c4 1903     		lsls	r1, r3, #12
 3822              	.LVL366:
1984:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3823              		.loc 1 1984 7 is_stmt 1 view .LVU1351
1984:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3824              		.loc 1 1984 75 is_stmt 0 view .LVU1352
 3825 08c6 002B     		cmp	r3, #0
 3826 08c8 0BDA     		bge	.L251
1984:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3827              		.loc 1 1984 75 discriminator 1 view .LVU1353
 3828 08ca 41F07841 		orr	r1, r1, #-134217728
 3829              	.LVL367:
 3830              	.L252:
1989:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 125


 3831              		.loc 1 1989 7 is_stmt 1 discriminator 4 view .LVU1354
1989:Src/BLDC_controller.c **** 
 3832              		.loc 1 1989 40 is_stmt 0 discriminator 4 view .LVU1355
 3833 08ce 94F8A600 		ldrb	r0, [r4, #166]	@ zero_extendqisi2
 3834              	.LVL368:
1989:Src/BLDC_controller.c **** 
 3835              		.loc 1 1989 34 discriminator 4 view .LVU1356
 3836 08d2 8DF84F00 		strb	r0, [sp, #79]
1994:Src/BLDC_controller.c **** 
 3837              		.loc 1 1994 7 is_stmt 1 discriminator 4 view .LVU1357
1994:Src/BLDC_controller.c **** 
 3838              		.loc 1 1994 32 is_stmt 0 discriminator 4 view .LVU1358
 3839 08d6 0023     		movs	r3, #0
 3840              	.LVL369:
1994:Src/BLDC_controller.c **** 
 3841              		.loc 1 1994 32 discriminator 4 view .LVU1359
 3842 08d8 84F8A630 		strb	r3, [r4, #166]
2002:Src/BLDC_controller.c ****         rtb_Switch1 = rtb_Sum1_jt;
 3843              		.loc 1 2002 7 is_stmt 1 discriminator 4 view .LVU1360
2002:Src/BLDC_controller.c ****         rtb_Switch1 = rtb_Sum1_jt;
 3844              		.loc 1 2002 10 is_stmt 0 discriminator 4 view .LVU1361
 3845 08dc 20B9     		cbnz	r0, .L390
2005:Src/BLDC_controller.c ****       }
 3846              		.loc 1 2005 9 is_stmt 1 view .LVU1362
2005:Src/BLDC_controller.c ****       }
 3847              		.loc 1 2005 21 is_stmt 0 view .LVU1363
 3848 08de A36C     		ldr	r3, [r4, #72]
 3849              	.LVL370:
2005:Src/BLDC_controller.c ****       }
 3850              		.loc 1 2005 21 view .LVU1364
 3851 08e0 03E0     		b	.L253
 3852              	.LVL371:
 3853              	.L251:
1984:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3854              		.loc 1 1984 75 discriminator 2 view .LVU1365
 3855 08e2 21F07841 		bic	r1, r1, #-134217728
 3856              	.LVL372:
1984:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3857              		.loc 1 1984 75 discriminator 2 view .LVU1366
 3858 08e6 F2E7     		b	.L252
 3859              	.LVL373:
 3860              	.L390:
2003:Src/BLDC_controller.c ****       } else {
 3861              		.loc 1 2003 21 view .LVU1367
 3862 08e8 0B46     		mov	r3, r1
 3863              	.L253:
 3864              	.LVL374:
2011:Src/BLDC_controller.c ****       rtb_Sum1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3865              		.loc 1 2011 7 is_stmt 1 view .LVU1368
2011:Src/BLDC_controller.c ****       rtb_Sum1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3866              		.loc 1 2011 17 is_stmt 0 view .LVU1369
 3867 08ea 5A42     		rsbs	r2, r3, #0
 3868              	.LVL375:
2012:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3869              		.loc 1 2012 7 is_stmt 1 view .LVU1370
2012:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3870              		.loc 1 2012 72 is_stmt 0 view .LVU1371
ARM GAS  /tmp/ccVzdWer.s 			page 126


 3871 08ec 12F0006F 		tst	r2, #134217728
 3872 08f0 19D0     		beq	.L254
2012:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3873              		.loc 1 2012 72 discriminator 1 view .LVU1372
 3874 08f2 42F0784C 		orr	ip, r2, #-134217728
 3875              	.L255:
 3876              	.LVL376:
2019:Src/BLDC_controller.c ****         rtb_Sum1 = rtP->dV_openRate;
 3877              		.loc 1 2019 7 is_stmt 1 discriminator 4 view .LVU1373
2019:Src/BLDC_controller.c ****         rtb_Sum1 = rtP->dV_openRate;
 3878              		.loc 1 2019 25 is_stmt 0 discriminator 4 view .LVU1374
 3879 08f6 2A68     		ldr	r2, [r5]
 3880              	.LVL377:
2019:Src/BLDC_controller.c ****         rtb_Sum1 = rtP->dV_openRate;
 3881              		.loc 1 2019 10 discriminator 4 view .LVU1375
 3882 08f8 6245     		cmp	r2, ip
 3883 08fa 08DB     		blt	.L256
2023:Src/BLDC_controller.c ****         rtb_Gain3 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3884              		.loc 1 2023 9 is_stmt 1 view .LVU1376
2023:Src/BLDC_controller.c ****         rtb_Gain3 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3885              		.loc 1 2023 19 is_stmt 0 view .LVU1377
 3886 08fc 5242     		rsbs	r2, r2, #0
 3887              	.LVL378:
2024:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3888              		.loc 1 2024 9 is_stmt 1 view .LVU1378
2024:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3889              		.loc 1 2024 75 is_stmt 0 view .LVU1379
 3890 08fe 12F0006F 		tst	r2, #134217728
 3891 0902 13D0     		beq	.L257
2024:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3892              		.loc 1 2024 75 discriminator 1 view .LVU1380
 3893 0904 42F07842 		orr	r2, r2, #-134217728
 3894              	.LVL379:
 3895              	.L258:
2030:Src/BLDC_controller.c ****           rtb_Sum1 = rtb_Gain3;
 3896              		.loc 1 2030 9 is_stmt 1 discriminator 4 view .LVU1381
2030:Src/BLDC_controller.c ****           rtb_Sum1 = rtb_Gain3;
 3897              		.loc 1 2030 12 is_stmt 0 discriminator 4 view .LVU1382
 3898 0908 9445     		cmp	ip, r2
 3899 090a 00DB     		blt	.L256
2012:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3900              		.loc 1 2012 16 view .LVU1383
 3901 090c 6246     		mov	r2, ip
 3902              	.LVL380:
 3903              	.L256:
2040:Src/BLDC_controller.c ****       rtb_Switch1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3904              		.loc 1 2040 7 is_stmt 1 view .LVU1384
2040:Src/BLDC_controller.c ****       rtb_Switch1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3905              		.loc 1 2040 17 is_stmt 0 view .LVU1385
 3906 090e 1344     		add	r3, r3, r2
 3907              	.LVL381:
2041:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3908              		.loc 1 2041 7 is_stmt 1 view .LVU1386
2041:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3909              		.loc 1 2041 75 is_stmt 0 view .LVU1387
 3910 0910 13F0006F 		tst	r3, #134217728
 3911 0914 0DD0     		beq	.L259
ARM GAS  /tmp/ccVzdWer.s 			page 127


2041:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3912              		.loc 1 2041 75 discriminator 1 view .LVU1388
 3913 0916 43F07843 		orr	r3, r3, #-134217728
 3914              	.LVL382:
 3915              	.L260:
2045:Src/BLDC_controller.c ****         /* Update for UnitDelay: '<S40>/UnitDelay' */
 3916              		.loc 1 2045 7 is_stmt 1 discriminator 4 view .LVU1389
2045:Src/BLDC_controller.c ****         /* Update for UnitDelay: '<S40>/UnitDelay' */
 3917              		.loc 1 2045 10 is_stmt 0 discriminator 4 view .LVU1390
 3918 091a 68B1     		cbz	r0, .L261
2047:Src/BLDC_controller.c ****       } else {
 3919              		.loc 1 2047 9 is_stmt 1 view .LVU1391
2047:Src/BLDC_controller.c ****       } else {
 3920              		.loc 1 2047 32 is_stmt 0 view .LVU1392
 3921 091c A164     		str	r1, [r4, #72]
 3922              	.L262:
2057:Src/BLDC_controller.c **** 
 3923              		.loc 1 2057 7 is_stmt 1 view .LVU1393
2057:Src/BLDC_controller.c **** 
 3924              		.loc 1 2057 22 is_stmt 0 view .LVU1394
 3925 091e 1B13     		asrs	r3, r3, #12
 3926              	.LVL383:
2057:Src/BLDC_controller.c **** 
 3927              		.loc 1 2057 20 view .LVU1395
 3928 0920 A4F87430 		strh	r3, [r4, #116]	@ movhi
2060:Src/BLDC_controller.c **** 
 3929              		.loc 1 2060 7 is_stmt 1 view .LVU1396
 3930 0924 86E7     		b	.L249
 3931              	.LVL384:
 3932              	.L254:
2012:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3933              		.loc 1 2012 72 is_stmt 0 discriminator 2 view .LVU1397
 3934 0926 22F0784C 		bic	ip, r2, #-134217728
 3935 092a E4E7     		b	.L255
 3936              	.LVL385:
 3937              	.L257:
2024:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3938              		.loc 1 2024 75 discriminator 2 view .LVU1398
 3939 092c 22F07842 		bic	r2, r2, #-134217728
 3940              	.LVL386:
2024:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3941              		.loc 1 2024 75 discriminator 2 view .LVU1399
 3942 0930 EAE7     		b	.L258
 3943              	.LVL387:
 3944              	.L259:
2041:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3945              		.loc 1 2041 75 discriminator 2 view .LVU1400
 3946 0932 23F07843 		bic	r3, r3, #-134217728
 3947              	.LVL388:
2041:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3948              		.loc 1 2041 75 discriminator 2 view .LVU1401
 3949 0936 F0E7     		b	.L260
 3950              	.LVL389:
 3951              	.L261:
2050:Src/BLDC_controller.c ****       }
 3952              		.loc 1 2050 9 is_stmt 1 view .LVU1402
2050:Src/BLDC_controller.c ****       }
ARM GAS  /tmp/ccVzdWer.s 			page 128


 3953              		.loc 1 2050 32 is_stmt 0 view .LVU1403
 3954 0938 A364     		str	r3, [r4, #72]
 3955 093a F0E7     		b	.L262
 3956              	.LVL390:
 3957              	.L248:
2066:Src/BLDC_controller.c **** 
 3958              		.loc 1 2066 7 is_stmt 1 view .LVU1404
2066:Src/BLDC_controller.c **** 
 3959              		.loc 1 2066 20 is_stmt 0 view .LVU1405
 3960 093c A4F874B0 		strh	fp, [r4, #116]	@ movhi
2069:Src/BLDC_controller.c ****     }
 3961              		.loc 1 2069 7 is_stmt 1 view .LVU1406
 3962 0940 78E7     		b	.L249
 3963              	.LVL391:
 3964              	.L451:
2076:Src/BLDC_controller.c ****     } else {
 3965              		.loc 1 2076 7 view .LVU1407
2076:Src/BLDC_controller.c ****     } else {
 3966              		.loc 1 2076 34 is_stmt 0 view .LVU1408
 3967 0942 9BB2     		uxth	r3, r3
2076:Src/BLDC_controller.c ****     } else {
 3968              		.loc 1 2076 20 view .LVU1409
 3969 0944 5B42     		rsbs	r3, r3, #0
2076:Src/BLDC_controller.c ****     } else {
 3970              		.loc 1 2076 18 view .LVU1410
 3971 0946 A4F87630 		strh	r3, [r4, #118]	@ movhi
 3972 094a 7AE7     		b	.L264
 3973              	.LVL392:
 3974              	.L217:
2083:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F04_Field_Weakening' */
 3975              		.loc 1 2083 10 is_stmt 1 view .LVU1411
2083:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F04_Field_Weakening' */
 3976              		.loc 1 2083 18 is_stmt 0 view .LVU1412
 3977 094c 94F8A430 		ldrb	r3, [r4, #164]	@ zero_extendqisi2
2083:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F04_Field_Weakening' */
 3978              		.loc 1 2083 13 view .LVU1413
 3979 0950 002B     		cmp	r3, #0
 3980 0952 00F05B81 		beq	.L265
2088:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S6>/Field_Weakening_Enabled' incorporates:
 3981              		.loc 1 2088 5 is_stmt 1 view .LVU1414
2088:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S6>/Field_Weakening_Enabled' incorporates:
 3982              		.loc 1 2088 12 is_stmt 0 view .LVU1415
 3983 0956 95F8FE30 		ldrb	r3, [r5, #254]	@ zero_extendqisi2
2088:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S6>/Field_Weakening_Enabled' incorporates:
 3984              		.loc 1 2088 8 view .LVU1416
 3985 095a 002B     		cmp	r3, #0
 3986 095c 4CD0     		beq	.L266
2093:Src/BLDC_controller.c ****         DataTypeConversion2 = (int16_T)-DataTypeConversion2;
 3987              		.loc 1 2093 7 is_stmt 1 view .LVU1417
2093:Src/BLDC_controller.c ****         DataTypeConversion2 = (int16_T)-DataTypeConversion2;
 3988              		.loc 1 2093 10 is_stmt 0 view .LVU1418
 3989 095e BBF1000F 		cmp	fp, #0
 3990 0962 09DB     		blt	.L453
 3991              	.L267:
2106:Src/BLDC_controller.c ****         DataTypeConversion2 = rtP->r_fieldWeakHi;
 3992              		.loc 1 2106 7 is_stmt 1 view .LVU1419
2106:Src/BLDC_controller.c ****         DataTypeConversion2 = rtP->r_fieldWeakHi;
ARM GAS  /tmp/ccVzdWer.s 			page 129


 3993              		.loc 1 2106 36 is_stmt 0 view .LVU1420
 3994 0964 B5F9E010 		ldrsh	r1, [r5, #224]
2106:Src/BLDC_controller.c ****         DataTypeConversion2 = rtP->r_fieldWeakHi;
 3995              		.loc 1 2106 10 view .LVU1421
 3996 0968 5945     		cmp	r1, fp
 3997 096a 0BDB     		blt	.L391
2109:Src/BLDC_controller.c ****           /* Switch: '<S44>/Switch' incorporates:
 3998              		.loc 1 2109 9 is_stmt 1 view .LVU1422
2109:Src/BLDC_controller.c ****           /* Switch: '<S44>/Switch' incorporates:
 3999              		.loc 1 2109 38 is_stmt 0 view .LVU1423
 4000 096c B5F9E230 		ldrsh	r3, [r5, #226]
2109:Src/BLDC_controller.c ****           /* Switch: '<S44>/Switch' incorporates:
 4001              		.loc 1 2109 12 view .LVU1424
 4002 0970 5B45     		cmp	r3, fp
 4003 0972 08DC     		bgt	.L268
 4004 0974 5B46     		mov	r3, fp
 4005 0976 06E0     		b	.L268
 4006              	.L453:
2094:Src/BLDC_controller.c ****       }
 4007              		.loc 1 2094 9 is_stmt 1 view .LVU1425
2094:Src/BLDC_controller.c ****       }
 4008              		.loc 1 2094 31 is_stmt 0 view .LVU1426
 4009 0978 0F9B     		ldr	r3, [sp, #60]
 4010 097a C3F1000B 		rsb	fp, r3, #0
 4011              	.LVL393:
2094:Src/BLDC_controller.c ****       }
 4012              		.loc 1 2094 29 view .LVU1427
 4013 097e 0FFA8BFB 		sxth	fp, fp
 4014              	.LVL394:
2094:Src/BLDC_controller.c ****       }
 4015              		.loc 1 2094 29 view .LVU1428
 4016 0982 EFE7     		b	.L267
 4017              	.L391:
2107:Src/BLDC_controller.c ****       } else {
 4018              		.loc 1 2107 29 view .LVU1429
 4019 0984 0B46     		mov	r3, r1
 4020              	.L268:
 4021              	.LVL395:
2126:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->id_fieldWeakMax;
 4022              		.loc 1 2126 7 is_stmt 1 view .LVU1430
2126:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->id_fieldWeakMax;
 4023              		.loc 1 2126 14 is_stmt 0 view .LVU1431
 4024 0986 95F8F920 		ldrb	r2, [r5, #249]	@ zero_extendqisi2
2126:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->id_fieldWeakMax;
 4025              		.loc 1 2126 10 view .LVU1432
 4026 098a 022A     		cmp	r2, #2
 4027 098c 0CD0     		beq	.L454
2129:Src/BLDC_controller.c ****       }
 4028              		.loc 1 2129 9 is_stmt 1 view .LVU1433
2129:Src/BLDC_controller.c ****       }
 4029              		.loc 1 2129 25 is_stmt 0 view .LVU1434
 4030 098e B5F9CC80 		ldrsh	r8, [r5, #204]
 4031              	.LVL396:
 4032              	.L270:
2141:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthHi;
 4033              		.loc 1 2141 7 is_stmt 1 view .LVU1435
2141:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthHi;
ARM GAS  /tmp/ccVzdWer.s 			page 130


 4034              		.loc 1 2141 21 is_stmt 0 view .LVU1436
 4035 0992 B5F9D600 		ldrsh	r0, [r5, #214]
2141:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthHi;
 4036              		.loc 1 2141 10 view .LVU1437
 4037 0996 079A     		ldr	r2, [sp, #28]
 4038 0998 9042     		cmp	r0, r2
 4039 099a 08DB     		blt	.L392
2143:Src/BLDC_controller.c ****         /* Switch: '<S43>/Switch' incorporates:
 4040              		.loc 1 2143 14 is_stmt 1 view .LVU1438
2143:Src/BLDC_controller.c ****         /* Switch: '<S43>/Switch' incorporates:
 4041              		.loc 1 2143 28 is_stmt 0 view .LVU1439
 4042 099c B5F9D8E0 		ldrsh	lr, [r5, #216]
2143:Src/BLDC_controller.c ****         /* Switch: '<S43>/Switch' incorporates:
 4043              		.loc 1 2143 17 view .LVU1440
 4044 09a0 9645     		cmp	lr, r2
 4045 09a2 05DC     		bgt	.L271
2149:Src/BLDC_controller.c ****       }
 4046              		.loc 1 2149 24 view .LVU1441
 4047 09a4 9646     		mov	lr, r2
 4048 09a6 03E0     		b	.L271
 4049              	.LVL397:
 4050              	.L454:
2127:Src/BLDC_controller.c ****       } else {
 4051              		.loc 1 2127 9 is_stmt 1 view .LVU1442
2127:Src/BLDC_controller.c ****       } else {
 4052              		.loc 1 2127 25 is_stmt 0 view .LVU1443
 4053 09a8 B5F9D080 		ldrsh	r8, [r5, #208]
 4054              	.LVL398:
2127:Src/BLDC_controller.c ****       } else {
 4055              		.loc 1 2127 25 view .LVU1444
 4056 09ac F1E7     		b	.L270
 4057              	.L392:
2142:Src/BLDC_controller.c ****       } else if (Abs5 < rtP->n_fieldWeakAuthLo) {
 4058              		.loc 1 2142 24 view .LVU1445
 4059 09ae 8646     		mov	lr, r0
 4060              	.L271:
 4061              	.LVL399:
2167:Src/BLDC_controller.c ****         (DataTypeConversion2 - rtP->r_fieldWeakLo) << 15) / (int16_T)
 4062              		.loc 1 2167 7 is_stmt 1 view .LVU1446
2168:Src/BLDC_controller.c ****         (rtP->r_fieldWeakHi - rtP->r_fieldWeakLo)) * (uint16_T)(((int16_T)
 4063              		.loc 1 2168 35 is_stmt 0 view .LVU1447
 4064 09b0 B5F8E2C0 		ldrh	ip, [r5, #226]
2168:Src/BLDC_controller.c ****         (rtP->r_fieldWeakHi - rtP->r_fieldWeakLo)) * (uint16_T)(((int16_T)
 4065              		.loc 1 2168 30 view .LVU1448
 4066 09b4 A3EB0C03 		sub	r3, r3, ip
 4067              	.LVL400:
2167:Src/BLDC_controller.c ****         (DataTypeConversion2 - rtP->r_fieldWeakLo) << 15) / (int16_T)
 4068              		.loc 1 2167 68 view .LVU1449
 4069 09b8 1BB2     		sxth	r3, r3
2168:Src/BLDC_controller.c ****         (rtP->r_fieldWeakHi - rtP->r_fieldWeakLo)) * (uint16_T)(((int16_T)
 4070              		.loc 1 2168 52 view .LVU1450
 4071 09ba DB03     		lsls	r3, r3, #15
2169:Src/BLDC_controller.c ****         (rtb_Saturation - rtP->n_fieldWeakAuthLo) << 15) / (int16_T)
 4072              		.loc 1 2169 13 view .LVU1451
 4073 09bc 89B2     		uxth	r1, r1
2169:Src/BLDC_controller.c ****         (rtb_Saturation - rtP->n_fieldWeakAuthLo) << 15) / (int16_T)
 4074              		.loc 1 2169 29 view .LVU1452
ARM GAS  /tmp/ccVzdWer.s 			page 131


 4075 09be A1EB0C01 		sub	r1, r1, ip
2168:Src/BLDC_controller.c ****         (rtP->r_fieldWeakHi - rtP->r_fieldWeakLo)) * (uint16_T)(((int16_T)
 4076              		.loc 1 2168 61 view .LVU1453
 4077 09c2 09B2     		sxth	r1, r1
2168:Src/BLDC_controller.c ****         (rtP->r_fieldWeakHi - rtP->r_fieldWeakLo)) * (uint16_T)(((int16_T)
 4078              		.loc 1 2168 59 view .LVU1454
 4079 09c4 93FBF1F3 		sdiv	r3, r3, r1
2167:Src/BLDC_controller.c ****         (DataTypeConversion2 - rtP->r_fieldWeakLo) << 15) / (int16_T)
 4080              		.loc 1 2167 46 view .LVU1455
 4081 09c8 99B2     		uxth	r1, r3
2170:Src/BLDC_controller.c ****         (rtP->n_fieldWeakAuthHi - rtP->n_fieldWeakAuthLo))) >> 15) *
 4082              		.loc 1 2170 30 view .LVU1456
 4083 09ca B5F8D8C0 		ldrh	ip, [r5, #216]
2170:Src/BLDC_controller.c ****         (rtP->n_fieldWeakAuthHi - rtP->n_fieldWeakAuthLo))) >> 15) *
 4084              		.loc 1 2170 25 view .LVU1457
 4085 09ce AEEB0C03 		sub	r3, lr, ip
2169:Src/BLDC_controller.c ****         (rtb_Saturation - rtP->n_fieldWeakAuthLo) << 15) / (int16_T)
 4086              		.loc 1 2169 66 view .LVU1458
 4087 09d2 1BB2     		sxth	r3, r3
2170:Src/BLDC_controller.c ****         (rtP->n_fieldWeakAuthHi - rtP->n_fieldWeakAuthLo))) >> 15) *
 4088              		.loc 1 2170 51 view .LVU1459
 4089 09d4 DB03     		lsls	r3, r3, #15
2171:Src/BLDC_controller.c ****         rtb_Saturation1) >> 15);
 4090              		.loc 1 2171 13 view .LVU1460
 4091 09d6 80B2     		uxth	r0, r0
2171:Src/BLDC_controller.c ****         rtb_Saturation1) >> 15);
 4092              		.loc 1 2171 33 view .LVU1461
 4093 09d8 A0EB0C00 		sub	r0, r0, ip
2170:Src/BLDC_controller.c ****         (rtP->n_fieldWeakAuthHi - rtP->n_fieldWeakAuthLo))) >> 15) *
 4094              		.loc 1 2170 60 view .LVU1462
 4095 09dc 00B2     		sxth	r0, r0
2170:Src/BLDC_controller.c ****         (rtP->n_fieldWeakAuthHi - rtP->n_fieldWeakAuthLo))) >> 15) *
 4096              		.loc 1 2170 58 view .LVU1463
 4097 09de 93FBF0F3 		sdiv	r3, r3, r0
2169:Src/BLDC_controller.c ****         (rtb_Saturation - rtP->n_fieldWeakAuthLo) << 15) / (int16_T)
 4098              		.loc 1 2169 54 view .LVU1464
 4099 09e2 9BB2     		uxth	r3, r3
2169:Src/BLDC_controller.c ****         (rtb_Saturation - rtP->n_fieldWeakAuthLo) << 15) / (int16_T)
 4100              		.loc 1 2169 52 view .LVU1465
 4101 09e4 03FB01F3 		mul	r3, r3, r1
2167:Src/BLDC_controller.c ****         (DataTypeConversion2 - rtP->r_fieldWeakLo) << 15) / (int16_T)
 4102              		.loc 1 2167 34 view .LVU1466
 4103 09e8 C3F3CF33 		ubfx	r3, r3, #15, #16
2171:Src/BLDC_controller.c ****         rtb_Saturation1) >> 15);
 4104              		.loc 1 2171 68 view .LVU1467
 4105 09ec 03FB08F3 		mul	r3, r3, r8
2167:Src/BLDC_controller.c ****         (DataTypeConversion2 - rtP->r_fieldWeakLo) << 15) / (int16_T)
 4106              		.loc 1 2167 23 view .LVU1468
 4107 09f0 43F3CF33 		sbfx	r3, r3, #15, #16
2167:Src/BLDC_controller.c ****         (DataTypeConversion2 - rtP->r_fieldWeakLo) << 15) / (int16_T)
 4108              		.loc 1 2167 21 view .LVU1469
 4109 09f4 A4F87230 		strh	r3, [r4, #114]	@ movhi
 4110              	.LVL401:
 4111              	.L266:
2186:Src/BLDC_controller.c ****     UnitDelay3 = -1;
 4112              		.loc 1 2186 5 is_stmt 1 view .LVU1470
2186:Src/BLDC_controller.c ****     UnitDelay3 = -1;
ARM GAS  /tmp/ccVzdWer.s 			page 132


 4113              		.loc 1 2186 16 is_stmt 0 view .LVU1471
 4114 09f8 94F99520 		ldrsb	r2, [r4, #149]
 4115              	.LVL402:
2187:Src/BLDC_controller.c ****     if (rtP->z_ctrlTypSel == 2) {
 4116              		.loc 1 2187 5 is_stmt 1 view .LVU1472
2188:Src/BLDC_controller.c ****       UnitDelay3 = 0;
 4117              		.loc 1 2188 5 view .LVU1473
2188:Src/BLDC_controller.c ****       UnitDelay3 = 0;
 4118              		.loc 1 2188 12 is_stmt 0 view .LVU1474
 4119 09fc 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
2188:Src/BLDC_controller.c ****       UnitDelay3 = 0;
 4120              		.loc 1 2188 8 view .LVU1475
 4121 0a00 022B     		cmp	r3, #2
 4122 0a02 41D0     		beq	.L393
2187:Src/BLDC_controller.c ****     if (rtP->z_ctrlTypSel == 2) {
 4123              		.loc 1 2187 16 view .LVU1476
 4124 0a04 4FF0FF33 		mov	r3, #-1
 4125              	.L272:
 4126              	.LVL403:
2192:Src/BLDC_controller.c ****     if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 4127              		.loc 1 2192 5 is_stmt 1 view .LVU1477
2192:Src/BLDC_controller.c ****     if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 4128              		.loc 1 2192 33 is_stmt 0 view .LVU1478
 4129 0a08 84F89530 		strb	r3, [r4, #149]
2193:Src/BLDC_controller.c ****       /* Disable for SwitchCase: '<S80>/Switch Case' */
 4130              		.loc 1 2193 5 is_stmt 1 view .LVU1479
2193:Src/BLDC_controller.c ****       /* Disable for SwitchCase: '<S80>/Switch Case' */
 4131              		.loc 1 2193 8 is_stmt 0 view .LVU1480
 4132 0a0c 9342     		cmp	r3, r2
 4133 0a0e 03D0     		beq	.L273
2193:Src/BLDC_controller.c ****       /* Disable for SwitchCase: '<S80>/Switch Case' */
 4134              		.loc 1 2193 36 discriminator 1 view .LVU1481
 4135 0a10 12B9     		cbnz	r2, .L273
2195:Src/BLDC_controller.c ****     }
 4136              		.loc 1 2195 7 is_stmt 1 view .LVU1482
2195:Src/BLDC_controller.c ****     }
 4137              		.loc 1 2195 42 is_stmt 0 view .LVU1483
 4138 0a12 FF22     		movs	r2, #255
 4139              	.LVL404:
2195:Src/BLDC_controller.c ****     }
 4140              		.loc 1 2195 42 view .LVU1484
 4141 0a14 84F89620 		strb	r2, [r4, #150]
 4142              	.L273:
2198:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' incorporates:
 4143              		.loc 1 2198 5 is_stmt 1 view .LVU1485
2198:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' incorporates:
 4144              		.loc 1 2198 8 is_stmt 0 view .LVU1486
 4145 0a18 002B     		cmp	r3, #0
 4146 0a1a 7FF412AF 		bne	.L264
2202:Src/BLDC_controller.c **** 
 4147              		.loc 1 2202 7 is_stmt 1 view .LVU1487
2202:Src/BLDC_controller.c **** 
 4148              		.loc 1 2202 26 is_stmt 0 view .LVU1488
 4149 0a1e B5F91230 		ldrsh	r3, [r5, #18]
 4150              	.LVL405:
2202:Src/BLDC_controller.c **** 
 4151              		.loc 1 2202 21 view .LVU1489
ARM GAS  /tmp/ccVzdWer.s 			page 133


 4152 0a22 A4F85C30 		strh	r3, [r4, #92]	@ movhi
2207:Src/BLDC_controller.c **** 
 4153              		.loc 1 2207 7 is_stmt 1 view .LVU1490
2207:Src/BLDC_controller.c **** 
 4154              		.loc 1 2207 35 is_stmt 0 view .LVU1491
 4155 0a26 9BB2     		uxth	r3, r3
2207:Src/BLDC_controller.c **** 
 4156              		.loc 1 2207 21 view .LVU1492
 4157 0a28 5B42     		rsbs	r3, r3, #0
2207:Src/BLDC_controller.c **** 
 4158              		.loc 1 2207 19 view .LVU1493
 4159 0a2a A4F85E30 		strh	r3, [r4, #94]	@ movhi
2214:Src/BLDC_controller.c ****         rtb_Saturation1 = (int16_T)-rtDW->Switch1;
 4160              		.loc 1 2214 7 is_stmt 1 view .LVU1494
2214:Src/BLDC_controller.c ****         rtb_Saturation1 = (int16_T)-rtDW->Switch1;
 4161              		.loc 1 2214 15 is_stmt 0 view .LVU1495
 4162 0a2e B4F95A00 		ldrsh	r0, [r4, #90]
2214:Src/BLDC_controller.c ****         rtb_Saturation1 = (int16_T)-rtDW->Switch1;
 4163              		.loc 1 2214 10 view .LVU1496
 4164 0a32 0028     		cmp	r0, #0
 4165 0a34 2ADB     		blt	.L455
 4166              	.L274:
 4167              	.LVL406:
2220:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
 4168              		.loc 1 2220 7 is_stmt 1 view .LVU1497
2220:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
 4169              		.loc 1 2220 40 is_stmt 0 view .LVU1498
 4170 0a36 B5F97010 		ldrsh	r1, [r5, #112]
2221:Src/BLDC_controller.c ****         45U)];
 4171              		.loc 1 2221 53 view .LVU1499
 4172 0a3a B5F87220 		ldrh	r2, [r5, #114]
2221:Src/BLDC_controller.c ****         45U)];
 4173              		.loc 1 2221 73 view .LVU1500
 4174 0a3e 8BB2     		uxth	r3, r1
2220:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
 4175              		.loc 1 2220 40 view .LVU1501
 4176 0a40 D21A     		subs	r2, r2, r3
 4177 0a42 2D23     		movs	r3, #45
 4178 0a44 92B2     		uxth	r2, r2
 4179 0a46 FFF7FEFF 		bl	plook_u8s16_evencka
 4180              	.LVL407:
2220:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
 4181              		.loc 1 2220 39 view .LVU1502
 4182 0a4a 0830     		adds	r0, r0, #8
 4183 0a4c 05EB4000 		add	r0, r5, r0, lsl #1
 4184 0a50 B0F90430 		ldrsh	r3, [r0, #4]
2220:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
 4185              		.loc 1 2220 23 view .LVU1503
 4186 0a54 A4F86030 		strh	r3, [r4, #96]	@ movhi
2227:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
 4187              		.loc 1 2227 7 is_stmt 1 view .LVU1504
2227:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
 4188              		.loc 1 2227 35 is_stmt 0 view .LVU1505
 4189 0a58 9BB2     		uxth	r3, r3
2227:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
 4190              		.loc 1 2227 21 view .LVU1506
 4191 0a5a 5B42     		rsbs	r3, r3, #0
ARM GAS  /tmp/ccVzdWer.s 			page 134


2227:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
 4192              		.loc 1 2227 19 view .LVU1507
 4193 0a5c A4F86230 		strh	r3, [r4, #98]	@ movhi
2228:Src/BLDC_controller.c **** 
 4194              		.loc 1 2228 7 is_stmt 1 view .LVU1508
2228:Src/BLDC_controller.c **** 
 4195              		.loc 1 2228 24 is_stmt 0 view .LVU1509
 4196 0a60 B5F9CE80 		ldrsh	r8, [r5, #206]
2228:Src/BLDC_controller.c **** 
 4197              		.loc 1 2228 19 view .LVU1510
 4198 0a64 A4F86480 		strh	r8, [r4, #100]	@ movhi
2234:Src/BLDC_controller.c ****       rtb_Gain3 = (rtb_Gain3 == MIN_int32_T) && (rtDW->i_max == -1) ?
 4199              		.loc 1 2234 7 is_stmt 1 view .LVU1511
2234:Src/BLDC_controller.c ****       rtb_Gain3 = (rtb_Gain3 == MIN_int32_T) && (rtDW->i_max == -1) ?
 4200              		.loc 1 2234 23 is_stmt 0 view .LVU1512
 4201 0a68 B4F97200 		ldrsh	r0, [r4, #114]
2234:Src/BLDC_controller.c ****       rtb_Gain3 = (rtb_Gain3 == MIN_int32_T) && (rtDW->i_max == -1) ?
 4202              		.loc 1 2234 17 view .LVU1513
 4203 0a6c 0004     		lsls	r0, r0, #16
 4204              	.LVL408:
2235:Src/BLDC_controller.c ****         MAX_int32_T : rtb_Gain3 / rtDW->i_max;
 4205              		.loc 1 2235 7 is_stmt 1 view .LVU1514
2236:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
 4206              		.loc 1 2236 21 is_stmt 0 view .LVU1515
 4207 0a6e B0F1004F 		cmp	r0, #-2147483648
 4208 0a72 0FD0     		beq	.L456
 4209              	.L275:
2236:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
 4210              		.loc 1 2236 21 discriminator 1 view .LVU1516
 4211 0a74 90FBF8F0 		sdiv	r0, r0, r8
 4212              	.LVL409:
2237:Src/BLDC_controller.c ****         rtb_Gain3 = 0;
 4213              		.loc 1 2237 7 is_stmt 1 discriminator 1 view .LVU1517
2237:Src/BLDC_controller.c ****         rtb_Gain3 = 0;
 4214              		.loc 1 2237 10 is_stmt 0 discriminator 1 view .LVU1518
 4215 0a78 0028     		cmp	r0, #0
 4216 0a7a 11DB     		blt	.L457
 4217              	.LVL410:
 4218              	.L276:
2240:Src/BLDC_controller.c ****           rtb_Gain3 = 65535;
 4219              		.loc 1 2240 9 is_stmt 1 view .LVU1519
2240:Src/BLDC_controller.c ****           rtb_Gain3 = 65535;
 4220              		.loc 1 2240 12 is_stmt 0 view .LVU1520
 4221 0a7c B0F5803F 		cmp	r0, #65536
 4222 0a80 0FDB     		blt	.L277
2241:Src/BLDC_controller.c ****         }
 4223              		.loc 1 2241 21 view .LVU1521
 4224 0a82 4FF6FF70 		movw	r0, #65535
 4225 0a86 0CE0     		b	.L277
 4226              	.LVL411:
 4227              	.L393:
2189:Src/BLDC_controller.c ****     }
 4228              		.loc 1 2189 18 view .LVU1522
 4229 0a88 0023     		movs	r3, #0
 4230 0a8a BDE7     		b	.L272
 4231              	.LVL412:
 4232              	.L455:
ARM GAS  /tmp/ccVzdWer.s 			page 135


2215:Src/BLDC_controller.c ****       } else {
 4233              		.loc 1 2215 9 is_stmt 1 view .LVU1523
2215:Src/BLDC_controller.c ****       } else {
 4234              		.loc 1 2215 41 is_stmt 0 view .LVU1524
 4235 0a8c 80B2     		uxth	r0, r0
2215:Src/BLDC_controller.c ****       } else {
 4236              		.loc 1 2215 27 view .LVU1525
 4237 0a8e 4042     		rsbs	r0, r0, #0
2215:Src/BLDC_controller.c ****       } else {
 4238              		.loc 1 2215 25 view .LVU1526
 4239 0a90 00B2     		sxth	r0, r0
 4240              	.LVL413:
2215:Src/BLDC_controller.c ****       } else {
 4241              		.loc 1 2215 25 view .LVU1527
 4242 0a92 D0E7     		b	.L274
 4243              	.LVL414:
 4244              	.L456:
2235:Src/BLDC_controller.c ****         MAX_int32_T : rtb_Gain3 / rtDW->i_max;
 4245              		.loc 1 2235 46 view .LVU1528
 4246 0a94 B8F1FF3F 		cmp	r8, #-1
 4247 0a98 ECD1     		bne	.L275
2236:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
 4248              		.loc 1 2236 21 view .LVU1529
 4249 0a9a 6FF00040 		mvn	r0, #-2147483648
 4250              	.LVL415:
2236:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
 4251              		.loc 1 2236 21 view .LVU1530
 4252 0a9e EDE7     		b	.L276
 4253              	.LVL416:
 4254              	.L457:
2238:Src/BLDC_controller.c ****       } else {
 4255              		.loc 1 2238 19 view .LVU1531
 4256 0aa0 0020     		movs	r0, #0
 4257              	.LVL417:
 4258              	.L277:
2250:Src/BLDC_controller.c ****         ((rtConstP.iq_maxSca_M1_Table[plook_u8u16_evencka((uint16_T)rtb_Gain3,
 4259              		.loc 1 2250 7 is_stmt 1 view .LVU1532
2251:Src/BLDC_controller.c ****            0U, 1311U, 49U)] * rtDW->i_max) >> 16);
 4260              		.loc 1 2251 39 is_stmt 0 view .LVU1533
 4261 0aa2 3123     		movs	r3, #49
 4262 0aa4 40F21F52 		movw	r2, #1311
 4263 0aa8 0021     		movs	r1, #0
 4264 0aaa 80B2     		uxth	r0, r0
 4265              	.LVL418:
2251:Src/BLDC_controller.c ****            0U, 1311U, 49U)] * rtDW->i_max) >> 16);
 4266              		.loc 1 2251 39 view .LVU1534
 4267 0aac FFF7FEFF 		bl	plook_u8u16_evencka
 4268              	.LVL419:
2251:Src/BLDC_controller.c ****            0U, 1311U, 49U)] * rtDW->i_max) >> 16);
 4269              		.loc 1 2251 38 view .LVU1535
 4270 0ab0 00F56273 		add	r3, r0, #904
 4271 0ab4 1348     		ldr	r0, .L471+8
 4272 0ab6 00EB4300 		add	r0, r0, r3, lsl #1
 4273 0aba 4388     		ldrh	r3, [r0, #2]
2252:Src/BLDC_controller.c **** 
 4274              		.loc 1 2252 29 view .LVU1536
 4275 0abc 08FB03F8 		mul	r8, r8, r3
ARM GAS  /tmp/ccVzdWer.s 			page 136


2250:Src/BLDC_controller.c ****         ((rtConstP.iq_maxSca_M1_Table[plook_u8u16_evencka((uint16_T)rtb_Gain3,
 4276              		.loc 1 2250 25 view .LVU1537
 4277 0ac0 4FEA2848 		asr	r8, r8, #16
2250:Src/BLDC_controller.c ****         ((rtConstP.iq_maxSca_M1_Table[plook_u8u16_evencka((uint16_T)rtb_Gain3,
 4278              		.loc 1 2250 23 view .LVU1538
 4279 0ac4 A4F86680 		strh	r8, [r4, #102]	@ movhi
2255:Src/BLDC_controller.c **** 
 4280              		.loc 1 2255 7 is_stmt 1 view .LVU1539
2255:Src/BLDC_controller.c **** 
 4281              		.loc 1 2255 35 is_stmt 0 view .LVU1540
 4282 0ac8 1FFA88F3 		uxth	r3, r8
2255:Src/BLDC_controller.c **** 
 4283              		.loc 1 2255 21 view .LVU1541
 4284 0acc 5B42     		rsbs	r3, r3, #0
 4285 0ace 1BB2     		sxth	r3, r3
2255:Src/BLDC_controller.c **** 
 4286              		.loc 1 2255 19 view .LVU1542
 4287 0ad0 A4F86830 		strh	r3, [r4, #104]	@ movhi
2271:Src/BLDC_controller.c ****       UnitDelay3 = -1;
 4288              		.loc 1 2271 7 is_stmt 1 view .LVU1543
2271:Src/BLDC_controller.c ****       UnitDelay3 = -1;
 4289              		.loc 1 2271 18 is_stmt 0 view .LVU1544
 4290 0ad4 94F99610 		ldrsb	r1, [r4, #150]
 4291              	.LVL420:
2272:Src/BLDC_controller.c ****       switch (rtDW->z_ctrlMod) {
 4292              		.loc 1 2272 7 is_stmt 1 view .LVU1545
2273:Src/BLDC_controller.c ****        case 1:
 4293              		.loc 1 2273 7 view .LVU1546
2273:Src/BLDC_controller.c ****        case 1:
 4294              		.loc 1 2273 19 is_stmt 0 view .LVU1547
 4295 0ad8 94F89920 		ldrb	r2, [r4, #153]	@ zero_extendqisi2
2273:Src/BLDC_controller.c ****        case 1:
 4296              		.loc 1 2273 7 view .LVU1548
 4297 0adc 022A     		cmp	r2, #2
 4298 0ade 34D0     		beq	.L278
 4299 0ae0 032A     		cmp	r2, #3
 4300 0ae2 13D0     		beq	.L279
 4301 0ae4 012A     		cmp	r2, #1
 4302 0ae6 45D0     		beq	.L458
2287:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4303              		.loc 1 2287 7 is_stmt 1 view .LVU1549
2287:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4304              		.loc 1 2287 42 is_stmt 0 view .LVU1550
 4305 0ae8 FF23     		movs	r3, #255
 4306 0aea 84F89630 		strb	r3, [r4, #150]
2288:Src/BLDC_controller.c ****        case 0:
 4307              		.loc 1 2288 7 is_stmt 1 view .LVU1551
 4308              	.LVL421:
 4309              	.L288:
2395:Src/BLDC_controller.c **** 
 4310              		.loc 1 2395 7 view .LVU1552
2395:Src/BLDC_controller.c **** 
 4311              		.loc 1 2395 35 is_stmt 0 view .LVU1553
 4312 0aee B4F86430 		ldrh	r3, [r4, #100]
2395:Src/BLDC_controller.c **** 
 4313              		.loc 1 2395 21 view .LVU1554
 4314 0af2 5B42     		rsbs	r3, r3, #0
ARM GAS  /tmp/ccVzdWer.s 			page 137


2395:Src/BLDC_controller.c **** 
 4315              		.loc 1 2395 19 view .LVU1555
 4316 0af4 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 4317 0af8 A3E6     		b	.L264
 4318              	.L472:
 4319 0afa 00BF     		.align	2
 4320              	.L471:
 4321 0afc D34D6210 		.word	274877907
 4322 0b00 0080FFFF 		.word	-32768
 4323 0b04 00000000 		.word	rtConstP
 4324 0b08 80C1FFFF 		.word	-16000
 4325              	.LVL422:
 4326              	.L279:
2283:Src/BLDC_controller.c ****         break;
 4327              		.loc 1 2283 9 is_stmt 1 view .LVU1556
2284:Src/BLDC_controller.c ****       }
 4328              		.loc 1 2284 9 view .LVU1557
2287:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4329              		.loc 1 2287 7 view .LVU1558
2287:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4330              		.loc 1 2287 42 is_stmt 0 view .LVU1559
 4331 0b0c 0223     		movs	r3, #2
 4332 0b0e 84F89630 		strb	r3, [r4, #150]
2288:Src/BLDC_controller.c ****        case 0:
 4333              		.loc 1 2288 7 is_stmt 1 view .LVU1560
2362:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Torque_Mode_Protection' incorporates:
 4334              		.loc 1 2362 9 view .LVU1561
2362:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Torque_Mode_Protection' incorporates:
 4335              		.loc 1 2362 12 is_stmt 0 view .LVU1562
 4336 0b12 9942     		cmp	r1, r3
 4337 0b14 73D1     		bne	.L459
 4338              	.LVL423:
 4339              	.L283:
2382:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
 4340              		.loc 1 2382 9 is_stmt 1 view .LVU1563
2382:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
 4341              		.loc 1 2382 39 is_stmt 0 view .LVU1564
 4342 0b16 B5F8DA00 		ldrh	r0, [r5, #218]
2382:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
 4343              		.loc 1 2382 47 view .LVU1565
 4344 0b1a 079B     		ldr	r3, [sp, #28]
 4345 0b1c C01A     		subs	r0, r0, r3
2382:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
 4346              		.loc 1 2382 9 view .LVU1566
 4347 0b1e B4F96030 		ldrsh	r3, [r4, #96]
 4348 0b22 B5F8E420 		ldrh	r2, [r5, #228]
 4349 0b26 B5F8F610 		ldrh	r1, [r5, #246]
 4350 0b2a 04F1140C 		add	ip, r4, #20
 4351 0b2e CDF808C0 		str	ip, [sp, #8]
 4352 0b32 04F16C0C 		add	ip, r4, #108
 4353 0b36 CDF804C0 		str	ip, [sp, #4]
 4354 0b3a 4FF0000C 		mov	ip, #0
 4355 0b3e CDF800C0 		str	ip, [sp]
 4356 0b42 00B2     		sxth	r0, r0
 4357 0b44 FFF7FEFF 		bl	I_backCalc_fixdt
 4358              	.LVL424:
2389:Src/BLDC_controller.c ****       }
ARM GAS  /tmp/ccVzdWer.s 			page 138


 4359              		.loc 1 2389 9 is_stmt 1 view .LVU1567
 4360 0b48 D1E7     		b	.L288
 4361              	.LVL425:
 4362              	.L278:
2279:Src/BLDC_controller.c ****         break;
 4363              		.loc 1 2279 9 view .LVU1568
2280:Src/BLDC_controller.c **** 
 4364              		.loc 1 2280 9 view .LVU1569
2287:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4365              		.loc 1 2287 7 view .LVU1570
2287:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4366              		.loc 1 2287 42 is_stmt 0 view .LVU1571
 4367 0b4a 0122     		movs	r2, #1
 4368 0b4c 84F89620 		strb	r2, [r4, #150]
2288:Src/BLDC_controller.c ****        case 0:
 4369              		.loc 1 2288 7 is_stmt 1 view .LVU1572
2340:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Divide1_n;
 4370              		.loc 1 2340 9 view .LVU1573
2340:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Divide1_n;
 4371              		.loc 1 2340 37 is_stmt 0 view .LVU1574
 4372 0b50 B4F95220 		ldrsh	r2, [r4, #82]
2340:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Divide1_n;
 4373              		.loc 1 2340 12 view .LVU1575
 4374 0b54 9045     		cmp	r8, r2
 4375 0b56 02DB     		blt	.L284
2342:Src/BLDC_controller.c ****           /* Switch: '<S84>/Switch' */
 4376              		.loc 1 2342 16 is_stmt 1 view .LVU1576
2342:Src/BLDC_controller.c ****           /* Switch: '<S84>/Switch' */
 4377              		.loc 1 2342 19 is_stmt 0 view .LVU1577
 4378 0b58 9342     		cmp	r3, r2
 4379 0b5a 4EDD     		ble	.L397
2344:Src/BLDC_controller.c ****         } else {
 4380              		.loc 1 2344 27 view .LVU1578
 4381 0b5c 9846     		mov	r8, r3
 4382              	.L284:
 4383              	.LVL426:
2355:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4384              		.loc 1 2355 9 is_stmt 1 view .LVU1579
2355:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4385              		.loc 1 2355 77 is_stmt 0 view .LVU1580
 4386 0b5e 92B2     		uxth	r2, r2
2355:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4387              		.loc 1 2355 51 view .LVU1581
 4388 0b60 A8EB0208 		sub	r8, r8, r2
 4389              	.LVL427:
2355:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4390              		.loc 1 2355 25 view .LVU1582
 4391 0b64 0FFA88F8 		sxth	r8, r8
2356:Src/BLDC_controller.c **** 
 4392              		.loc 1 2356 16 view .LVU1583
 4393 0b68 B5F8F230 		ldrh	r3, [r5, #242]
2356:Src/BLDC_controller.c **** 
 4394              		.loc 1 2356 11 view .LVU1584
 4395 0b6c 03FB08F3 		mul	r3, r3, r8
2355:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4396              		.loc 1 2355 23 view .LVU1585
 4397 0b70 6364     		str	r3, [r4, #68]
ARM GAS  /tmp/ccVzdWer.s 			page 139


2359:Src/BLDC_controller.c **** 
 4398              		.loc 1 2359 9 is_stmt 1 view .LVU1586
 4399 0b72 BCE7     		b	.L288
 4400              	.LVL428:
 4401              	.L458:
2275:Src/BLDC_controller.c ****         break;
 4402              		.loc 1 2275 9 view .LVU1587
2276:Src/BLDC_controller.c **** 
 4403              		.loc 1 2276 9 view .LVU1588
2287:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4404              		.loc 1 2287 7 view .LVU1589
2287:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4405              		.loc 1 2287 42 is_stmt 0 view .LVU1590
 4406 0b74 0023     		movs	r3, #0
 4407 0b76 84F89630 		strb	r3, [r4, #150]
2288:Src/BLDC_controller.c ****        case 0:
 4408              		.loc 1 2288 7 is_stmt 1 view .LVU1591
2290:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' incorporates:
 4409              		.loc 1 2290 9 view .LVU1592
2290:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' incorporates:
 4410              		.loc 1 2290 12 is_stmt 0 view .LVU1593
 4411 0b7a 89BB     		cbnz	r1, .L460
 4412              	.LVL429:
 4413              	.L287:
2315:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4414              		.loc 1 2315 9 is_stmt 1 view .LVU1594
2315:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4415              		.loc 1 2315 40 is_stmt 0 view .LVU1595
 4416 0b7c B4F86630 		ldrh	r3, [r4, #102]
2315:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4417              		.loc 1 2315 58 view .LVU1596
 4418 0b80 B4F87800 		ldrh	r0, [r4, #120]
2315:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4419              		.loc 1 2315 52 view .LVU1597
 4420 0b84 181A     		subs	r0, r3, r0
2315:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4421              		.loc 1 2315 9 view .LVU1598
 4422 0b86 B4F97630 		ldrsh	r3, [r4, #118]
 4423 0b8a B5F8E420 		ldrh	r2, [r5, #228]
 4424 0b8e B5F8F210 		ldrh	r1, [r5, #242]
 4425 0b92 04F1240C 		add	ip, r4, #36
 4426 0b96 CDF808C0 		str	ip, [sp, #8]
 4427 0b9a 04F1700C 		add	ip, r4, #112
 4428 0b9e CDF804C0 		str	ip, [sp, #4]
 4429 0ba2 4FF00008 		mov	r8, #0
 4430 0ba6 CDF80080 		str	r8, [sp]
 4431 0baa 00B2     		sxth	r0, r0
 4432 0bac FFF7FEFF 		bl	I_backCalc_fixdt
 4433              	.LVL430:
2322:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
 4434              		.loc 1 2322 9 is_stmt 1 view .LVU1599
2322:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
 4435              		.loc 1 2322 39 is_stmt 0 view .LVU1600
 4436 0bb0 B5F8DA00 		ldrh	r0, [r5, #218]
2322:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
 4437              		.loc 1 2322 47 view .LVU1601
 4438 0bb4 079B     		ldr	r3, [sp, #28]
ARM GAS  /tmp/ccVzdWer.s 			page 140


 4439 0bb6 C01A     		subs	r0, r0, r3
2322:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
 4440              		.loc 1 2322 9 view .LVU1602
 4441 0bb8 B4F97630 		ldrsh	r3, [r4, #118]
 4442 0bbc B5F8E420 		ldrh	r2, [r5, #228]
 4443 0bc0 B5F8F610 		ldrh	r1, [r5, #246]
 4444 0bc4 04F11C0C 		add	ip, r4, #28
 4445 0bc8 CDF808C0 		str	ip, [sp, #8]
 4446 0bcc 04F16E0C 		add	ip, r4, #110
 4447 0bd0 CDF804C0 		str	ip, [sp, #4]
 4448 0bd4 CDF80080 		str	r8, [sp]
 4449 0bd8 00B2     		sxth	r0, r0
 4450 0bda FFF7FEFF 		bl	I_backCalc_fixdt
 4451              	.LVL431:
2329:Src/BLDC_controller.c **** 
 4452              		.loc 1 2329 9 is_stmt 1 view .LVU1603
 4453 0bde 86E7     		b	.L288
 4454              	.LVL432:
 4455              	.L460:
2298:Src/BLDC_controller.c **** 
 4456              		.loc 1 2298 11 view .LVU1604
 4457 0be0 4FF07A71 		mov	r1, #65536000
 4458              	.LVL433:
2298:Src/BLDC_controller.c **** 
 4459              		.loc 1 2298 11 is_stmt 0 view .LVU1605
 4460 0be4 04F12400 		add	r0, r4, #36
 4461 0be8 FFF7FEFF 		bl	I_backCalc_fixdt_Reset
 4462              	.LVL434:
2303:Src/BLDC_controller.c **** 
 4463              		.loc 1 2303 11 is_stmt 1 view .LVU1606
 4464 0bec 4FF07A71 		mov	r1, #65536000
 4465 0bf0 04F11C00 		add	r0, r4, #28
 4466 0bf4 FFF7FEFF 		bl	I_backCalc_fixdt_Reset
 4467              	.LVL435:
 4468 0bf8 C0E7     		b	.L287
 4469              	.LVL436:
 4470              	.L397:
2346:Src/BLDC_controller.c ****         }
 4471              		.loc 1 2346 27 is_stmt 0 view .LVU1607
 4472 0bfa 9046     		mov	r8, r2
 4473 0bfc AFE7     		b	.L284
 4474              	.LVL437:
 4475              	.L459:
2370:Src/BLDC_controller.c **** 
 4476              		.loc 1 2370 11 is_stmt 1 view .LVU1608
 4477 0bfe 4FF06171 		mov	r1, #58982400
 4478              	.LVL438:
2370:Src/BLDC_controller.c **** 
 4479              		.loc 1 2370 11 is_stmt 0 view .LVU1609
 4480 0c02 04F11400 		add	r0, r4, #20
 4481 0c06 FFF7FEFF 		bl	I_backCalc_fixdt_Reset
 4482              	.LVL439:
 4483 0c0a 84E7     		b	.L283
 4484              	.LVL440:
 4485              	.L265:
2403:Src/BLDC_controller.c ****       /* Outputs for Function Call SubSystem: '<S7>/FOC' */
 4486              		.loc 1 2403 5 is_stmt 1 view .LVU1610
ARM GAS  /tmp/ccVzdWer.s 			page 141


2403:Src/BLDC_controller.c ****       /* Outputs for Function Call SubSystem: '<S7>/FOC' */
 4487              		.loc 1 2403 13 is_stmt 0 view .LVU1611
 4488 0c0c 94F8A530 		ldrb	r3, [r4, #165]	@ zero_extendqisi2
2403:Src/BLDC_controller.c ****       /* Outputs for Function Call SubSystem: '<S7>/FOC' */
 4489              		.loc 1 2403 8 view .LVU1612
 4490 0c10 002B     		cmp	r3, #0
 4491 0c12 3FF416AE 		beq	.L264
2408:Src/BLDC_controller.c ****       UnitDelay3 = -1;
 4492              		.loc 1 2408 7 is_stmt 1 view .LVU1613
2408:Src/BLDC_controller.c ****       UnitDelay3 = -1;
 4493              		.loc 1 2408 18 is_stmt 0 view .LVU1614
 4494 0c16 94F99220 		ldrsb	r2, [r4, #146]
 4495              	.LVL441:
2409:Src/BLDC_controller.c ****       if (rtP->z_ctrlTypSel == 2) {
 4496              		.loc 1 2409 7 is_stmt 1 view .LVU1615
2410:Src/BLDC_controller.c ****         UnitDelay3 = 0;
 4497              		.loc 1 2410 7 view .LVU1616
2410:Src/BLDC_controller.c ****         UnitDelay3 = 0;
 4498              		.loc 1 2410 14 is_stmt 0 view .LVU1617
 4499 0c1a 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
2410:Src/BLDC_controller.c ****         UnitDelay3 = 0;
 4500              		.loc 1 2410 10 view .LVU1618
 4501 0c1e 022B     		cmp	r3, #2
 4502 0c20 20D0     		beq	.L398
2409:Src/BLDC_controller.c ****       if (rtP->z_ctrlTypSel == 2) {
 4503              		.loc 1 2409 18 view .LVU1619
 4504 0c22 4FF0FF33 		mov	r3, #-1
 4505              	.L289:
 4506              	.LVL442:
2414:Src/BLDC_controller.c ****       if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 4507              		.loc 1 2414 7 is_stmt 1 view .LVU1620
2414:Src/BLDC_controller.c ****       if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 4508              		.loc 1 2414 35 is_stmt 0 view .LVU1621
 4509 0c26 84F89230 		strb	r3, [r4, #146]
2415:Src/BLDC_controller.c ****         /* Disable for SwitchCase: '<S59>/Switch Case' */
 4510              		.loc 1 2415 7 is_stmt 1 view .LVU1622
2415:Src/BLDC_controller.c ****         /* Disable for SwitchCase: '<S59>/Switch Case' */
 4511              		.loc 1 2415 10 is_stmt 0 view .LVU1623
 4512 0c2a 9342     		cmp	r3, r2
 4513 0c2c 05D0     		beq	.L290
2415:Src/BLDC_controller.c ****         /* Disable for SwitchCase: '<S59>/Switch Case' */
 4514              		.loc 1 2415 38 discriminator 1 view .LVU1624
 4515 0c2e 22B9     		cbnz	r2, .L290
2417:Src/BLDC_controller.c **** 
 4516              		.loc 1 2417 9 is_stmt 1 view .LVU1625
2417:Src/BLDC_controller.c **** 
 4517              		.loc 1 2417 42 is_stmt 0 view .LVU1626
 4518 0c30 FF22     		movs	r2, #255
 4519              	.LVL443:
2417:Src/BLDC_controller.c **** 
 4520              		.loc 1 2417 42 view .LVU1627
 4521 0c32 84F89320 		strb	r2, [r4, #147]
2420:Src/BLDC_controller.c ****       }
 4522              		.loc 1 2420 9 is_stmt 1 view .LVU1628
2420:Src/BLDC_controller.c ****       }
 4523              		.loc 1 2420 37 is_stmt 0 view .LVU1629
 4524 0c36 84F89420 		strb	r2, [r4, #148]
ARM GAS  /tmp/ccVzdWer.s 			page 142


 4525              	.L290:
2423:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S47>/FOC_Enabled' incorporates:
 4526              		.loc 1 2423 7 is_stmt 1 view .LVU1630
2423:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S47>/FOC_Enabled' incorporates:
 4527              		.loc 1 2423 10 is_stmt 0 view .LVU1631
 4528 0c3a 002B     		cmp	r3, #0
 4529 0c3c 7FF401AE 		bne	.L264
2434:Src/BLDC_controller.c ****         switch (rtDW->z_ctrlMod) {
 4530              		.loc 1 2434 9 is_stmt 1 view .LVU1632
2434:Src/BLDC_controller.c ****         switch (rtDW->z_ctrlMod) {
 4531              		.loc 1 2434 20 is_stmt 0 view .LVU1633
 4532 0c40 94F99310 		ldrsb	r1, [r4, #147]
 4533              	.LVL444:
2435:Src/BLDC_controller.c ****          case 1:
 4534              		.loc 1 2435 9 is_stmt 1 view .LVU1634
2435:Src/BLDC_controller.c ****          case 1:
 4535              		.loc 1 2435 21 is_stmt 0 view .LVU1635
 4536 0c44 94F89920 		ldrb	r2, [r4, #153]	@ zero_extendqisi2
2435:Src/BLDC_controller.c ****          case 1:
 4537              		.loc 1 2435 9 view .LVU1636
 4538 0c48 022A     		cmp	r2, #2
 4539 0c4a 31D0     		beq	.L291
 4540 0c4c 032A     		cmp	r2, #3
 4541 0c4e 0BD0     		beq	.L292
 4542 0c50 012A     		cmp	r2, #1
 4543 0c52 4BD0     		beq	.L293
2448:Src/BLDC_controller.c ****           break;
 4544              		.loc 1 2448 11 is_stmt 1 view .LVU1637
 4545              	.LVL445:
2449:Src/BLDC_controller.c ****         }
 4546              		.loc 1 2449 11 view .LVU1638
2452:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4547              		.loc 1 2452 9 view .LVU1639
2452:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4548              		.loc 1 2452 42 is_stmt 0 view .LVU1640
 4549 0c54 0323     		movs	r3, #3
 4550 0c56 84F89330 		strb	r3, [r4, #147]
2453:Src/BLDC_controller.c ****          case 0:
 4551              		.loc 1 2453 9 is_stmt 1 view .LVU1641
 4552              	.LVL446:
 4553              	.L294:
2688:Src/BLDC_controller.c **** 
 4554              		.loc 1 2688 11 view .LVU1642
2688:Src/BLDC_controller.c **** 
 4555              		.loc 1 2688 29 is_stmt 0 view .LVU1643
 4556 0c5a B4F97430 		ldrsh	r3, [r4, #116]
2688:Src/BLDC_controller.c **** 
 4557              		.loc 1 2688 23 view .LVU1644
 4558 0c5e A4F85830 		strh	r3, [r4, #88]	@ movhi
2691:Src/BLDC_controller.c ****         }
 4559              		.loc 1 2691 11 is_stmt 1 view .LVU1645
 4560 0c62 C8E0     		b	.L297
 4561              	.LVL447:
 4562              	.L398:
2411:Src/BLDC_controller.c ****       }
 4563              		.loc 1 2411 20 is_stmt 0 view .LVU1646
 4564 0c64 0023     		movs	r3, #0
ARM GAS  /tmp/ccVzdWer.s 			page 143


 4565 0c66 DEE7     		b	.L289
 4566              	.LVL448:
 4567              	.L292:
2444:Src/BLDC_controller.c ****           break;
 4568              		.loc 1 2444 11 is_stmt 1 view .LVU1647
2445:Src/BLDC_controller.c **** 
 4569              		.loc 1 2445 11 view .LVU1648
2452:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4570              		.loc 1 2452 9 view .LVU1649
2452:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4571              		.loc 1 2452 42 is_stmt 0 view .LVU1650
 4572 0c68 0223     		movs	r3, #2
 4573 0c6a 84F89330 		strb	r3, [r4, #147]
2453:Src/BLDC_controller.c ****          case 0:
 4574              		.loc 1 2453 9 is_stmt 1 view .LVU1651
 4575              	.LVL449:
 4576              	.L295:
2602:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Torque_Mode' incorporates:
 4577              		.loc 1 2602 11 view .LVU1652
2602:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Torque_Mode' incorporates:
 4578              		.loc 1 2602 14 is_stmt 0 view .LVU1653
 4579 0c6e 8B42     		cmp	r3, r1
 4580 0c70 40F0E380 		bne	.L461
 4581              	.LVL450:
 4582              	.L314:
2621:Src/BLDC_controller.c **** 
 4583              		.loc 1 2621 11 is_stmt 1 view .LVU1654
2621:Src/BLDC_controller.c **** 
 4584              		.loc 1 2621 42 is_stmt 0 view .LVU1655
 4585 0c74 B4F96C80 		ldrsh	r8, [r4, #108]
 4586 0c78 1FFA88F3 		uxth	r3, r8
2621:Src/BLDC_controller.c **** 
 4587              		.loc 1 2621 28 view .LVU1656
 4588 0c7c 5B42     		rsbs	r3, r3, #0
2621:Src/BLDC_controller.c **** 
 4589              		.loc 1 2621 26 view .LVU1657
 4590 0c7e 1BB2     		sxth	r3, r3
 4591              	.LVL451:
2628:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
 4592              		.loc 1 2628 11 is_stmt 1 view .LVU1658
2628:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
 4593              		.loc 1 2628 19 is_stmt 0 view .LVU1659
 4594 0c80 B4F97420 		ldrsh	r2, [r4, #116]
2628:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
 4595              		.loc 1 2628 34 view .LVU1660
 4596 0c84 B4F96600 		ldrsh	r0, [r4, #102]
2628:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
 4597              		.loc 1 2628 14 view .LVU1661
 4598 0c88 8242     		cmp	r2, r0
 4599 0c8a 04DC     		bgt	.L315
2630:Src/BLDC_controller.c ****             /* Switch: '<S70>/Switch' */
 4600              		.loc 1 2630 18 is_stmt 1 view .LVU1662
2630:Src/BLDC_controller.c ****             /* Switch: '<S70>/Switch' */
 4601              		.loc 1 2630 41 is_stmt 0 view .LVU1663
 4602 0c8c B4F96800 		ldrsh	r0, [r4, #104]
2630:Src/BLDC_controller.c ****             /* Switch: '<S70>/Switch' */
 4603              		.loc 1 2630 21 view .LVU1664
ARM GAS  /tmp/ccVzdWer.s 			page 144


 4604 0c90 8242     		cmp	r2, r0
 4605 0c92 00DB     		blt	.L315
2634:Src/BLDC_controller.c ****           }
 4606              		.loc 1 2634 29 view .LVU1665
 4607 0c94 1046     		mov	r0, r2
 4608              	.L315:
 4609              	.LVL452:
2640:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4610              		.loc 1 2640 11 is_stmt 1 view .LVU1666
2640:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4611              		.loc 1 2640 65 is_stmt 0 view .LVU1667
 4612 0c96 B4F95220 		ldrsh	r2, [r4, #82]
2640:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4613              		.loc 1 2640 21 view .LVU1668
 4614 0c9a 801A     		subs	r0, r0, r2
 4615              	.LVL453:
2641:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4616              		.loc 1 2641 11 is_stmt 1 view .LVU1669
2641:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4617              		.loc 1 2641 14 is_stmt 0 view .LVU1670
 4618 0c9c B0F5004F 		cmp	r0, #32768
 4619 0ca0 80F2CF80 		bge	.L403
2644:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4620              		.loc 1 2644 13 is_stmt 1 view .LVU1671
2644:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4621              		.loc 1 2644 16 is_stmt 0 view .LVU1672
 4622 0ca4 10F5004F 		cmn	r0, #32768
 4623 0ca8 80F2CD80 		bge	.L316
2645:Src/BLDC_controller.c ****             }
 4624              		.loc 1 2645 25 view .LVU1673
 4625 0cac C648     		ldr	r0, .L473
 4626              	.LVL454:
2645:Src/BLDC_controller.c ****             }
 4627              		.loc 1 2645 25 view .LVU1674
 4628 0cae CAE0     		b	.L316
 4629              	.LVL455:
 4630              	.L291:
2440:Src/BLDC_controller.c ****           break;
 4631              		.loc 1 2440 11 is_stmt 1 view .LVU1675
2441:Src/BLDC_controller.c **** 
 4632              		.loc 1 2441 11 view .LVU1676
2452:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4633              		.loc 1 2452 9 view .LVU1677
2452:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4634              		.loc 1 2452 42 is_stmt 0 view .LVU1678
 4635 0cb0 0123     		movs	r3, #1
 4636 0cb2 84F89330 		strb	r3, [r4, #147]
2453:Src/BLDC_controller.c ****          case 0:
 4637              		.loc 1 2453 9 is_stmt 1 view .LVU1679
 4638              	.LVL456:
 4639              	.L296:
2508:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Speed_Mode' incorporates:
 4640              		.loc 1 2508 11 view .LVU1680
2508:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Speed_Mode' incorporates:
 4641              		.loc 1 2508 14 is_stmt 0 view .LVU1681
 4642 0cb6 8B42     		cmp	r3, r1
 4643 0cb8 53D1     		bne	.L462
ARM GAS  /tmp/ccVzdWer.s 			page 145


 4644              	.LVL457:
 4645              	.L305:
2529:Src/BLDC_controller.c **** 
 4646              		.loc 1 2529 11 is_stmt 1 view .LVU1682
2529:Src/BLDC_controller.c **** 
 4647              		.loc 1 2529 41 is_stmt 0 view .LVU1683
 4648 0cba B5F90800 		ldrsh	r0, [r5, #8]
2529:Src/BLDC_controller.c **** 
 4649              		.loc 1 2529 58 view .LVU1684
 4650 0cbe 0001     		lsls	r0, r0, #4
2529:Src/BLDC_controller.c **** 
 4651              		.loc 1 2529 26 view .LVU1685
 4652 0cc0 00B2     		sxth	r0, r0
 4653              	.LVL458:
2536:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
 4654              		.loc 1 2536 11 is_stmt 1 view .LVU1686
2536:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
 4655              		.loc 1 2536 18 is_stmt 0 view .LVU1687
 4656 0cc2 95F8FC30 		ldrb	r3, [r5, #252]	@ zero_extendqisi2
2536:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
 4657              		.loc 1 2536 14 view .LVU1688
 4658 0cc6 002B     		cmp	r3, #0
 4659 0cc8 62D0     		beq	.L306
2536:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
 4660              		.loc 1 2536 36 discriminator 1 view .LVU1689
 4661 0cca 0028     		cmp	r0, #0
 4662 0ccc 60D0     		beq	.L306
2540:Src/BLDC_controller.c ****               rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
 4663              		.loc 1 2540 13 is_stmt 1 view .LVU1690
2540:Src/BLDC_controller.c ****               rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
 4664              		.loc 1 2540 16 is_stmt 0 view .LVU1691
 4665 0cce 0028     		cmp	r0, #0
 4666 0cd0 4EDD     		ble	.L307
2541:Src/BLDC_controller.c **** 
 4667              		.loc 1 2541 15 is_stmt 1 view .LVU1692
2541:Src/BLDC_controller.c **** 
 4668              		.loc 1 2541 56 is_stmt 0 view .LVU1693
 4669 0cd2 B4F96020 		ldrsh	r2, [r4, #96]
2541:Src/BLDC_controller.c **** 
 4670              		.loc 1 2541 50 view .LVU1694
 4671 0cd6 ADF84820 		strh	r2, [sp, #72]	@ movhi
2544:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
 4672              		.loc 1 2544 15 is_stmt 1 view .LVU1695
2544:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
 4673              		.loc 1 2544 23 is_stmt 0 view .LVU1696
 4674 0cda B4F97410 		ldrsh	r1, [r4, #116]
2544:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
 4675              		.loc 1 2544 38 view .LVU1697
 4676 0cde B4F96220 		ldrsh	r2, [r4, #98]
2544:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
 4677              		.loc 1 2544 18 view .LVU1698
 4678 0ce2 9142     		cmp	r1, r2
 4679 0ce4 41DD     		ble	.L308
2545:Src/BLDC_controller.c ****               } else {
 4680              		.loc 1 2545 17 is_stmt 1 view .LVU1699
2545:Src/BLDC_controller.c ****               } else {
 4681              		.loc 1 2545 52 is_stmt 0 view .LVU1700
ARM GAS  /tmp/ccVzdWer.s 			page 146


 4682 0ce6 ADF84A10 		strh	r1, [sp, #74]	@ movhi
 4683 0cea 59E0     		b	.L309
 4684              	.LVL459:
 4685              	.L293:
2452:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4686              		.loc 1 2452 9 is_stmt 1 view .LVU1701
2452:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4687              		.loc 1 2452 42 is_stmt 0 view .LVU1702
 4688 0cec 84F89330 		strb	r3, [r4, #147]
2453:Src/BLDC_controller.c ****          case 0:
 4689              		.loc 1 2453 9 is_stmt 1 view .LVU1703
 4690 0cf0 032B     		cmp	r3, #3
 4691 0cf2 00F28080 		bhi	.L297
 4692 0cf6 01A2     		adr	r2, .L298
 4693 0cf8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4694              		.p2align 2
 4695              	.L298:
 4696 0cfc 0D0D0000 		.word	.L299+1
 4697 0d00 B70C0000 		.word	.L296+1
 4698 0d04 6F0C0000 		.word	.L295+1
 4699 0d08 5B0C0000 		.word	.L294+1
 4700              		.p2align 1
 4701              	.L299:
2459:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
 4702              		.loc 1 2459 11 view .LVU1704
2459:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
 4703              		.loc 1 2459 19 is_stmt 0 view .LVU1705
 4704 0d0c B4F97630 		ldrsh	r3, [r4, #118]
 4705              	.LVL460:
2459:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
 4706              		.loc 1 2459 32 view .LVU1706
 4707 0d10 B4F97020 		ldrsh	r2, [r4, #112]
2459:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
 4708              		.loc 1 2459 14 view .LVU1707
 4709 0d14 9342     		cmp	r3, r2
 4710 0d16 00DA     		bge	.L300
2460:Src/BLDC_controller.c ****           } else {
 4711              		.loc 1 2460 33 view .LVU1708
 4712 0d18 1A46     		mov	r2, r3
 4713              	.L300:
 4714              	.LVL461:
2465:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_o;
 4715              		.loc 1 2465 11 is_stmt 1 view .LVU1709
2465:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_o;
 4716              		.loc 1 2465 43 is_stmt 0 view .LVU1710
 4717 0d1a B4F96E30 		ldrsh	r3, [r4, #110]
2465:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_o;
 4718              		.loc 1 2465 14 view .LVU1711
 4719 0d1e 9342     		cmp	r3, r2
 4720 0d20 00DD     		ble	.L301
 4721 0d22 1346     		mov	r3, r2
 4722              	.L301:
 4723              	.LVL462:
2472:Src/BLDC_controller.c ****             rtb_Saturation1 = -1;
 4724              		.loc 1 2472 11 is_stmt 1 view .LVU1712
2472:Src/BLDC_controller.c ****             rtb_Saturation1 = -1;
 4725              		.loc 1 2472 19 is_stmt 0 view .LVU1713
ARM GAS  /tmp/ccVzdWer.s 			page 147


 4726 0d24 B4F97420 		ldrsh	r2, [r4, #116]
2472:Src/BLDC_controller.c ****             rtb_Saturation1 = -1;
 4727              		.loc 1 2472 14 view .LVU1714
 4728 0d28 002A     		cmp	r2, #0
 4729 0d2a 0DDB     		blt	.L399
2475:Src/BLDC_controller.c ****           }
 4730              		.loc 1 2475 13 is_stmt 1 view .LVU1715
2475:Src/BLDC_controller.c ****           }
 4731              		.loc 1 2475 29 is_stmt 0 view .LVU1716
 4732 0d2c 002A     		cmp	r2, #0
 4733 0d2e D4BF     		ite	le
 4734 0d30 0022     		movle	r2, #0
 4735 0d32 0122     		movgt	r2, #1
 4736              	.LVL463:
 4737              	.L302:
2481:Src/BLDC_controller.c **** 
 4738              		.loc 1 2481 11 is_stmt 1 view .LVU1717
2481:Src/BLDC_controller.c **** 
 4739              		.loc 1 2481 58 is_stmt 0 view .LVU1718
 4740 0d34 03FB02F3 		mul	r3, r3, r2
 4741              	.LVL464:
2481:Src/BLDC_controller.c **** 
 4742              		.loc 1 2481 26 view .LVU1719
 4743 0d38 1BB2     		sxth	r3, r3
 4744              	.LVL465:
2488:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' */
 4745              		.loc 1 2488 11 is_stmt 1 view .LVU1720
2488:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' */
 4746              		.loc 1 2488 36 is_stmt 0 view .LVU1721
 4747 0d3a B4F96020 		ldrsh	r2, [r4, #96]
 4748              	.LVL466:
2488:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' */
 4749              		.loc 1 2488 14 view .LVU1722
 4750 0d3e 9A42     		cmp	r2, r3
 4751 0d40 05DA     		bge	.L303
2490:Src/BLDC_controller.c ****           } else if (rtb_Saturation < rtDW->Gain5) {
 4752              		.loc 1 2490 13 is_stmt 1 view .LVU1723
2490:Src/BLDC_controller.c ****           } else if (rtb_Saturation < rtDW->Gain5) {
 4753              		.loc 1 2490 25 is_stmt 0 view .LVU1724
 4754 0d42 A4F85820 		strh	r2, [r4, #88]	@ movhi
 4755 0d46 56E0     		b	.L297
 4756              	.LVL467:
 4757              	.L399:
2473:Src/BLDC_controller.c ****           } else {
 4758              		.loc 1 2473 29 view .LVU1725
 4759 0d48 4FF0FF32 		mov	r2, #-1
 4760 0d4c F2E7     		b	.L302
 4761              	.LVL468:
 4762              	.L303:
2491:Src/BLDC_controller.c ****             /* Switch: '<S79>/Switch' incorporates:
 4763              		.loc 1 2491 18 is_stmt 1 view .LVU1726
2491:Src/BLDC_controller.c ****             /* Switch: '<S79>/Switch' incorporates:
 4764              		.loc 1 2491 43 is_stmt 0 view .LVU1727
 4765 0d4e B4F96220 		ldrsh	r2, [r4, #98]
2491:Src/BLDC_controller.c ****             /* Switch: '<S79>/Switch' incorporates:
 4766              		.loc 1 2491 21 view .LVU1728
 4767 0d52 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccVzdWer.s 			page 148


 4768 0d54 02DD     		ble	.L304
2495:Src/BLDC_controller.c ****           } else {
 4769              		.loc 1 2495 13 is_stmt 1 view .LVU1729
2495:Src/BLDC_controller.c ****           } else {
 4770              		.loc 1 2495 25 is_stmt 0 view .LVU1730
 4771 0d56 A4F85820 		strh	r2, [r4, #88]	@ movhi
 4772 0d5a 4CE0     		b	.L297
 4773              	.L304:
2500:Src/BLDC_controller.c ****           }
 4774              		.loc 1 2500 13 is_stmt 1 view .LVU1731
2500:Src/BLDC_controller.c ****           }
 4775              		.loc 1 2500 25 is_stmt 0 view .LVU1732
 4776 0d5c A4F85830 		strh	r3, [r4, #88]	@ movhi
 4777 0d60 49E0     		b	.L297
 4778              	.LVL469:
 4779              	.L462:
2516:Src/BLDC_controller.c **** 
 4780              		.loc 1 2516 13 is_stmt 1 view .LVU1733
 4781 0d62 201D     		adds	r0, r4, #4
 4782 0d64 FFF7FEFF 		bl	PI_clamp_fixdt_b_Reset
 4783              	.LVL470:
2516:Src/BLDC_controller.c **** 
 4784              		.loc 1 2516 13 is_stmt 0 view .LVU1734
 4785 0d68 A7E7     		b	.L305
 4786              	.LVL471:
 4787              	.L308:
2547:Src/BLDC_controller.c ****               }
 4788              		.loc 1 2547 17 is_stmt 1 view .LVU1735
2547:Src/BLDC_controller.c ****               }
 4789              		.loc 1 2547 52 is_stmt 0 view .LVU1736
 4790 0d6a ADF84A20 		strh	r2, [sp, #74]	@ movhi
 4791 0d6e 17E0     		b	.L309
 4792              	.L307:
2552:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
 4793              		.loc 1 2552 15 is_stmt 1 view .LVU1737
2552:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
 4794              		.loc 1 2552 23 is_stmt 0 view .LVU1738
 4795 0d70 B4F96010 		ldrsh	r1, [r4, #96]
2552:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
 4796              		.loc 1 2552 41 view .LVU1739
 4797 0d74 B4F97420 		ldrsh	r2, [r4, #116]
2552:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
 4798              		.loc 1 2552 18 view .LVU1740
 4799 0d78 9142     		cmp	r1, r2
 4800 0d7a 06DA     		bge	.L310
2554:Src/BLDC_controller.c ****               } else {
 4801              		.loc 1 2554 17 is_stmt 1 view .LVU1741
2554:Src/BLDC_controller.c ****               } else {
 4802              		.loc 1 2554 52 is_stmt 0 view .LVU1742
 4803 0d7c ADF84810 		strh	r1, [sp, #72]	@ movhi
 4804              	.L311:
2559:Src/BLDC_controller.c ****             }
 4805              		.loc 1 2559 15 is_stmt 1 view .LVU1743
2559:Src/BLDC_controller.c ****             }
 4806              		.loc 1 2559 56 is_stmt 0 view .LVU1744
 4807 0d80 B4F96220 		ldrsh	r2, [r4, #98]
2559:Src/BLDC_controller.c ****             }
ARM GAS  /tmp/ccVzdWer.s 			page 149


 4808              		.loc 1 2559 50 view .LVU1745
 4809 0d84 ADF84A20 		strh	r2, [sp, #74]	@ movhi
 4810 0d88 0AE0     		b	.L309
 4811              	.L310:
2556:Src/BLDC_controller.c ****               }
 4812              		.loc 1 2556 17 is_stmt 1 view .LVU1746
2556:Src/BLDC_controller.c ****               }
 4813              		.loc 1 2556 52 is_stmt 0 view .LVU1747
 4814 0d8a ADF84820 		strh	r2, [sp, #72]	@ movhi
 4815 0d8e F7E7     		b	.L311
 4816              	.L306:
2564:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
 4817              		.loc 1 2564 13 is_stmt 1 view .LVU1748
2564:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
 4818              		.loc 1 2564 54 is_stmt 0 view .LVU1749
 4819 0d90 B4F96020 		ldrsh	r2, [r4, #96]
2564:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
 4820              		.loc 1 2564 48 view .LVU1750
 4821 0d94 ADF84820 		strh	r2, [sp, #72]	@ movhi
2565:Src/BLDC_controller.c ****           }
 4822              		.loc 1 2565 13 is_stmt 1 view .LVU1751
2565:Src/BLDC_controller.c ****           }
 4823              		.loc 1 2565 54 is_stmt 0 view .LVU1752
 4824 0d98 B4F96220 		ldrsh	r2, [r4, #98]
2565:Src/BLDC_controller.c ****           }
 4825              		.loc 1 2565 48 view .LVU1753
 4826 0d9c ADF84A20 		strh	r2, [sp, #74]	@ movhi
 4827              	.L309:
2573:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Merge1;
 4828              		.loc 1 2573 11 is_stmt 1 view .LVU1754
2573:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Merge1;
 4829              		.loc 1 2573 14 is_stmt 0 view .LVU1755
 4830 0da0 0BB9     		cbnz	r3, .L312
2574:Src/BLDC_controller.c ****           }
 4831              		.loc 1 2574 13 is_stmt 1 view .LVU1756
2574:Src/BLDC_controller.c ****           }
 4832              		.loc 1 2574 28 is_stmt 0 view .LVU1757
 4833 0da2 B4F97400 		ldrsh	r0, [r4, #116]
 4834              	.LVL472:
 4835              	.L312:
2580:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4836              		.loc 1 2580 11 is_stmt 1 view .LVU1758
2580:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4837              		.loc 1 2580 21 is_stmt 0 view .LVU1759
 4838 0da6 0B9B     		ldr	r3, [sp, #44]
 4839 0da8 C01A     		subs	r0, r0, r3
 4840              	.LVL473:
2581:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4841              		.loc 1 2581 11 is_stmt 1 view .LVU1760
2581:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4842              		.loc 1 2581 14 is_stmt 0 view .LVU1761
 4843 0daa B0F5004F 		cmp	r0, #32768
 4844 0dae 04DA     		bge	.L400
2584:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4845              		.loc 1 2584 13 is_stmt 1 view .LVU1762
2584:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4846              		.loc 1 2584 16 is_stmt 0 view .LVU1763
ARM GAS  /tmp/ccVzdWer.s 			page 150


 4847 0db0 10F5004F 		cmn	r0, #32768
 4848 0db4 03DA     		bge	.L313
2585:Src/BLDC_controller.c ****             }
 4849              		.loc 1 2585 25 view .LVU1764
 4850 0db6 8448     		ldr	r0, .L473
 4851              	.LVL474:
2585:Src/BLDC_controller.c ****             }
 4852              		.loc 1 2585 25 view .LVU1765
 4853 0db8 01E0     		b	.L313
 4854              	.LVL475:
 4855              	.L400:
2582:Src/BLDC_controller.c ****           } else {
 4856              		.loc 1 2582 23 view .LVU1766
 4857 0dba 47F6FF70 		movw	r0, #32767
 4858              	.LVL476:
 4859              	.L313:
2590:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu,
 4860              		.loc 1 2590 11 is_stmt 1 view .LVU1767
 4861 0dbe B4F98CE0 		ldrsh	lr, [r4, #140]
 4862 0dc2 B5F8F420 		ldrh	r2, [r5, #244]
 4863 0dc6 B5F8EA10 		ldrh	r1, [r5, #234]
 4864 0dca 04F1040C 		add	ip, r4, #4
 4865 0dce CDF810C0 		str	ip, [sp, #16]
 4866 0dd2 04F1580C 		add	ip, r4, #88
 4867 0dd6 CDF80CC0 		str	ip, [sp, #12]
 4868 0dda 636C     		ldr	r3, [r4, #68]
 4869 0ddc 0293     		str	r3, [sp, #8]
 4870 0dde BDF94AC0 		ldrsh	ip, [sp, #74]
 4871 0de2 CDF804C0 		str	ip, [sp, #4]
 4872 0de6 BDF948C0 		ldrsh	ip, [sp, #72]
 4873 0dea CDF800C0 		str	ip, [sp]
 4874 0dee 7346     		mov	r3, lr
 4875 0df0 00B2     		sxth	r0, r0
 4876              	.LVL477:
2590:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu,
 4877              		.loc 1 2590 11 is_stmt 0 view .LVU1768
 4878 0df2 FFF7FEFF 		bl	PI_clamp_fixdt_l
 4879              	.LVL478:
2599:Src/BLDC_controller.c **** 
 4880              		.loc 1 2599 11 is_stmt 1 view .LVU1769
 4881              	.L297:
2703:Src/BLDC_controller.c ****         UnitDelay3 = -1;
 4882              		.loc 1 2703 9 view .LVU1770
2703:Src/BLDC_controller.c ****         UnitDelay3 = -1;
 4883              		.loc 1 2703 20 is_stmt 0 view .LVU1771
 4884 0df6 94F99430 		ldrsb	r3, [r4, #148]
 4885              	.LVL479:
2704:Src/BLDC_controller.c ****         if (rtb_LogicalOperator) {
 4886              		.loc 1 2704 9 is_stmt 1 view .LVU1772
2705:Src/BLDC_controller.c ****           UnitDelay3 = 0;
 4887              		.loc 1 2705 9 view .LVU1773
2705:Src/BLDC_controller.c ****           UnitDelay3 = 0;
 4888              		.loc 1 2705 12 is_stmt 0 view .LVU1774
 4889 0dfa 089A     		ldr	r2, [sp, #32]
 4890 0dfc 002A     		cmp	r2, #0
 4891 0dfe 43D0     		beq	.L319
2706:Src/BLDC_controller.c ****         }
ARM GAS  /tmp/ccVzdWer.s 			page 151


 4892              		.loc 1 2706 11 is_stmt 1 view .LVU1775
 4893              	.LVL480:
2709:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
 4894              		.loc 1 2709 9 view .LVU1776
2709:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
 4895              		.loc 1 2709 37 is_stmt 0 view .LVU1777
 4896 0e00 0022     		movs	r2, #0
 4897 0e02 84F89420 		strb	r2, [r4, #148]
2710:Src/BLDC_controller.c ****           if (0 != rtb_Sum2_h) {
 4898              		.loc 1 2710 9 is_stmt 1 view .LVU1778
2711:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Vd_Calculation' incorporates:
 4899              		.loc 1 2711 11 view .LVU1779
2711:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Vd_Calculation' incorporates:
 4900              		.loc 1 2711 14 is_stmt 0 view .LVU1780
 4901 0e06 002B     		cmp	r3, #0
 4902 0e08 42D1     		bne	.L463
 4903              	.LVL481:
 4904              	.L321:
2730:Src/BLDC_controller.c **** 
 4905              		.loc 1 2730 11 is_stmt 1 view .LVU1781
2730:Src/BLDC_controller.c **** 
 4906              		.loc 1 2730 42 is_stmt 0 view .LVU1782
 4907 0e0a B4F87230 		ldrh	r3, [r4, #114]
2730:Src/BLDC_controller.c **** 
 4908              		.loc 1 2730 28 view .LVU1783
 4909 0e0e 5B42     		rsbs	r3, r3, #0
2730:Src/BLDC_controller.c **** 
 4910              		.loc 1 2730 26 view .LVU1784
 4911 0e10 1BB2     		sxth	r3, r3
 4912              	.LVL482:
2737:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->i_max;
 4913              		.loc 1 2737 11 is_stmt 1 view .LVU1785
2737:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->i_max;
 4914              		.loc 1 2737 36 is_stmt 0 view .LVU1786
 4915 0e12 B4F96400 		ldrsh	r0, [r4, #100]
2737:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->i_max;
 4916              		.loc 1 2737 14 view .LVU1787
 4917 0e16 9842     		cmp	r0, r3
 4918 0e18 04DB     		blt	.L322
2740:Src/BLDC_controller.c ****               /* Switch: '<S75>/Switch' */
 4919              		.loc 1 2740 13 is_stmt 1 view .LVU1788
2740:Src/BLDC_controller.c ****               /* Switch: '<S75>/Switch' */
 4920              		.loc 1 2740 38 is_stmt 0 view .LVU1789
 4921 0e1a B4F96A00 		ldrsh	r0, [r4, #106]
2740:Src/BLDC_controller.c ****               /* Switch: '<S75>/Switch' */
 4922              		.loc 1 2740 16 view .LVU1790
 4923 0e1e 9842     		cmp	r0, r3
 4924 0e20 00DC     		bgt	.L322
2730:Src/BLDC_controller.c **** 
 4925              		.loc 1 2730 26 view .LVU1791
 4926 0e22 1846     		mov	r0, r3
 4927              	.L322:
 4928              	.LVL483:
2749:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4929              		.loc 1 2749 11 is_stmt 1 view .LVU1792
2749:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4930              		.loc 1 2749 64 is_stmt 0 view .LVU1793
ARM GAS  /tmp/ccVzdWer.s 			page 152


 4931 0e24 B4F95430 		ldrsh	r3, [r4, #84]
2749:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4932              		.loc 1 2749 21 view .LVU1794
 4933 0e28 C01A     		subs	r0, r0, r3
 4934              	.LVL484:
2750:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4935              		.loc 1 2750 11 is_stmt 1 view .LVU1795
2750:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4936              		.loc 1 2750 14 is_stmt 0 view .LVU1796
 4937 0e2a B0F5004F 		cmp	r0, #32768
 4938 0e2e 34DA     		bge	.L405
2753:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4939              		.loc 1 2753 13 is_stmt 1 view .LVU1797
2753:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4940              		.loc 1 2753 16 is_stmt 0 view .LVU1798
 4941 0e30 10F5004F 		cmn	r0, #32768
 4942 0e34 33DA     		bge	.L323
2754:Src/BLDC_controller.c ****             }
 4943              		.loc 1 2754 25 view .LVU1799
 4944 0e36 6448     		ldr	r0, .L473
 4945              	.LVL485:
2754:Src/BLDC_controller.c ****             }
 4946              		.loc 1 2754 25 view .LVU1800
 4947 0e38 31E0     		b	.L323
 4948              	.LVL486:
 4949              	.L461:
2610:Src/BLDC_controller.c **** 
 4950              		.loc 1 2610 13 is_stmt 1 view .LVU1801
 4951 0e3a 2046     		mov	r0, r4
 4952 0e3c FFF7FEFF 		bl	PI_clamp_fixdt_g_Reset
 4953              	.LVL487:
2610:Src/BLDC_controller.c **** 
 4954              		.loc 1 2610 13 is_stmt 0 view .LVU1802
 4955 0e40 18E7     		b	.L314
 4956              	.LVL488:
 4957              	.L403:
2642:Src/BLDC_controller.c ****           } else {
 4958              		.loc 1 2642 23 view .LVU1803
 4959 0e42 47F6FF70 		movw	r0, #32767
 4960              	.LVL489:
 4961              	.L316:
2650:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Vq_max_M1;
 4962              		.loc 1 2650 11 is_stmt 1 view .LVU1804
2650:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Vq_max_M1;
 4963              		.loc 1 2650 19 is_stmt 0 view .LVU1805
 4964 0e46 B4F96020 		ldrsh	r2, [r4, #96]
2650:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Vq_max_M1;
 4965              		.loc 1 2650 14 view .LVU1806
 4966 0e4a 9045     		cmp	r8, r2
 4967 0e4c 00DD     		ble	.L317
2651:Src/BLDC_controller.c ****           } else {
 4968              		.loc 1 2651 29 view .LVU1807
 4969 0e4e 9046     		mov	r8, r2
 4970              	.L317:
 4971              	.LVL490:
2659:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Gain5;
 4972              		.loc 1 2659 11 is_stmt 1 view .LVU1808
ARM GAS  /tmp/ccVzdWer.s 			page 153


2659:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Gain5;
 4973              		.loc 1 2659 38 is_stmt 0 view .LVU1809
 4974 0e50 B4F962C0 		ldrsh	ip, [r4, #98]
2659:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Gain5;
 4975              		.loc 1 2659 14 view .LVU1810
 4976 0e54 9C45     		cmp	ip, r3
 4977 0e56 00DA     		bge	.L318
2621:Src/BLDC_controller.c **** 
 4978              		.loc 1 2621 26 view .LVU1811
 4979 0e58 9C46     		mov	ip, r3
 4980              	.L318:
 4981              	.LVL491:
2674:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu, rtb_Saturation1,
 4982              		.loc 1 2674 11 is_stmt 1 view .LVU1812
 4983 0e5a B4F98C30 		ldrsh	r3, [r4, #140]
 4984 0e5e B5F8F020 		ldrh	r2, [r5, #240]
 4985 0e62 B5F8E810 		ldrh	r1, [r5, #232]
 4986 0e66 0494     		str	r4, [sp, #16]
 4987 0e68 04F1580E 		add	lr, r4, #88
 4988 0e6c CDF80CE0 		str	lr, [sp, #12]
 4989 0e70 4FF0000E 		mov	lr, #0
 4990 0e74 CDF808E0 		str	lr, [sp, #8]
 4991 0e78 CDF804C0 		str	ip, [sp, #4]
 4992 0e7c CDF80080 		str	r8, [sp]
 4993 0e80 00B2     		sxth	r0, r0
 4994              	.LVL492:
2674:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu, rtb_Saturation1,
 4995              		.loc 1 2674 11 is_stmt 0 view .LVU1813
 4996 0e82 FFF7FEFF 		bl	PI_clamp_fixdt_k
 4997              	.LVL493:
2682:Src/BLDC_controller.c **** 
 4998              		.loc 1 2682 11 is_stmt 1 view .LVU1814
 4999 0e86 B6E7     		b	.L297
 5000              	.LVL494:
 5001              	.L319:
2709:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
 5002              		.loc 1 2709 9 view .LVU1815
2709:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
 5003              		.loc 1 2709 37 is_stmt 0 view .LVU1816
 5004 0e88 FF23     		movs	r3, #255
 5005              	.LVL495:
2709:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
 5006              		.loc 1 2709 37 view .LVU1817
 5007 0e8a 84F89430 		strb	r3, [r4, #148]
 5008              	.LVL496:
2710:Src/BLDC_controller.c ****           if (0 != rtb_Sum2_h) {
 5009              		.loc 1 2710 9 is_stmt 1 view .LVU1818
 5010 0e8e D8E4     		b	.L264
 5011              	.LVL497:
 5012              	.L463:
2719:Src/BLDC_controller.c **** 
 5013              		.loc 1 2719 13 view .LVU1819
 5014 0e90 04F10C00 		add	r0, r4, #12
 5015 0e94 FFF7FEFF 		bl	PI_clamp_fixdt_Reset
 5016              	.LVL498:
2719:Src/BLDC_controller.c **** 
 5017              		.loc 1 2719 13 is_stmt 0 view .LVU1820
ARM GAS  /tmp/ccVzdWer.s 			page 154


 5018 0e98 B7E7     		b	.L321
 5019              	.LVL499:
 5020              	.L405:
2751:Src/BLDC_controller.c ****           } else {
 5021              		.loc 1 2751 23 view .LVU1821
 5022 0e9a 47F6FF70 		movw	r0, #32767
 5023              	.LVL500:
 5024              	.L323:
2759:Src/BLDC_controller.c ****                          rtDW->Vd_max1, rtDW->Gain3, 0, &rtDW->Switch1,
 5025              		.loc 1 2759 11 is_stmt 1 view .LVU1822
 5026 0e9e B5F8EE20 		ldrh	r2, [r5, #238]
 5027 0ea2 B5F8E610 		ldrh	r1, [r5, #230]
 5028 0ea6 04F10C03 		add	r3, r4, #12
 5029 0eaa 0493     		str	r3, [sp, #16]
 5030 0eac 04F15A03 		add	r3, r4, #90
 5031 0eb0 0393     		str	r3, [sp, #12]
 5032 0eb2 0023     		movs	r3, #0
 5033 0eb4 0293     		str	r3, [sp, #8]
 5034 0eb6 B4F95EC0 		ldrsh	ip, [r4, #94]
 5035 0eba CDF804C0 		str	ip, [sp, #4]
 5036 0ebe B4F95CC0 		ldrsh	ip, [r4, #92]
 5037 0ec2 CDF800C0 		str	ip, [sp]
 5038 0ec6 00B2     		sxth	r0, r0
 5039              	.LVL501:
2759:Src/BLDC_controller.c ****                          rtDW->Vd_max1, rtDW->Gain3, 0, &rtDW->Switch1,
 5040              		.loc 1 2759 11 is_stmt 0 view .LVU1823
 5041 0ec8 FFF7FEFF 		bl	PI_clamp_fixdt
 5042              	.LVL502:
 5043 0ecc B9E4     		b	.L264
 5044              	.LVL503:
 5045              	.L452:
2788:Src/BLDC_controller.c ****     UnitDelay3 = 0;
 5046              		.loc 1 2788 5 is_stmt 1 view .LVU1824
2788:Src/BLDC_controller.c ****     UnitDelay3 = 0;
 5047              		.loc 1 2788 20 is_stmt 0 view .LVU1825
 5048 0ece B4F95880 		ldrsh	r8, [r4, #88]
 5049              	.LVL504:
2789:Src/BLDC_controller.c ****   } else {
 5050              		.loc 1 2789 5 is_stmt 1 view .LVU1826
2789:Src/BLDC_controller.c ****   } else {
 5051              		.loc 1 2789 16 is_stmt 0 view .LVU1827
 5052 0ed2 0023     		movs	r3, #0
 5053 0ed4 C0E4     		b	.L325
 5054              	.LVL505:
 5055              	.L407:
2813:Src/BLDC_controller.c ****     } else {
 5056              		.loc 1 2813 17 view .LVU1828
 5057 0ed6 47F6FF72 		movw	r2, #32767
 5058              	.LVL506:
 5059              	.L328:
2817:Src/BLDC_controller.c ****       }
2818:Src/BLDC_controller.c ****     }
2819:Src/BLDC_controller.c **** 
2820:Src/BLDC_controller.c ****     /* Sum: '<S58>/Sum1' incorporates:
2821:Src/BLDC_controller.c ****      *  Product: '<S58>/Divide2'
2822:Src/BLDC_controller.c ****      *  Product: '<S58>/Divide3'
2823:Src/BLDC_controller.c ****      */
ARM GAS  /tmp/ccVzdWer.s 			page 155


2824:Src/BLDC_controller.c ****     rtb_Sum1_jt = (int16_T)((rtDW->Switch1 * rtDW->r_sin_M1) >> 14) + (int16_T)
 5060              		.loc 1 2824 5 is_stmt 1 view .LVU1829
 5061              		.loc 1 2824 44 is_stmt 0 view .LVU1830
 5062 0eda 03FB0CF3 		mul	r3, r3, ip
 5063              		.loc 1 2824 19 view .LVU1831
 5064 0ede 43F38F33 		sbfx	r3, r3, #14, #16
2825:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_cos_M1) >> 14);
 5065              		.loc 1 2825 21 view .LVU1832
 5066 0ee2 01FB00F1 		mul	r1, r1, r0
2824:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_cos_M1) >> 14);
 5067              		.loc 1 2824 71 view .LVU1833
 5068 0ee6 41F38F31 		sbfx	r1, r1, #14, #16
2824:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_cos_M1) >> 14);
 5069              		.loc 1 2824 17 view .LVU1834
 5070 0eea 0B44     		add	r3, r3, r1
 5071              	.LVL507:
2826:Src/BLDC_controller.c ****     if (rtb_Sum1_jt > 32767) {
 5072              		.loc 1 2826 5 is_stmt 1 view .LVU1835
 5073              		.loc 1 2826 8 is_stmt 0 view .LVU1836
 5074 0eec B3F5004F 		cmp	r3, #32768
 5075 0ef0 04DA     		bge	.L409
2827:Src/BLDC_controller.c ****       rtb_Sum1_jt = 32767;
2828:Src/BLDC_controller.c ****     } else {
2829:Src/BLDC_controller.c ****       if (rtb_Sum1_jt < -32768) {
 5076              		.loc 1 2829 7 is_stmt 1 view .LVU1837
 5077              		.loc 1 2829 10 is_stmt 0 view .LVU1838
 5078 0ef2 13F5004F 		cmn	r3, #32768
 5079 0ef6 03DA     		bge	.L329
2830:Src/BLDC_controller.c ****         rtb_Sum1_jt = -32768;
 5080              		.loc 1 2830 21 view .LVU1839
 5081 0ef8 334B     		ldr	r3, .L473
 5082              	.LVL508:
 5083              		.loc 1 2830 21 view .LVU1840
 5084 0efa 01E0     		b	.L329
 5085              	.LVL509:
 5086              	.L409:
2827:Src/BLDC_controller.c ****       rtb_Sum1_jt = 32767;
 5087              		.loc 1 2827 19 view .LVU1841
 5088 0efc 47F6FF73 		movw	r3, #32767
 5089              	.LVL510:
 5090              	.L329:
2831:Src/BLDC_controller.c ****       }
2832:Src/BLDC_controller.c ****     }
2833:Src/BLDC_controller.c **** 
2834:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain1' incorporates:
2835:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum1'
2836:Src/BLDC_controller.c ****      */
2837:Src/BLDC_controller.c ****     rtb_Sum1_jt *= 14189;
 5091              		.loc 1 2837 5 is_stmt 1 view .LVU1842
 5092              		.loc 1 2837 17 is_stmt 0 view .LVU1843
 5093 0f00 43F26D70 		movw	r0, #14189
 5094 0f04 00FB03F3 		mul	r3, r0, r3
 5095              	.LVL511:
2838:Src/BLDC_controller.c **** 
2839:Src/BLDC_controller.c ****     /* Sum: '<S57>/Sum6' incorporates:
2840:Src/BLDC_controller.c ****      *  Gain: '<S57>/Gain1'
2841:Src/BLDC_controller.c ****      *  Gain: '<S57>/Gain3'
ARM GAS  /tmp/ccVzdWer.s 			page 156


2842:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2843:Src/BLDC_controller.c ****      */
2844:Src/BLDC_controller.c ****     rtb_Sum1_jt = (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14) -
 5096              		.loc 1 2844 5 is_stmt 1 view .LVU1844
 5097              		.loc 1 2844 46 is_stmt 0 view .LVU1845
 5098 0f08 002B     		cmp	r3, #0
 5099 0f0a 12DB     		blt	.L464
 5100 0f0c 0020     		movs	r0, #0
 5101              	.L330:
 5102              		.loc 1 2844 51 discriminator 4 view .LVU1846
 5103 0f0e 1844     		add	r0, r0, r3
2845:Src/BLDC_controller.c ****       ((int16_T)(((int16_T)rtb_Gain3 < 0) + (int16_T)rtb_Gain3) >> 1);
 5104              		.loc 1 2845 19 discriminator 4 view .LVU1847
 5105 0f10 11B2     		sxth	r1, r2
 5106              		.loc 1 2845 38 discriminator 4 view .LVU1848
 5107 0f12 C2F3C033 		ubfx	r3, r2, #15, #1
 5108              	.LVL512:
 5109              		.loc 1 2845 45 discriminator 4 view .LVU1849
 5110 0f16 92B2     		uxth	r2, r2
 5111              	.LVL513:
 5112              		.loc 1 2845 43 discriminator 4 view .LVU1850
 5113 0f18 1344     		add	r3, r3, r2
 5114              		.loc 1 2845 65 discriminator 4 view .LVU1851
 5115 0f1a 43F34E03 		sbfx	r3, r3, #1, #15
2844:Src/BLDC_controller.c ****       ((int16_T)(((int16_T)rtb_Gain3 < 0) + (int16_T)rtb_Gain3) >> 1);
 5116              		.loc 1 2844 17 discriminator 4 view .LVU1852
 5117 0f1e C3EBA033 		rsb	r3, r3, r0, asr #14
 5118              	.LVL514:
2846:Src/BLDC_controller.c ****     if (rtb_Sum1_jt > 32767) {
 5119              		.loc 1 2846 5 is_stmt 1 discriminator 4 view .LVU1853
 5120              		.loc 1 2846 8 is_stmt 0 discriminator 4 view .LVU1854
 5121 0f22 B3F5004F 		cmp	r3, #32768
 5122 0f26 07DA     		bge	.L412
2847:Src/BLDC_controller.c ****       rtb_Sum1_jt = 32767;
2848:Src/BLDC_controller.c ****     } else {
2849:Src/BLDC_controller.c ****       if (rtb_Sum1_jt < -32768) {
 5123              		.loc 1 2849 7 is_stmt 1 view .LVU1855
 5124              		.loc 1 2849 10 is_stmt 0 view .LVU1856
 5125 0f28 13F5004F 		cmn	r3, #32768
 5126 0f2c 06DA     		bge	.L331
2850:Src/BLDC_controller.c ****         rtb_Sum1_jt = -32768;
 5127              		.loc 1 2850 21 view .LVU1857
 5128 0f2e 264B     		ldr	r3, .L473
 5129              	.LVL515:
 5130              		.loc 1 2850 21 view .LVU1858
 5131 0f30 04E0     		b	.L331
 5132              	.LVL516:
 5133              	.L464:
2844:Src/BLDC_controller.c ****       ((int16_T)(((int16_T)rtb_Gain3 < 0) + (int16_T)rtb_Gain3) >> 1);
 5134              		.loc 1 2844 46 view .LVU1859
 5135 0f32 43F6FF70 		movw	r0, #16383
 5136 0f36 EAE7     		b	.L330
 5137              	.LVL517:
 5138              	.L412:
2847:Src/BLDC_controller.c ****       rtb_Sum1_jt = 32767;
 5139              		.loc 1 2847 19 view .LVU1860
 5140 0f38 47F6FF73 		movw	r3, #32767
ARM GAS  /tmp/ccVzdWer.s 			page 157


 5141              	.LVL518:
 5142              	.L331:
2851:Src/BLDC_controller.c ****       }
2852:Src/BLDC_controller.c ****     }
2853:Src/BLDC_controller.c **** 
2854:Src/BLDC_controller.c ****     /* Sum: '<S57>/Sum2' incorporates:
2855:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum6'
2856:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2857:Src/BLDC_controller.c ****      */
2858:Src/BLDC_controller.c ****     rtb_Switch1 = -(int16_T)rtb_Gain3 - (int16_T)rtb_Sum1_jt;
 5143              		.loc 1 2858 5 is_stmt 1 view .LVU1861
 5144              		.loc 1 2858 19 is_stmt 0 view .LVU1862
 5145 0f3c 4A42     		rsbs	r2, r1, #0
 5146              		.loc 1 2858 41 view .LVU1863
 5147 0f3e 1BB2     		sxth	r3, r3
 5148              	.LVL519:
 5149              		.loc 1 2858 41 view .LVU1864
 5150 0f40 1846     		mov	r0, r3
 5151              		.loc 1 2858 17 view .LVU1865
 5152 0f42 D21A     		subs	r2, r2, r3
 5153              	.LVL520:
2859:Src/BLDC_controller.c ****     if (rtb_Switch1 > 32767) {
 5154              		.loc 1 2859 5 is_stmt 1 view .LVU1866
 5155              		.loc 1 2859 8 is_stmt 0 view .LVU1867
 5156 0f44 B2F5004F 		cmp	r2, #32768
 5157 0f48 04DA     		bge	.L414
2860:Src/BLDC_controller.c ****       rtb_Switch1 = 32767;
2861:Src/BLDC_controller.c ****     } else {
2862:Src/BLDC_controller.c ****       if (rtb_Switch1 < -32768) {
 5158              		.loc 1 2862 7 is_stmt 1 view .LVU1868
 5159              		.loc 1 2862 10 is_stmt 0 view .LVU1869
 5160 0f4a 12F5004F 		cmn	r2, #32768
 5161 0f4e 03DA     		bge	.L332
2863:Src/BLDC_controller.c ****         rtb_Switch1 = -32768;
 5162              		.loc 1 2863 21 view .LVU1870
 5163 0f50 1D4A     		ldr	r2, .L473
 5164              	.LVL521:
 5165              		.loc 1 2863 21 view .LVU1871
 5166 0f52 01E0     		b	.L332
 5167              	.LVL522:
 5168              	.L414:
2860:Src/BLDC_controller.c ****       rtb_Switch1 = 32767;
 5169              		.loc 1 2860 19 view .LVU1872
 5170 0f54 47F6FF72 		movw	r2, #32767
 5171              	.LVL523:
 5172              	.L332:
2864:Src/BLDC_controller.c ****       }
2865:Src/BLDC_controller.c ****     }
2866:Src/BLDC_controller.c **** 
2867:Src/BLDC_controller.c ****     /* MinMax: '<S57>/MinMax1' incorporates:
2868:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum2'
2869:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum6'
2870:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2871:Src/BLDC_controller.c ****      */
2872:Src/BLDC_controller.c ****     DataTypeConversion2 = (int16_T)rtb_Gain3;
 5173              		.loc 1 2872 5 is_stmt 1 view .LVU1873
2873:Src/BLDC_controller.c ****     if (!((int16_T)rtb_Gain3 < (int16_T)rtb_Sum1_jt)) {
ARM GAS  /tmp/ccVzdWer.s 			page 158


 5174              		.loc 1 2873 5 view .LVU1874
 5175              		.loc 1 2873 8 is_stmt 0 view .LVU1875
 5176 0f58 9942     		cmp	r1, r3
 5177 0f5a 13DA     		bge	.L416
2872:Src/BLDC_controller.c ****     if (!((int16_T)rtb_Gain3 < (int16_T)rtb_Sum1_jt)) {
 5178              		.loc 1 2872 25 view .LVU1876
 5179 0f5c 8C46     		mov	ip, r1
 5180              	.L333:
 5181              	.LVL524:
2874:Src/BLDC_controller.c ****       DataTypeConversion2 = (int16_T)rtb_Sum1_jt;
2875:Src/BLDC_controller.c ****     }
2876:Src/BLDC_controller.c **** 
2877:Src/BLDC_controller.c ****     if (!(DataTypeConversion2 < (int16_T)rtb_Switch1)) {
 5182              		.loc 1 2877 5 is_stmt 1 view .LVU1877
 5183              		.loc 1 2877 33 is_stmt 0 view .LVU1878
 5184 0f5e 12B2     		sxth	r2, r2
 5185              	.LVL525:
 5186              		.loc 1 2877 8 view .LVU1879
 5187 0f60 6245     		cmp	r2, ip
 5188 0f62 00DC     		bgt	.L334
2878:Src/BLDC_controller.c ****       DataTypeConversion2 = (int16_T)rtb_Switch1;
 5189              		.loc 1 2878 27 view .LVU1880
 5190 0f64 9446     		mov	ip, r2
 5191              	.LVL526:
 5192              	.L334:
2879:Src/BLDC_controller.c ****     }
2880:Src/BLDC_controller.c **** 
2881:Src/BLDC_controller.c ****     /* MinMax: '<S57>/MinMax2' incorporates:
2882:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum2'
2883:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum6'
2884:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2885:Src/BLDC_controller.c ****      */
2886:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)rtb_Gain3;
 5193              		.loc 1 2886 5 is_stmt 1 view .LVU1881
2887:Src/BLDC_controller.c ****     if (!((int16_T)rtb_Gain3 > (int16_T)rtb_Sum1_jt)) {
 5194              		.loc 1 2887 5 view .LVU1882
 5195              		.loc 1 2887 8 is_stmt 0 view .LVU1883
 5196 0f66 9942     		cmp	r1, r3
 5197 0f68 00DD     		ble	.L335
2886:Src/BLDC_controller.c ****     if (!((int16_T)rtb_Gain3 > (int16_T)rtb_Sum1_jt)) {
 5198              		.loc 1 2886 21 view .LVU1884
 5199 0f6a 0B46     		mov	r3, r1
 5200              	.L335:
 5201              	.LVL527:
2888:Src/BLDC_controller.c ****       rtb_Saturation1 = (int16_T)rtb_Sum1_jt;
2889:Src/BLDC_controller.c ****     }
2890:Src/BLDC_controller.c **** 
2891:Src/BLDC_controller.c ****     if (!(rtb_Saturation1 > (int16_T)rtb_Switch1)) {
 5202              		.loc 1 2891 5 is_stmt 1 view .LVU1885
 5203              		.loc 1 2891 8 is_stmt 0 view .LVU1886
 5204 0f6c 9A42     		cmp	r2, r3
 5205 0f6e 00DB     		blt	.L336
2892:Src/BLDC_controller.c ****       rtb_Saturation1 = (int16_T)rtb_Switch1;
 5206              		.loc 1 2892 23 view .LVU1887
 5207 0f70 1346     		mov	r3, r2
 5208              	.LVL528:
 5209              	.L336:
ARM GAS  /tmp/ccVzdWer.s 			page 159


2893:Src/BLDC_controller.c ****     }
2894:Src/BLDC_controller.c **** 
2895:Src/BLDC_controller.c ****     /* Sum: '<S57>/Add' incorporates:
2896:Src/BLDC_controller.c ****      *  MinMax: '<S57>/MinMax1'
2897:Src/BLDC_controller.c ****      *  MinMax: '<S57>/MinMax2'
2898:Src/BLDC_controller.c ****      */
2899:Src/BLDC_controller.c ****     rtb_Sum1 = DataTypeConversion2 + rtb_Saturation1;
 5210              		.loc 1 2899 5 is_stmt 1 view .LVU1888
 5211              		.loc 1 2899 14 is_stmt 0 view .LVU1889
 5212 0f72 6344     		add	r3, r3, ip
 5213              	.LVL529:
2900:Src/BLDC_controller.c ****     if (rtb_Sum1 > 32767) {
 5214              		.loc 1 2900 5 is_stmt 1 view .LVU1890
 5215              		.loc 1 2900 8 is_stmt 0 view .LVU1891
 5216 0f74 B3F5004F 		cmp	r3, #32768
 5217 0f78 06DA     		bge	.L419
2901:Src/BLDC_controller.c ****       rtb_Sum1 = 32767;
2902:Src/BLDC_controller.c ****     } else {
2903:Src/BLDC_controller.c ****       if (rtb_Sum1 < -32768) {
 5218              		.loc 1 2903 7 is_stmt 1 view .LVU1892
 5219              		.loc 1 2903 10 is_stmt 0 view .LVU1893
 5220 0f7a 13F5004F 		cmn	r3, #32768
 5221 0f7e 05DA     		bge	.L337
2904:Src/BLDC_controller.c ****         rtb_Sum1 = -32768;
 5222              		.loc 1 2904 18 view .LVU1894
 5223 0f80 114B     		ldr	r3, .L473
 5224              	.LVL530:
 5225              		.loc 1 2904 18 view .LVU1895
 5226 0f82 03E0     		b	.L337
 5227              	.LVL531:
 5228              	.L416:
2874:Src/BLDC_controller.c ****     }
 5229              		.loc 1 2874 27 view .LVU1896
 5230 0f84 9C46     		mov	ip, r3
 5231 0f86 EAE7     		b	.L333
 5232              	.LVL532:
 5233              	.L419:
2901:Src/BLDC_controller.c ****       rtb_Sum1 = 32767;
 5234              		.loc 1 2901 16 view .LVU1897
 5235 0f88 47F6FF73 		movw	r3, #32767
 5236              	.LVL533:
 5237              	.L337:
2905:Src/BLDC_controller.c ****       }
2906:Src/BLDC_controller.c ****     }
2907:Src/BLDC_controller.c **** 
2908:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain2' incorporates:
2909:Src/BLDC_controller.c ****      *  Sum: '<S57>/Add'
2910:Src/BLDC_controller.c ****      */
2911:Src/BLDC_controller.c ****     rtb_Merge1 = (int16_T)(rtb_Sum1 >> 1);
 5238              		.loc 1 2911 5 is_stmt 1 view .LVU1898
 5239              		.loc 1 2911 16 is_stmt 0 view .LVU1899
 5240 0f8c 43F34F03 		sbfx	r3, r3, #1, #16
 5241              	.LVL534:
2912:Src/BLDC_controller.c **** 
2913:Src/BLDC_controller.c ****     /* Sum: '<S57>/Add1' incorporates:
2914:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2915:Src/BLDC_controller.c ****      */
ARM GAS  /tmp/ccVzdWer.s 			page 160


2916:Src/BLDC_controller.c ****     rtb_Gain3 = (int16_T)rtb_Gain3 - rtb_Merge1;
 5242              		.loc 1 2916 5 is_stmt 1 view .LVU1900
 5243              		.loc 1 2916 15 is_stmt 0 view .LVU1901
 5244 0f90 C91A     		subs	r1, r1, r3
 5245              	.LVL535:
2917:Src/BLDC_controller.c ****     if (rtb_Gain3 > 32767) {
 5246              		.loc 1 2917 5 is_stmt 1 view .LVU1902
 5247              		.loc 1 2917 8 is_stmt 0 view .LVU1903
 5248 0f92 B1F5004F 		cmp	r1, #32768
 5249 0f96 04DA     		bge	.L421
2918:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
2919:Src/BLDC_controller.c ****     } else {
2920:Src/BLDC_controller.c ****       if (rtb_Gain3 < -32768) {
 5250              		.loc 1 2920 7 is_stmt 1 view .LVU1904
 5251              		.loc 1 2920 10 is_stmt 0 view .LVU1905
 5252 0f98 11F5004F 		cmn	r1, #32768
 5253 0f9c 03DA     		bge	.L338
2921:Src/BLDC_controller.c ****         rtb_Gain3 = -32768;
 5254              		.loc 1 2921 19 view .LVU1906
 5255 0f9e 0A49     		ldr	r1, .L473
 5256              	.LVL536:
 5257              		.loc 1 2921 19 view .LVU1907
 5258 0fa0 01E0     		b	.L338
 5259              	.LVL537:
 5260              	.L421:
2918:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
 5261              		.loc 1 2918 17 view .LVU1908
 5262 0fa2 47F6FF71 		movw	r1, #32767
 5263              	.LVL538:
 5264              	.L338:
2922:Src/BLDC_controller.c ****       }
2923:Src/BLDC_controller.c ****     }
2924:Src/BLDC_controller.c **** 
2925:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain4' incorporates:
2926:Src/BLDC_controller.c ****      *  Sum: '<S57>/Add1'
2927:Src/BLDC_controller.c ****      */
2928:Src/BLDC_controller.c ****     rtDW->Gain4_e[0] = (int16_T)((18919 * rtb_Gain3) >> 14);
 5265              		.loc 1 2928 5 is_stmt 1 view .LVU1909
 5266              		.loc 1 2928 41 is_stmt 0 view .LVU1910
 5267 0fa6 44F6E71C 		movw	ip, #18919
 5268              	.LVL539:
 5269              		.loc 1 2928 41 view .LVU1911
 5270 0faa 0CFB01F1 		mul	r1, ip, r1
 5271              	.LVL540:
 5272              		.loc 1 2928 24 view .LVU1912
 5273 0fae 41F38F31 		sbfx	r1, r1, #14, #16
 5274              		.loc 1 2928 22 view .LVU1913
 5275 0fb2 A4F84C10 		strh	r1, [r4, #76]	@ movhi
2929:Src/BLDC_controller.c **** 
2930:Src/BLDC_controller.c ****     /* Sum: '<S57>/Add1' incorporates:
2931:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum6'
2932:Src/BLDC_controller.c ****      */
2933:Src/BLDC_controller.c ****     rtb_Gain3 = (int16_T)rtb_Sum1_jt - rtb_Merge1;
 5276              		.loc 1 2933 5 is_stmt 1 view .LVU1914
 5277              		.loc 1 2933 15 is_stmt 0 view .LVU1915
 5278 0fb6 C01A     		subs	r0, r0, r3
 5279              	.LVL541:
ARM GAS  /tmp/ccVzdWer.s 			page 161


2934:Src/BLDC_controller.c ****     if (rtb_Gain3 > 32767) {
 5280              		.loc 1 2934 5 is_stmt 1 view .LVU1916
 5281              		.loc 1 2934 8 is_stmt 0 view .LVU1917
 5282 0fb8 B0F5004F 		cmp	r0, #32768
 5283 0fbc 06DA     		bge	.L423
2935:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
2936:Src/BLDC_controller.c ****     } else {
2937:Src/BLDC_controller.c ****       if (rtb_Gain3 < -32768) {
 5284              		.loc 1 2937 7 is_stmt 1 view .LVU1918
 5285              		.loc 1 2937 10 is_stmt 0 view .LVU1919
 5286 0fbe 10F5004F 		cmn	r0, #32768
 5287 0fc2 05DA     		bge	.L339
2938:Src/BLDC_controller.c ****         rtb_Gain3 = -32768;
 5288              		.loc 1 2938 19 view .LVU1920
 5289 0fc4 0048     		ldr	r0, .L473
 5290              	.LVL542:
 5291              		.loc 1 2938 19 view .LVU1921
 5292 0fc6 03E0     		b	.L339
 5293              	.L474:
 5294              		.align	2
 5295              	.L473:
 5296 0fc8 0080FFFF 		.word	-32768
 5297              	.LVL543:
 5298              	.L423:
2935:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
 5299              		.loc 1 2935 17 view .LVU1922
 5300 0fcc 47F6FF70 		movw	r0, #32767
 5301              	.LVL544:
 5302              	.L339:
2939:Src/BLDC_controller.c ****       }
2940:Src/BLDC_controller.c ****     }
2941:Src/BLDC_controller.c **** 
2942:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain4' incorporates:
2943:Src/BLDC_controller.c ****      *  Sum: '<S57>/Add1'
2944:Src/BLDC_controller.c ****      */
2945:Src/BLDC_controller.c ****     rtDW->Gain4_e[1] = (int16_T)((18919 * rtb_Gain3) >> 14);
 5303              		.loc 1 2945 5 is_stmt 1 view .LVU1923
 5304              		.loc 1 2945 41 is_stmt 0 view .LVU1924
 5305 0fd0 44F6E711 		movw	r1, #18919
 5306 0fd4 01FB00F0 		mul	r0, r1, r0
 5307              	.LVL545:
 5308              		.loc 1 2945 24 view .LVU1925
 5309 0fd8 40F38F30 		sbfx	r0, r0, #14, #16
 5310              		.loc 1 2945 22 view .LVU1926
 5311 0fdc A4F84E00 		strh	r0, [r4, #78]	@ movhi
2946:Src/BLDC_controller.c **** 
2947:Src/BLDC_controller.c ****     /* Sum: '<S57>/Add1' incorporates:
2948:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum2'
2949:Src/BLDC_controller.c ****      */
2950:Src/BLDC_controller.c ****     rtb_Gain3 = (int16_T)rtb_Switch1 - rtb_Merge1;
 5312              		.loc 1 2950 5 is_stmt 1 view .LVU1927
 5313              		.loc 1 2950 15 is_stmt 0 view .LVU1928
 5314 0fe0 D21A     		subs	r2, r2, r3
 5315              	.LVL546:
2951:Src/BLDC_controller.c ****     if (rtb_Gain3 > 32767) {
 5316              		.loc 1 2951 5 is_stmt 1 view .LVU1929
 5317              		.loc 1 2951 8 is_stmt 0 view .LVU1930
ARM GAS  /tmp/ccVzdWer.s 			page 162


 5318 0fe2 B2F5004F 		cmp	r2, #32768
 5319 0fe6 04DA     		bge	.L425
2952:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
2953:Src/BLDC_controller.c ****     } else {
2954:Src/BLDC_controller.c ****       if (rtb_Gain3 < -32768) {
 5320              		.loc 1 2954 7 is_stmt 1 view .LVU1931
 5321              		.loc 1 2954 10 is_stmt 0 view .LVU1932
 5322 0fe8 12F5004F 		cmn	r2, #32768
 5323 0fec 03DA     		bge	.L340
2955:Src/BLDC_controller.c ****         rtb_Gain3 = -32768;
 5324              		.loc 1 2955 19 view .LVU1933
 5325 0fee 5F4A     		ldr	r2, .L475
 5326              	.LVL547:
 5327              		.loc 1 2955 19 view .LVU1934
 5328 0ff0 01E0     		b	.L340
 5329              	.LVL548:
 5330              	.L425:
2952:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
 5331              		.loc 1 2952 17 view .LVU1935
 5332 0ff2 47F6FF72 		movw	r2, #32767
 5333              	.LVL549:
 5334              	.L340:
2956:Src/BLDC_controller.c ****       }
2957:Src/BLDC_controller.c ****     }
2958:Src/BLDC_controller.c **** 
2959:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain4' incorporates:
2960:Src/BLDC_controller.c ****      *  Sum: '<S57>/Add1'
2961:Src/BLDC_controller.c ****      */
2962:Src/BLDC_controller.c ****     rtDW->Gain4_e[2] = (int16_T)((18919 * rtb_Gain3) >> 14);
 5335              		.loc 1 2962 5 is_stmt 1 view .LVU1936
 5336              		.loc 1 2962 41 is_stmt 0 view .LVU1937
 5337 0ff6 44F6E713 		movw	r3, #18919
 5338 0ffa 03FB02F2 		mul	r2, r3, r2
 5339              	.LVL550:
 5340              		.loc 1 2962 24 view .LVU1938
 5341 0ffe 42F38F32 		sbfx	r2, r2, #14, #16
 5342              		.loc 1 2962 22 view .LVU1939
 5343 1002 A4F85020 		strh	r2, [r4, #80]	@ movhi
 5344              	.L327:
2963:Src/BLDC_controller.c **** 
2964:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S7>/Clarke_Park_Transform_Inverse' */
2965:Src/BLDC_controller.c ****   }
2966:Src/BLDC_controller.c **** 
2967:Src/BLDC_controller.c ****   /* End of If: '<S7>/If2' */
2968:Src/BLDC_controller.c **** 
2969:Src/BLDC_controller.c ****   /* If: '<S8>/If' incorporates:
2970:Src/BLDC_controller.c ****    *  Constant: '<S11>/vec_hallToPos'
2971:Src/BLDC_controller.c ****    *  Constant: '<S1>/z_ctrlTypSel'
2972:Src/BLDC_controller.c ****    *  Constant: '<S8>/CTRL_COMM2'
2973:Src/BLDC_controller.c ****    *  Constant: '<S8>/CTRL_COMM3'
2974:Src/BLDC_controller.c ****    *  Inport: '<S95>/V_phaABC_FOC_in'
2975:Src/BLDC_controller.c ****    *  Logic: '<S8>/Logical Operator1'
2976:Src/BLDC_controller.c ****    *  Logic: '<S8>/Logical Operator2'
2977:Src/BLDC_controller.c ****    *  LookupNDDirect: '<S94>/z_commutMap_M1'
2978:Src/BLDC_controller.c ****    *  RelationalOperator: '<S8>/Relational Operator1'
2979:Src/BLDC_controller.c ****    *  RelationalOperator: '<S8>/Relational Operator2'
2980:Src/BLDC_controller.c ****    *  Selector: '<S11>/Selector'
ARM GAS  /tmp/ccVzdWer.s 			page 163


2981:Src/BLDC_controller.c ****    *
2982:Src/BLDC_controller.c ****    * About '<S94>/z_commutMap_M1':
2983:Src/BLDC_controller.c ****    *  2-dimensional Direct Look-Up returning a Column
2984:Src/BLDC_controller.c ****    */
2985:Src/BLDC_controller.c ****   if (rtb_LogicalOperator && (rtP->z_ctrlTypSel == 2)) {
 5345              		.loc 1 2985 3 is_stmt 1 view .LVU1940
 5346              		.loc 1 2985 6 is_stmt 0 view .LVU1941
 5347 1006 089B     		ldr	r3, [sp, #32]
 5348 1008 1BB1     		cbz	r3, .L341
 5349              		.loc 1 2985 34 discriminator 1 view .LVU1942
 5350 100a 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
 5351              		.loc 1 2985 27 discriminator 1 view .LVU1943
 5352 100e 022B     		cmp	r3, #2
 5353 1010 10D0     		beq	.L465
 5354              	.L341:
2986:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S8>/FOC_Method' incorporates:
2987:Src/BLDC_controller.c ****      *  ActionPort: '<S95>/Action Port'
2988:Src/BLDC_controller.c ****      */
2989:Src/BLDC_controller.c ****     DataTypeConversion2 = rtDW->Gain4_e[0];
2990:Src/BLDC_controller.c ****     rtb_Saturation1 = rtDW->Gain4_e[1];
2991:Src/BLDC_controller.c ****     rtb_Merge1 = rtDW->Gain4_e[2];
2992:Src/BLDC_controller.c **** 
2993:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S8>/FOC_Method' */
2994:Src/BLDC_controller.c ****   } else if (rtb_LogicalOperator && (rtP->z_ctrlTypSel == 1)) {
 5355              		.loc 1 2994 10 is_stmt 1 view .LVU1944
 5356              		.loc 1 2994 13 is_stmt 0 view .LVU1945
 5357 1012 089B     		ldr	r3, [sp, #32]
 5358 1014 1BB1     		cbz	r3, .L343
 5359              		.loc 1 2994 41 discriminator 1 view .LVU1946
 5360 1016 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
 5361              		.loc 1 2994 34 discriminator 1 view .LVU1947
 5362 101a 012B     		cmp	r3, #1
 5363 101c 11D0     		beq	.L466
 5364              	.L343:
2995:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S8>/SIN_Method' incorporates:
2996:Src/BLDC_controller.c ****      *  ActionPort: '<S96>/Action Port'
2997:Src/BLDC_controller.c ****      */
2998:Src/BLDC_controller.c ****     /* Switch: '<S97>/Switch_PhaAdv' incorporates:
2999:Src/BLDC_controller.c ****      *  Constant: '<S97>/b_fieldWeakEna'
3000:Src/BLDC_controller.c ****      *  Product: '<S98>/Divide2'
3001:Src/BLDC_controller.c ****      *  Product: '<S98>/Divide3'
3002:Src/BLDC_controller.c ****      *  Sum: '<S98>/Sum3'
3003:Src/BLDC_controller.c ****      */
3004:Src/BLDC_controller.c ****     if (rtP->b_fieldWeakEna) {
3005:Src/BLDC_controller.c ****       /* Sum: '<S97>/Sum3' incorporates:
3006:Src/BLDC_controller.c ****        *  Product: '<S97>/Product2'
3007:Src/BLDC_controller.c ****        */
3008:Src/BLDC_controller.c ****       DataTypeConversion2 = (int16_T)((int16_T)((int16_T)(rtDW->Divide3 *
3009:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
3010:Src/BLDC_controller.c ****       DataTypeConversion2 -= (int16_T)((int16_T)((int16_T)div_nde_s32_floor
3011:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
3012:Src/BLDC_controller.c ****     } else {
3013:Src/BLDC_controller.c ****       DataTypeConversion2 = rtb_Merge_m;
3014:Src/BLDC_controller.c ****     }
3015:Src/BLDC_controller.c **** 
3016:Src/BLDC_controller.c ****     /* End of Switch: '<S97>/Switch_PhaAdv' */
3017:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 164


3018:Src/BLDC_controller.c ****     /* PreLookup: '<S96>/a_elecAngle_XA' */
3019:Src/BLDC_controller.c ****     Sum = plook_u8s16_evencka(DataTypeConversion2, 0, 128U, 180U);
3020:Src/BLDC_controller.c **** 
3021:Src/BLDC_controller.c ****     /* Product: '<S96>/Divide2' incorporates:
3022:Src/BLDC_controller.c ****      *  Interpolation_n-D: '<S96>/r_sin3PhaA_M1'
3023:Src/BLDC_controller.c ****      *  Interpolation_n-D: '<S96>/r_sin3PhaB_M1'
3024:Src/BLDC_controller.c ****      *  Interpolation_n-D: '<S96>/r_sin3PhaC_M1'
3025:Src/BLDC_controller.c ****      */
3026:Src/BLDC_controller.c ****     DataTypeConversion2 = (int16_T)((rtb_Saturation *
3027:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaA_M1_Table[Sum]) >> 14);
3028:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)((rtb_Saturation *
3029:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaB_M1_Table[Sum]) >> 14);
3030:Src/BLDC_controller.c ****     rtb_Merge1 = (int16_T)((rtb_Saturation * rtConstP.r_sin3PhaC_M1_Table[Sum]) >>
3031:Src/BLDC_controller.c ****       14);
3032:Src/BLDC_controller.c **** 
3033:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S8>/SIN_Method' */
3034:Src/BLDC_controller.c ****   } else {
3035:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S8>/COM_Method' incorporates:
3036:Src/BLDC_controller.c ****      *  ActionPort: '<S94>/Action Port'
3037:Src/BLDC_controller.c ****      */
3038:Src/BLDC_controller.c ****     if (rtConstP.vec_hallToPos_Value[Sum] > 5) {
 5365              		.loc 1 3038 5 is_stmt 1 view .LVU1948
 5366              		.loc 1 3038 37 is_stmt 0 view .LVU1949
 5367 101e 544B     		ldr	r3, .L475+4
 5368 1020 099A     		ldr	r2, [sp, #36]
 5369 1022 1344     		add	r3, r3, r2
 5370 1024 93F98807 		ldrsb	r0, [r3, #1928]
 5371              		.loc 1 3038 8 view .LVU1950
 5372 1028 0528     		cmp	r0, #5
 5373 102a 50DC     		bgt	.L428
3039:Src/BLDC_controller.c ****       /* LookupNDDirect: '<S94>/z_commutMap_M1'
3040:Src/BLDC_controller.c ****        *
3041:Src/BLDC_controller.c ****        * About '<S94>/z_commutMap_M1':
3042:Src/BLDC_controller.c ****        *  2-dimensional Direct Look-Up returning a Column
3043:Src/BLDC_controller.c ****        */
3044:Src/BLDC_controller.c ****       rtb_Sum2_h = 5;
3045:Src/BLDC_controller.c ****     } else if (rtConstP.vec_hallToPos_Value[Sum] < 0) {
 5374              		.loc 1 3045 12 is_stmt 1 view .LVU1951
 5375              		.loc 1 3045 15 is_stmt 0 view .LVU1952
 5376 102c 0028     		cmp	r0, #0
 5377 102e 4FDA     		bge	.L345
3046:Src/BLDC_controller.c ****       /* LookupNDDirect: '<S94>/z_commutMap_M1'
3047:Src/BLDC_controller.c ****        *
3048:Src/BLDC_controller.c ****        * About '<S94>/z_commutMap_M1':
3049:Src/BLDC_controller.c ****        *  2-dimensional Direct Look-Up returning a Column
3050:Src/BLDC_controller.c ****        */
3051:Src/BLDC_controller.c ****       rtb_Sum2_h = 0;
 5378              		.loc 1 3051 18 view .LVU1953
 5379 1030 0020     		movs	r0, #0
 5380 1032 4DE0     		b	.L345
 5381              	.L465:
2989:Src/BLDC_controller.c ****     rtb_Saturation1 = rtDW->Gain4_e[1];
 5382              		.loc 1 2989 5 is_stmt 1 view .LVU1954
2989:Src/BLDC_controller.c ****     rtb_Saturation1 = rtDW->Gain4_e[1];
 5383              		.loc 1 2989 25 is_stmt 0 view .LVU1955
 5384 1034 B4F94C10 		ldrsh	r1, [r4, #76]
 5385              	.LVL551:
ARM GAS  /tmp/ccVzdWer.s 			page 165


2990:Src/BLDC_controller.c ****     rtb_Merge1 = rtDW->Gain4_e[2];
 5386              		.loc 1 2990 5 is_stmt 1 view .LVU1956
2990:Src/BLDC_controller.c ****     rtb_Merge1 = rtDW->Gain4_e[2];
 5387              		.loc 1 2990 21 is_stmt 0 view .LVU1957
 5388 1038 B4F94E20 		ldrsh	r2, [r4, #78]
 5389              	.LVL552:
2991:Src/BLDC_controller.c **** 
 5390              		.loc 1 2991 5 is_stmt 1 view .LVU1958
2991:Src/BLDC_controller.c **** 
 5391              		.loc 1 2991 16 is_stmt 0 view .LVU1959
 5392 103c B4F95030 		ldrsh	r3, [r4, #80]
 5393              	.LVL553:
2991:Src/BLDC_controller.c **** 
 5394              		.loc 1 2991 16 view .LVU1960
 5395 1040 62E0     		b	.L342
 5396              	.LVL554:
 5397              	.L466:
3004:Src/BLDC_controller.c ****       /* Sum: '<S97>/Sum3' incorporates:
 5398              		.loc 1 3004 5 is_stmt 1 view .LVU1961
3004:Src/BLDC_controller.c ****       /* Sum: '<S97>/Sum3' incorporates:
 5399              		.loc 1 3004 12 is_stmt 0 view .LVU1962
 5400 1042 95F8FE30 		ldrb	r3, [r5, #254]	@ zero_extendqisi2
3004:Src/BLDC_controller.c ****       /* Sum: '<S97>/Sum3' incorporates:
 5401              		.loc 1 3004 8 view .LVU1963
 5402 1046 002B     		cmp	r3, #0
 5403 1048 3FD0     		beq	.L427
3008:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
 5404              		.loc 1 3008 7 is_stmt 1 view .LVU1964
3008:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
 5405              		.loc 1 3008 63 is_stmt 0 view .LVU1965
 5406 104a B4F87230 		ldrh	r3, [r4, #114]
3009:Src/BLDC_controller.c ****       DataTypeConversion2 -= (int16_T)((int16_T)((int16_T)div_nde_s32_floor
 5407              		.loc 1 3009 13 view .LVU1966
 5408 104e 94F98E00 		ldrsb	r0, [r4, #142]
 5409 1052 80B2     		uxth	r0, r0
3008:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
 5410              		.loc 1 3008 73 view .LVU1967
 5411 1054 00FB03F0 		mul	r0, r0, r3
3008:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
 5412              		.loc 1 3008 49 view .LVU1968
 5413 1058 00B2     		sxth	r0, r0
3009:Src/BLDC_controller.c ****       DataTypeConversion2 -= (int16_T)((int16_T)((int16_T)div_nde_s32_floor
 5414              		.loc 1 3009 26 view .LVU1969
 5415 105a 8000     		lsls	r0, r0, #2
3008:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
 5416              		.loc 1 3008 39 view .LVU1970
 5417 105c 80B2     		uxth	r0, r0
3009:Src/BLDC_controller.c ****       DataTypeConversion2 -= (int16_T)((int16_T)((int16_T)div_nde_s32_floor
 5418              		.loc 1 3009 32 view .LVU1971
 5419 105e 0A9B     		ldr	r3, [sp, #40]
 5420 1060 1844     		add	r0, r0, r3
 5421 1062 85B2     		uxth	r5, r0
 5422              	.LVL555:
3010:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5423              		.loc 1 3010 7 is_stmt 1 view .LVU1972
3010:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5424              		.loc 1 3010 59 is_stmt 0 view .LVU1973
ARM GAS  /tmp/ccVzdWer.s 			page 166


 5425 1064 4FF4B441 		mov	r1, #23040
 5426 1068 00B2     		sxth	r0, r0
3010:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5427              		.loc 1 3010 59 view .LVU1974
 5428 106a FFF7FEFF 		bl	div_nde_s32_floor
 5429              	.LVL556:
3010:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5430              		.loc 1 3010 50 view .LVU1975
 5431 106e 80B2     		uxth	r0, r0
3011:Src/BLDC_controller.c ****     } else {
 5432              		.loc 1 3011 38 view .LVU1976
 5433 1070 00EB4000 		add	r0, r0, r0, lsl #1
 5434 1074 C0EB0010 		rsb	r0, r0, r0, lsl #4
 5435 1078 C000     		lsls	r0, r0, #3
3010:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5436              		.loc 1 3010 40 view .LVU1977
 5437 107a 00B2     		sxth	r0, r0
3011:Src/BLDC_controller.c ****     } else {
 5438              		.loc 1 3011 45 view .LVU1978
 5439 107c 8001     		lsls	r0, r0, #6
3010:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5440              		.loc 1 3010 30 view .LVU1979
 5441 107e 80B2     		uxth	r0, r0
3010:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5442              		.loc 1 3010 27 view .LVU1980
 5443 1080 281A     		subs	r0, r5, r0
 5444 1082 00B2     		sxth	r0, r0
 5445              	.LVL557:
 5446              	.L344:
3019:Src/BLDC_controller.c **** 
 5447              		.loc 1 3019 5 is_stmt 1 view .LVU1981
3019:Src/BLDC_controller.c **** 
 5448              		.loc 1 3019 11 is_stmt 0 view .LVU1982
 5449 1084 B423     		movs	r3, #180
 5450 1086 8022     		movs	r2, #128
 5451 1088 0021     		movs	r1, #0
 5452 108a FFF7FEFF 		bl	plook_u8s16_evencka
 5453              	.LVL558:
3026:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaA_M1_Table[Sum]) >> 14);
 5454              		.loc 1 3026 5 is_stmt 1 view .LVU1983
3027:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)((rtb_Saturation *
 5455              		.loc 1 3027 35 is_stmt 0 view .LVU1984
 5456 108e 384B     		ldr	r3, .L475+4
 5457 1090 00F5B472 		add	r2, r0, #360
 5458 1094 03EB4202 		add	r2, r3, r2, lsl #1
 5459 1098 B2F90410 		ldrsh	r1, [r2, #4]
3026:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaA_M1_Table[Sum]) >> 14);
 5460              		.loc 1 3026 53 view .LVU1985
 5461 109c 01FB08F1 		mul	r1, r1, r8
3026:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaA_M1_Table[Sum]) >> 14);
 5462              		.loc 1 3026 25 view .LVU1986
 5463 10a0 41F38F31 		sbfx	r1, r1, #14, #16
 5464              	.LVL559:
3028:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaB_M1_Table[Sum]) >> 14);
 5465              		.loc 1 3028 5 is_stmt 1 view .LVU1987
3029:Src/BLDC_controller.c ****     rtb_Merge1 = (int16_T)((rtb_Saturation * rtConstP.r_sin3PhaC_M1_Table[Sum]) >>
 5466              		.loc 1 3029 35 is_stmt 0 view .LVU1988
ARM GAS  /tmp/ccVzdWer.s 			page 167


 5467 10a4 00F50772 		add	r2, r0, #540
 5468 10a8 03EB4202 		add	r2, r3, r2, lsl #1
 5469 10ac B2F90620 		ldrsh	r2, [r2, #6]
3028:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaB_M1_Table[Sum]) >> 14);
 5470              		.loc 1 3028 49 view .LVU1989
 5471 10b0 02FB08F2 		mul	r2, r2, r8
3028:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaB_M1_Table[Sum]) >> 14);
 5472              		.loc 1 3028 21 view .LVU1990
 5473 10b4 42F38F32 		sbfx	r2, r2, #14, #16
 5474              	.LVL560:
3030:Src/BLDC_controller.c ****       14);
 5475              		.loc 1 3030 5 is_stmt 1 view .LVU1991
3030:Src/BLDC_controller.c ****       14);
 5476              		.loc 1 3030 74 is_stmt 0 view .LVU1992
 5477 10b8 00F53570 		add	r0, r0, #724
 5478              	.LVL561:
3030:Src/BLDC_controller.c ****       14);
 5479              		.loc 1 3030 74 view .LVU1993
 5480 10bc 33F91030 		ldrsh	r3, [r3, r0, lsl #1]
3030:Src/BLDC_controller.c ****       14);
 5481              		.loc 1 3030 44 view .LVU1994
 5482 10c0 03FB08F3 		mul	r3, r3, r8
3030:Src/BLDC_controller.c ****       14);
 5483              		.loc 1 3030 16 view .LVU1995
 5484 10c4 43F38F33 		sbfx	r3, r3, #14, #16
 5485              	.LVL562:
3030:Src/BLDC_controller.c ****       14);
 5486              		.loc 1 3030 16 view .LVU1996
 5487 10c8 1EE0     		b	.L342
 5488              	.LVL563:
 5489              	.L427:
3013:Src/BLDC_controller.c ****     }
 5490              		.loc 1 3013 27 view .LVU1997
 5491 10ca 0A98     		ldr	r0, [sp, #40]
 5492 10cc DAE7     		b	.L344
 5493              	.L428:
3044:Src/BLDC_controller.c ****     } else if (rtConstP.vec_hallToPos_Value[Sum] < 0) {
 5494              		.loc 1 3044 18 view .LVU1998
 5495 10ce 0520     		movs	r0, #5
 5496              	.L345:
 5497              	.LVL564:
3052:Src/BLDC_controller.c ****     } else {
3053:Src/BLDC_controller.c ****       /* LookupNDDirect: '<S94>/z_commutMap_M1' incorporates:
3054:Src/BLDC_controller.c ****        *  Constant: '<S11>/vec_hallToPos'
3055:Src/BLDC_controller.c ****        *  Selector: '<S11>/Selector'
3056:Src/BLDC_controller.c ****        *
3057:Src/BLDC_controller.c ****        * About '<S94>/z_commutMap_M1':
3058:Src/BLDC_controller.c ****        *  2-dimensional Direct Look-Up returning a Column
3059:Src/BLDC_controller.c ****        */
3060:Src/BLDC_controller.c ****       rtb_Sum2_h = rtConstP.vec_hallToPos_Value[Sum];
3061:Src/BLDC_controller.c ****     }
3062:Src/BLDC_controller.c **** 
3063:Src/BLDC_controller.c ****     /* LookupNDDirect: '<S94>/z_commutMap_M1' incorporates:
3064:Src/BLDC_controller.c ****      *  Constant: '<S11>/vec_hallToPos'
3065:Src/BLDC_controller.c ****      *  Selector: '<S11>/Selector'
3066:Src/BLDC_controller.c ****      *
3067:Src/BLDC_controller.c ****      * About '<S94>/z_commutMap_M1':
ARM GAS  /tmp/ccVzdWer.s 			page 168


3068:Src/BLDC_controller.c ****      *  2-dimensional Direct Look-Up returning a Column
3069:Src/BLDC_controller.c ****      */
3070:Src/BLDC_controller.c ****     rtb_Sum1_jt = rtb_Sum2_h * 3;
 5498              		.loc 1 3070 5 is_stmt 1 view .LVU1999
 5499              		.loc 1 3070 17 is_stmt 0 view .LVU2000
 5500 10d0 00EB4000 		add	r0, r0, r0, lsl #1
 5501              	.LVL565:
3071:Src/BLDC_controller.c **** 
3072:Src/BLDC_controller.c ****     /* Product: '<S94>/Divide2' incorporates:
3073:Src/BLDC_controller.c ****      *  LookupNDDirect: '<S94>/z_commutMap_M1'
3074:Src/BLDC_controller.c ****      *
3075:Src/BLDC_controller.c ****      * About '<S94>/z_commutMap_M1':
3076:Src/BLDC_controller.c ****      *  2-dimensional Direct Look-Up returning a Column
3077:Src/BLDC_controller.c ****      */
3078:Src/BLDC_controller.c ****     DataTypeConversion2 = (int16_T)(rtb_Saturation *
 5502              		.loc 1 3078 5 is_stmt 1 view .LVU2001
3079:Src/BLDC_controller.c ****       rtConstP.z_commutMap_M1_table[rtb_Sum1_jt]);
 5503              		.loc 1 3079 36 is_stmt 0 view .LVU2002
 5504 10d4 264B     		ldr	r3, .L475+4
 5505 10d6 1A18     		adds	r2, r3, r0
 5506 10d8 92F97617 		ldrsb	r1, [r2, #1910]
 5507 10dc 89B2     		uxth	r1, r1
3078:Src/BLDC_controller.c ****       rtConstP.z_commutMap_M1_table[rtb_Sum1_jt]);
 5508              		.loc 1 3078 52 view .LVU2003
 5509 10de 1FFA88F5 		uxth	r5, r8
 5510              	.LVL566:
3078:Src/BLDC_controller.c ****       rtConstP.z_commutMap_M1_table[rtb_Sum1_jt]);
 5511              		.loc 1 3078 52 view .LVU2004
 5512 10e2 05FB01F1 		mul	r1, r5, r1
3078:Src/BLDC_controller.c ****       rtConstP.z_commutMap_M1_table[rtb_Sum1_jt]);
 5513              		.loc 1 3078 25 view .LVU2005
 5514 10e6 09B2     		sxth	r1, r1
 5515              	.LVL567:
3080:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)(rtConstP.z_commutMap_M1_table[1 + rtb_Sum1_jt] *
 5516              		.loc 1 3080 5 is_stmt 1 view .LVU2006
 5517              		.loc 1 3080 65 is_stmt 0 view .LVU2007
 5518 10e8 421C     		adds	r2, r0, #1
 5519              		.loc 1 3080 62 view .LVU2008
 5520 10ea 1A44     		add	r2, r2, r3
 5521 10ec 92F97627 		ldrsb	r2, [r2, #1910]
 5522 10f0 92B2     		uxth	r2, r2
 5523              		.loc 1 3080 80 view .LVU2009
 5524 10f2 02FB05F2 		mul	r2, r2, r5
 5525              		.loc 1 3080 21 view .LVU2010
 5526 10f6 12B2     		sxth	r2, r2
 5527              	.LVL568:
3081:Src/BLDC_controller.c ****       rtb_Saturation);
3082:Src/BLDC_controller.c ****     rtb_Merge1 = (int16_T)(rtConstP.z_commutMap_M1_table[2 + rtb_Sum1_jt] *
 5528              		.loc 1 3082 5 is_stmt 1 view .LVU2011
 5529              		.loc 1 3082 60 is_stmt 0 view .LVU2012
 5530 10f8 0230     		adds	r0, r0, #2
 5531              	.LVL569:
 5532              		.loc 1 3082 57 view .LVU2013
 5533 10fa 1844     		add	r0, r0, r3
 5534              	.LVL570:
 5535              		.loc 1 3082 57 view .LVU2014
 5536 10fc 90F97637 		ldrsb	r3, [r0, #1910]
ARM GAS  /tmp/ccVzdWer.s 			page 169


 5537 1100 9BB2     		uxth	r3, r3
 5538              		.loc 1 3082 75 view .LVU2015
 5539 1102 03FB05F3 		mul	r3, r3, r5
 5540              		.loc 1 3082 16 view .LVU2016
 5541 1106 1BB2     		sxth	r3, r3
 5542              	.LVL571:
 5543              	.L342:
3083:Src/BLDC_controller.c ****       rtb_Saturation);
3084:Src/BLDC_controller.c **** 
3085:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S8>/COM_Method' */
3086:Src/BLDC_controller.c ****   }
3087:Src/BLDC_controller.c **** 
3088:Src/BLDC_controller.c ****   /* End of If: '<S8>/If' */
3089:Src/BLDC_controller.c **** 
3090:Src/BLDC_controller.c ****   /* Outport: '<Root>/DC_phaA' incorporates:
3091:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S8>/Data Type Conversion6'
3092:Src/BLDC_controller.c ****    */
3093:Src/BLDC_controller.c ****   rtY->DC_phaA = (int16_T)(DataTypeConversion2 >> 4);
 5544              		.loc 1 3093 3 is_stmt 1 view .LVU2017
 5545              		.loc 1 3093 18 is_stmt 0 view .LVU2018
 5546 1108 0911     		asrs	r1, r1, #4
 5547              	.LVL572:
 5548              		.loc 1 3093 16 view .LVU2019
 5549 110a 3980     		strh	r1, [r7]	@ movhi
3094:Src/BLDC_controller.c **** 
3095:Src/BLDC_controller.c ****   /* Outport: '<Root>/DC_phaB' incorporates:
3096:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S8>/Data Type Conversion6'
3097:Src/BLDC_controller.c ****    */
3098:Src/BLDC_controller.c ****   rtY->DC_phaB = (int16_T)(rtb_Saturation1 >> 4);
 5550              		.loc 1 3098 3 is_stmt 1 view .LVU2020
 5551              		.loc 1 3098 18 is_stmt 0 view .LVU2021
 5552 110c 1211     		asrs	r2, r2, #4
 5553              	.LVL573:
 5554              		.loc 1 3098 16 view .LVU2022
 5555 110e 7A80     		strh	r2, [r7, #2]	@ movhi
3099:Src/BLDC_controller.c **** 
3100:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S10>/UnitDelay3' incorporates:
3101:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallA '
3102:Src/BLDC_controller.c ****    */
3103:Src/BLDC_controller.c ****   rtDW->UnitDelay3_DSTATE_fy = rtU->b_hallA;
 5556              		.loc 1 3103 3 is_stmt 1 view .LVU2023
 5557              		.loc 1 3103 35 is_stmt 0 view .LVU2024
 5558 1110 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
 5559              		.loc 1 3103 30 view .LVU2025
 5560 1112 84F89A20 		strb	r2, [r4, #154]
3104:Src/BLDC_controller.c **** 
3105:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S10>/UnitDelay1' incorporates:
3106:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallB'
3107:Src/BLDC_controller.c ****    */
3108:Src/BLDC_controller.c ****   rtDW->UnitDelay1_DSTATE = rtU->b_hallB;
 5561              		.loc 1 3108 3 is_stmt 1 view .LVU2026
 5562              		.loc 1 3108 32 is_stmt 0 view .LVU2027
 5563 1116 7279     		ldrb	r2, [r6, #5]	@ zero_extendqisi2
 5564              		.loc 1 3108 27 view .LVU2028
 5565 1118 84F89B20 		strb	r2, [r4, #155]
3109:Src/BLDC_controller.c **** 
3110:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S10>/UnitDelay2' incorporates:
ARM GAS  /tmp/ccVzdWer.s 			page 170


3111:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallC'
3112:Src/BLDC_controller.c ****    */
3113:Src/BLDC_controller.c ****   rtDW->UnitDelay2_DSTATE_f = rtU->b_hallC;
 5566              		.loc 1 3113 3 is_stmt 1 view .LVU2029
 5567              		.loc 1 3113 34 is_stmt 0 view .LVU2030
 5568 111c B279     		ldrb	r2, [r6, #6]	@ zero_extendqisi2
 5569              		.loc 1 3113 29 view .LVU2031
 5570 111e 84F89C20 		strb	r2, [r4, #156]
3114:Src/BLDC_controller.c **** 
3115:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S13>/UnitDelay3' */
3116:Src/BLDC_controller.c ****   rtDW->UnitDelay3_DSTATE = rtb_Switch1_l;
 5571              		.loc 1 3116 3 is_stmt 1 view .LVU2032
 5572              		.loc 1 3116 27 is_stmt 0 view .LVU2033
 5573 1122 0C9A     		ldr	r2, [sp, #48]
 5574 1124 A4F88020 		strh	r2, [r4, #128]	@ movhi
3117:Src/BLDC_controller.c **** 
3118:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S13>/UnitDelay4' */
3119:Src/BLDC_controller.c ****   rtDW->UnitDelay4_DSTATE_e = Abs5;
 5575              		.loc 1 3119 3 is_stmt 1 view .LVU2034
 5576              		.loc 1 3119 29 is_stmt 0 view .LVU2035
 5577 1128 079A     		ldr	r2, [sp, #28]
 5578 112a A4F88A20 		strh	r2, [r4, #138]	@ movhi
3120:Src/BLDC_controller.c **** 
3121:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S2>/UnitDelay2' incorporates:
3122:Src/BLDC_controller.c ****    *  UnitDelay: '<S2>/UnitDelay6'
3123:Src/BLDC_controller.c ****    */
3124:Src/BLDC_controller.c ****   rtDW->UnitDelay2_DSTATE_c = rtDW->UnitDelay6_DSTATE;
 5579              		.loc 1 3124 3 is_stmt 1 view .LVU2036
 5580              		.loc 1 3124 35 is_stmt 0 view .LVU2037
 5581 112e 94F8A520 		ldrb	r2, [r4, #165]	@ zero_extendqisi2
 5582              		.loc 1 3124 29 view .LVU2038
 5583 1132 84F8A320 		strb	r2, [r4, #163]
3125:Src/BLDC_controller.c **** 
3126:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S2>/UnitDelay5' */
3127:Src/BLDC_controller.c ****   rtDW->UnitDelay5_DSTATE_m = rtb_RelationalOperator4_d;
 5584              		.loc 1 3127 3 is_stmt 1 view .LVU2039
 5585              		.loc 1 3127 29 is_stmt 0 view .LVU2040
 5586 1136 0D9A     		ldr	r2, [sp, #52]
 5587 1138 84F8A420 		strb	r2, [r4, #164]
3128:Src/BLDC_controller.c **** 
3129:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S2>/UnitDelay6' */
3130:Src/BLDC_controller.c ****   rtDW->UnitDelay6_DSTATE = rtb_UnitDelay5_e;
 5588              		.loc 1 3130 3 is_stmt 1 view .LVU2041
 5589              		.loc 1 3130 27 is_stmt 0 view .LVU2042
 5590 113c 0E9A     		ldr	r2, [sp, #56]
 5591 113e 84F8A520 		strb	r2, [r4, #165]
3131:Src/BLDC_controller.c **** 
3132:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S8>/UnitDelay4' */
3133:Src/BLDC_controller.c ****   rtDW->UnitDelay4_DSTATE_eu = rtb_Saturation;
 5592              		.loc 1 3133 3 is_stmt 1 view .LVU2043
 5593              		.loc 1 3133 30 is_stmt 0 view .LVU2044
 5594 1142 A4F88C80 		strh	r8, [r4, #140]	@ movhi
3134:Src/BLDC_controller.c **** 
3135:Src/BLDC_controller.c ****   /* Outport: '<Root>/DC_phaC' incorporates:
3136:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S8>/Data Type Conversion6'
3137:Src/BLDC_controller.c ****    */
3138:Src/BLDC_controller.c ****   rtY->DC_phaC = (int16_T)(rtb_Merge1 >> 4);
ARM GAS  /tmp/ccVzdWer.s 			page 171


 5595              		.loc 1 3138 3 is_stmt 1 view .LVU2045
 5596              		.loc 1 3138 18 is_stmt 0 view .LVU2046
 5597 1146 1B11     		asrs	r3, r3, #4
 5598              	.LVL574:
 5599              		.loc 1 3138 16 view .LVU2047
 5600 1148 BB80     		strh	r3, [r7, #4]	@ movhi
3139:Src/BLDC_controller.c **** 
3140:Src/BLDC_controller.c ****   /* Outport: '<Root>/n_mot' incorporates:
3141:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S1>/Data Type Conversion1'
3142:Src/BLDC_controller.c ****    */
3143:Src/BLDC_controller.c ****   rtY->n_mot = (int16_T)(Switch2 >> 4);
 5601              		.loc 1 3143 3 is_stmt 1 view .LVU2048
 5602              		.loc 1 3143 16 is_stmt 0 view .LVU2049
 5603 114a 0B9B     		ldr	r3, [sp, #44]
 5604 114c 1B11     		asrs	r3, r3, #4
 5605              		.loc 1 3143 14 view .LVU2050
 5606 114e 3B81     		strh	r3, [r7, #8]	@ movhi
3144:Src/BLDC_controller.c **** 
3145:Src/BLDC_controller.c ****   /* Outport: '<Root>/a_elecAngle' incorporates:
3146:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S1>/Data Type Conversion3'
3147:Src/BLDC_controller.c ****    */
3148:Src/BLDC_controller.c ****   rtY->a_elecAngle = (int16_T)(rtb_Merge_m >> 6);
 5607              		.loc 1 3148 3 is_stmt 1 view .LVU2051
 5608              		.loc 1 3148 22 is_stmt 0 view .LVU2052
 5609 1150 0A9B     		ldr	r3, [sp, #40]
 5610 1152 4FEAA319 		asr	r9, r3, #6
 5611              		.loc 1 3148 20 view .LVU2053
 5612 1156 A7F80A90 		strh	r9, [r7, #10]	@ movhi
3149:Src/BLDC_controller.c **** 
3150:Src/BLDC_controller.c ****   /* End of Outputs for SubSystem: '<Root>/BLDC_controller' */
3151:Src/BLDC_controller.c **** 
3152:Src/BLDC_controller.c ****   /* Outport: '<Root>/iq' */
3153:Src/BLDC_controller.c ****   rtY->iq = rtDW->DataTypeConversion[0];
 5613              		.loc 1 3153 3 is_stmt 1 view .LVU2054
 5614              		.loc 1 3153 37 is_stmt 0 view .LVU2055
 5615 115a B4F95230 		ldrsh	r3, [r4, #82]
 5616              		.loc 1 3153 11 view .LVU2056
 5617 115e BB81     		strh	r3, [r7, #12]	@ movhi
3154:Src/BLDC_controller.c **** 
3155:Src/BLDC_controller.c ****   /* Outport: '<Root>/id' */
3156:Src/BLDC_controller.c ****   rtY->id = rtDW->DataTypeConversion[1];
 5618              		.loc 1 3156 3 is_stmt 1 view .LVU2057
 5619              		.loc 1 3156 37 is_stmt 0 view .LVU2058
 5620 1160 B4F95430 		ldrsh	r3, [r4, #84]
 5621              		.loc 1 3156 11 view .LVU2059
 5622 1164 FB81     		strh	r3, [r7, #14]	@ movhi
3157:Src/BLDC_controller.c **** }
 5623              		.loc 1 3157 1 view .LVU2060
 5624 1166 15B0     		add	sp, sp, #84
 5625              	.LCFI18:
 5626              		.cfi_def_cfa_offset 36
 5627              		@ sp needed
 5628 1168 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5629              	.LVL575:
 5630              	.L476:
 5631              		.loc 1 3157 1 view .LVU2061
 5632              		.align	2
ARM GAS  /tmp/ccVzdWer.s 			page 172


 5633              	.L475:
 5634 116c 0080FFFF 		.word	-32768
 5635 1170 00000000 		.word	rtConstP
 5636              		.cfi_endproc
 5637              	.LFE24:
 5639              		.section	.text.BLDC_controller_initialize,"ax",%progbits
 5640              		.align	1
 5641              		.global	BLDC_controller_initialize
 5642              		.syntax unified
 5643              		.thumb
 5644              		.thumb_func
 5645              		.fpu softvfp
 5647              	BLDC_controller_initialize:
 5648              	.LVL576:
 5649              	.LFB25:
3158:Src/BLDC_controller.c **** 
3159:Src/BLDC_controller.c **** /* Model initialize function */
3160:Src/BLDC_controller.c **** void BLDC_controller_initialize(RT_MODEL *const rtM)
3161:Src/BLDC_controller.c **** {
 5650              		.loc 1 3161 1 is_stmt 1 view -0
 5651              		.cfi_startproc
 5652              		@ args = 0, pretend = 0, frame = 0
 5653              		@ frame_needed = 0, uses_anonymous_args = 0
 5654              		.loc 1 3161 1 is_stmt 0 view .LVU2063
 5655 0000 38B5     		push	{r3, r4, r5, lr}
 5656              	.LCFI19:
 5657              		.cfi_def_cfa_offset 16
 5658              		.cfi_offset 3, -16
 5659              		.cfi_offset 4, -12
 5660              		.cfi_offset 5, -8
 5661              		.cfi_offset 14, -4
3162:Src/BLDC_controller.c ****   P *rtP = ((P *) rtM->defaultParam);
 5662              		.loc 1 3162 3 is_stmt 1 view .LVU2064
 5663              		.loc 1 3162 6 is_stmt 0 view .LVU2065
 5664 0002 0268     		ldr	r2, [r0]
 5665              	.LVL577:
3163:Src/BLDC_controller.c ****   DW *rtDW = ((DW *) rtM->dwork);
 5666              		.loc 1 3163 3 is_stmt 1 view .LVU2066
 5667              		.loc 1 3163 7 is_stmt 0 view .LVU2067
 5668 0004 C468     		ldr	r4, [r0, #12]
 5669              	.LVL578:
3164:Src/BLDC_controller.c **** 
3165:Src/BLDC_controller.c ****   /* Start for Atomic SubSystem: '<Root>/BLDC_controller' */
3166:Src/BLDC_controller.c ****   /* Start for If: '<S7>/If1' */
3167:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem = -1;
 5670              		.loc 1 3167 3 is_stmt 1 view .LVU2068
 5671              		.loc 1 3167 29 is_stmt 0 view .LVU2069
 5672 0006 FF23     		movs	r3, #255
 5673 0008 84F89030 		strb	r3, [r4, #144]
3168:Src/BLDC_controller.c **** 
3169:Src/BLDC_controller.c ****   /* Start for IfAction SubSystem: '<S7>/Clarke_Park_Transform_Forward' */
3170:Src/BLDC_controller.c ****   /* Start for If: '<S45>/If2' */
3171:Src/BLDC_controller.c ****   rtDW->If2_ActiveSubsystem_a = -1;
 5674              		.loc 1 3171 3 is_stmt 1 view .LVU2070
 5675              		.loc 1 3171 31 is_stmt 0 view .LVU2071
 5676 000c 84F89830 		strb	r3, [r4, #152]
3172:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 173


3173:Src/BLDC_controller.c ****   /* End of Start for SubSystem: '<S7>/Clarke_Park_Transform_Forward' */
3174:Src/BLDC_controller.c **** 
3175:Src/BLDC_controller.c ****   /* Start for Chart: '<S1>/Task_Scheduler' incorporates:
3176:Src/BLDC_controller.c ****    *  SubSystem: '<S1>/F03_Control_Mode_Manager'
3177:Src/BLDC_controller.c ****    */
3178:Src/BLDC_controller.c ****   /* Start for If: '<S33>/If2' */
3179:Src/BLDC_controller.c ****   rtDW->If2_ActiveSubsystem_f = -1;
 5677              		.loc 1 3179 3 is_stmt 1 view .LVU2072
 5678              		.loc 1 3179 31 is_stmt 0 view .LVU2073
 5679 0010 84F89730 		strb	r3, [r4, #151]
3180:Src/BLDC_controller.c **** 
3181:Src/BLDC_controller.c ****   /* Start for Chart: '<S1>/Task_Scheduler' incorporates:
3182:Src/BLDC_controller.c ****    *  SubSystem: '<S7>/Motor_Limitations'
3183:Src/BLDC_controller.c ****    */
3184:Src/BLDC_controller.c ****   /* Start for If: '<S48>/If1' */
3185:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem_o = -1;
 5680              		.loc 1 3185 3 is_stmt 1 view .LVU2074
 5681              		.loc 1 3185 31 is_stmt 0 view .LVU2075
 5682 0014 84F89530 		strb	r3, [r4, #149]
3186:Src/BLDC_controller.c **** 
3187:Src/BLDC_controller.c ****   /* Start for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' */
3188:Src/BLDC_controller.c ****   /* Start for SwitchCase: '<S80>/Switch Case' */
3189:Src/BLDC_controller.c ****   rtDW->SwitchCase_ActiveSubsystem_d = -1;
 5683              		.loc 1 3189 3 is_stmt 1 view .LVU2076
 5684              		.loc 1 3189 38 is_stmt 0 view .LVU2077
 5685 0018 84F89630 		strb	r3, [r4, #150]
3190:Src/BLDC_controller.c **** 
3191:Src/BLDC_controller.c ****   /* End of Start for SubSystem: '<S48>/Motor_Limitations_Enabled' */
3192:Src/BLDC_controller.c **** 
3193:Src/BLDC_controller.c ****   /* Start for Chart: '<S1>/Task_Scheduler' incorporates:
3194:Src/BLDC_controller.c ****    *  SubSystem: '<S7>/FOC'
3195:Src/BLDC_controller.c ****    */
3196:Src/BLDC_controller.c ****   /* Start for If: '<S47>/If1' */
3197:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem_j = -1;
 5686              		.loc 1 3197 3 is_stmt 1 view .LVU2078
 5687              		.loc 1 3197 31 is_stmt 0 view .LVU2079
 5688 001c 84F89230 		strb	r3, [r4, #146]
3198:Src/BLDC_controller.c **** 
3199:Src/BLDC_controller.c ****   /* Start for IfAction SubSystem: '<S47>/FOC_Enabled' */
3200:Src/BLDC_controller.c ****   /* Start for SwitchCase: '<S59>/Switch Case' */
3201:Src/BLDC_controller.c ****   rtDW->SwitchCase_ActiveSubsystem = -1;
 5689              		.loc 1 3201 3 is_stmt 1 view .LVU2080
 5690              		.loc 1 3201 36 is_stmt 0 view .LVU2081
 5691 0020 84F89330 		strb	r3, [r4, #147]
3202:Src/BLDC_controller.c **** 
3203:Src/BLDC_controller.c ****   /* Start for If: '<S59>/If1' */
3204:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem_a = -1;
 5692              		.loc 1 3204 3 is_stmt 1 view .LVU2082
 5693              		.loc 1 3204 31 is_stmt 0 view .LVU2083
 5694 0024 84F89430 		strb	r3, [r4, #148]
3205:Src/BLDC_controller.c **** 
3206:Src/BLDC_controller.c ****   /* End of Start for SubSystem: '<S47>/FOC_Enabled' */
3207:Src/BLDC_controller.c **** 
3208:Src/BLDC_controller.c ****   /* Start for If: '<S7>/If2' */
3209:Src/BLDC_controller.c ****   rtDW->If2_ActiveSubsystem = -1;
 5695              		.loc 1 3209 3 is_stmt 1 view .LVU2084
 5696              		.loc 1 3209 29 is_stmt 0 view .LVU2085
ARM GAS  /tmp/ccVzdWer.s 			page 174


 5697 0028 84F89130 		strb	r3, [r4, #145]
3210:Src/BLDC_controller.c **** 
3211:Src/BLDC_controller.c ****   /* End of Start for SubSystem: '<Root>/BLDC_controller' */
3212:Src/BLDC_controller.c **** 
3213:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<Root>/BLDC_controller' */
3214:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S13>/UnitDelay3' */
3215:Src/BLDC_controller.c ****   rtDW->UnitDelay3_DSTATE = rtP->z_maxCntRst;
 5698              		.loc 1 3215 3 is_stmt 1 view .LVU2086
 5699              		.loc 1 3215 32 is_stmt 0 view .LVU2087
 5700 002c B2F90A30 		ldrsh	r3, [r2, #10]
 5701              		.loc 1 3215 27 view .LVU2088
 5702 0030 A4F88030 		strh	r3, [r4, #128]	@ movhi
3216:Src/BLDC_controller.c **** 
3217:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S2>/UnitDelay2' */
3218:Src/BLDC_controller.c ****   rtDW->UnitDelay2_DSTATE_c = true;
 5703              		.loc 1 3218 3 is_stmt 1 view .LVU2089
 5704              		.loc 1 3218 29 is_stmt 0 view .LVU2090
 5705 0034 0125     		movs	r5, #1
 5706 0036 84F8A350 		strb	r5, [r4, #163]
3219:Src/BLDC_controller.c **** 
3220:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S13>/Raw_Motor_Speed_Estimation' */
3221:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S17>/z_counter' */
3222:Src/BLDC_controller.c ****   rtDW->z_counterRawPrev = rtP->z_maxCntRst;
 5707              		.loc 1 3222 3 is_stmt 1 view .LVU2091
 5708              		.loc 1 3222 31 is_stmt 0 view .LVU2092
 5709 003a B2F90A10 		ldrsh	r1, [r2, #10]
 5710              		.loc 1 3222 26 view .LVU2093
 5711 003e A4F85610 		strh	r1, [r4, #86]	@ movhi
3223:Src/BLDC_controller.c **** 
3224:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S13>/Raw_Motor_Speed_Estimation' */
3225:Src/BLDC_controller.c **** 
3226:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S13>/Counter' */
3227:Src/BLDC_controller.c ****   Counter_Init(&rtDW->Counter_e, rtP->z_maxCntRst);
 5712              		.loc 1 3227 3 is_stmt 1 view .LVU2094
 5713 0042 04F14000 		add	r0, r4, #64
 5714              	.LVL579:
 5715              		.loc 1 3227 3 is_stmt 0 view .LVU2095
 5716 0046 FFF7FEFF 		bl	Counter_Init
 5717              	.LVL580:
3228:Src/BLDC_controller.c **** 
3229:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S13>/Counter' */
3230:Src/BLDC_controller.c **** 
3231:Src/BLDC_controller.c ****   /* SystemInitialize for Chart: '<S1>/Task_Scheduler' incorporates:
3232:Src/BLDC_controller.c ****    *  SubSystem: '<S1>/F02_Diagnostics'
3233:Src/BLDC_controller.c ****    */
3234:Src/BLDC_controller.c **** 
3235:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S4>/Diagnostics_Enabled' */
3236:Src/BLDC_controller.c **** 
3237:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S20>/Debounce_Filter' */
3238:Src/BLDC_controller.c ****   Debounce_Filter_Init(&rtDW->Debounce_Filter_k);
 5718              		.loc 1 3238 3 is_stmt 1 view .LVU2096
 5719 004a 04F12E00 		add	r0, r4, #46
 5720 004e FFF7FEFF 		bl	Debounce_Filter_Init
 5721              	.LVL581:
3239:Src/BLDC_controller.c **** 
3240:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S20>/Debounce_Filter' */
3241:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 175


3242:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S4>/Diagnostics_Enabled' */
3243:Src/BLDC_controller.c **** 
3244:Src/BLDC_controller.c ****   /* SystemInitialize for Chart: '<S1>/Task_Scheduler' incorporates:
3245:Src/BLDC_controller.c ****    *  SubSystem: '<S1>/F03_Control_Mode_Manager'
3246:Src/BLDC_controller.c ****    */
3247:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S33>/Open_Mode' */
3248:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S37>/rising_edge_init' */
3249:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S39>/UnitDelay' */
3250:Src/BLDC_controller.c ****   rtDW->UnitDelay_DSTATE_b = true;
 5722              		.loc 1 3250 3 view .LVU2097
 5723              		.loc 1 3250 28 is_stmt 0 view .LVU2098
 5724 0052 84F8A650 		strb	r5, [r4, #166]
3251:Src/BLDC_controller.c **** 
3252:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S37>/rising_edge_init' */
3253:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S33>/Open_Mode' */
3254:Src/BLDC_controller.c **** 
3255:Src/BLDC_controller.c ****   /* SystemInitialize for Chart: '<S1>/Task_Scheduler' incorporates:
3256:Src/BLDC_controller.c ****    *  SubSystem: '<S7>/Motor_Limitations'
3257:Src/BLDC_controller.c ****    */
3258:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' */
3259:Src/BLDC_controller.c **** 
3260:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' */
3261:Src/BLDC_controller.c **** 
3262:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S83>/I_backCalc_fixdt' */
3263:Src/BLDC_controller.c ****   I_backCalc_fixdt_Init(&rtDW->I_backCalc_fixdt_i, 65536000);
 5725              		.loc 1 3263 3 is_stmt 1 view .LVU2099
 5726 0056 4FF07A71 		mov	r1, #65536000
 5727 005a 04F12400 		add	r0, r4, #36
 5728 005e FFF7FEFF 		bl	I_backCalc_fixdt_Init
 5729              	.LVL582:
3264:Src/BLDC_controller.c **** 
3265:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S83>/I_backCalc_fixdt' */
3266:Src/BLDC_controller.c **** 
3267:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S83>/I_backCalc_fixdt1' */
3268:Src/BLDC_controller.c ****   I_backCalc_fixdt_Init(&rtDW->I_backCalc_fixdt1, 65536000);
 5730              		.loc 1 3268 3 view .LVU2100
 5731 0062 4FF07A71 		mov	r1, #65536000
 5732 0066 04F11C00 		add	r0, r4, #28
 5733 006a FFF7FEFF 		bl	I_backCalc_fixdt_Init
 5734              	.LVL583:
3269:Src/BLDC_controller.c **** 
3270:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S83>/I_backCalc_fixdt1' */
3271:Src/BLDC_controller.c **** 
3272:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S80>/Voltage_Mode_Protection' */
3273:Src/BLDC_controller.c **** 
3274:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S80>/Torque_Mode_Protection' */
3275:Src/BLDC_controller.c **** 
3276:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S82>/I_backCalc_fixdt' */
3277:Src/BLDC_controller.c ****   I_backCalc_fixdt_Init(&rtDW->I_backCalc_fixdt_j, 58982400);
 5735              		.loc 1 3277 3 view .LVU2101
 5736 006e 4FF06171 		mov	r1, #58982400
 5737 0072 04F11400 		add	r0, r4, #20
 5738 0076 FFF7FEFF 		bl	I_backCalc_fixdt_Init
 5739              	.LVL584:
3278:Src/BLDC_controller.c **** 
3279:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S82>/I_backCalc_fixdt' */
3280:Src/BLDC_controller.c **** 
ARM GAS  /tmp/ccVzdWer.s 			page 176


3281:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S80>/Torque_Mode_Protection' */
3282:Src/BLDC_controller.c **** 
3283:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/Vd_max' */
3284:Src/BLDC_controller.c ****   rtDW->Vd_max1 = 14400;
 5740              		.loc 1 3284 3 view .LVU2102
 5741              		.loc 1 3284 17 is_stmt 0 view .LVU2103
 5742 007a 4FF46152 		mov	r2, #14400
 5743 007e A4F85C20 		strh	r2, [r4, #92]	@ movhi
3285:Src/BLDC_controller.c **** 
3286:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/Vd_min' */
3287:Src/BLDC_controller.c ****   rtDW->Gain3 = -14400;
 5744              		.loc 1 3287 3 is_stmt 1 view .LVU2104
 5745              		.loc 1 3287 15 is_stmt 0 view .LVU2105
 5746 0082 4CF2C073 		movw	r3, #51136
 5747 0086 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3288:Src/BLDC_controller.c **** 
3289:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/Vq_max' */
3290:Src/BLDC_controller.c ****   rtDW->Vq_max_M1 = 14400;
 5748              		.loc 1 3290 3 is_stmt 1 view .LVU2106
 5749              		.loc 1 3290 19 is_stmt 0 view .LVU2107
 5750 008a A4F86020 		strh	r2, [r4, #96]	@ movhi
3291:Src/BLDC_controller.c **** 
3292:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/Vq_min' */
3293:Src/BLDC_controller.c ****   rtDW->Gain5 = -14400;
 5751              		.loc 1 3293 3 is_stmt 1 view .LVU2108
 5752              		.loc 1 3293 15 is_stmt 0 view .LVU2109
 5753 008e A4F86230 		strh	r3, [r4, #98]	@ movhi
3294:Src/BLDC_controller.c **** 
3295:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/id_max' */
3296:Src/BLDC_controller.c ****   rtDW->i_max = 12000;
 5754              		.loc 1 3296 3 is_stmt 1 view .LVU2110
 5755              		.loc 1 3296 15 is_stmt 0 view .LVU2111
 5756 0092 42F6E062 		movw	r2, #12000
 5757 0096 A4F86420 		strh	r2, [r4, #100]	@ movhi
3297:Src/BLDC_controller.c **** 
3298:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/id_min' */
3299:Src/BLDC_controller.c ****   rtDW->Gain4 = -12000;
 5758              		.loc 1 3299 3 is_stmt 1 view .LVU2112
 5759              		.loc 1 3299 15 is_stmt 0 view .LVU2113
 5760 009a 4DF22013 		movw	r3, #53536
 5761 009e A4F86A30 		strh	r3, [r4, #106]	@ movhi
3300:Src/BLDC_controller.c **** 
3301:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/iq_max' */
3302:Src/BLDC_controller.c ****   rtDW->Divide1_n = 12000;
 5762              		.loc 1 3302 3 is_stmt 1 view .LVU2114
 5763              		.loc 1 3302 19 is_stmt 0 view .LVU2115
 5764 00a2 A4F86620 		strh	r2, [r4, #102]	@ movhi
3303:Src/BLDC_controller.c **** 
3304:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/iq_min' */
3305:Src/BLDC_controller.c ****   rtDW->Gain1 = -12000;
 5765              		.loc 1 3305 3 is_stmt 1 view .LVU2116
 5766              		.loc 1 3305 15 is_stmt 0 view .LVU2117
 5767 00a6 A4F86830 		strh	r3, [r4, #104]	@ movhi
3306:Src/BLDC_controller.c **** 
3307:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S48>/Motor_Limitations_Enabled' */
3308:Src/BLDC_controller.c **** 
3309:Src/BLDC_controller.c ****   /* SystemInitialize for Chart: '<S1>/Task_Scheduler' incorporates:
ARM GAS  /tmp/ccVzdWer.s 			page 177


3310:Src/BLDC_controller.c ****    *  SubSystem: '<S7>/FOC'
3311:Src/BLDC_controller.c ****    */
3312:Src/BLDC_controller.c **** 
3313:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S47>/FOC_Enabled' */
3314:Src/BLDC_controller.c **** 
3315:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S59>/Speed_Mode' */
3316:Src/BLDC_controller.c **** 
3317:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S61>/PI_clamp_fixdt' */
3318:Src/BLDC_controller.c ****   PI_clamp_fixdt_d_Init(&rtDW->PI_clamp_fixdt_l4);
 5768              		.loc 1 3318 3 is_stmt 1 view .LVU2118
 5769 00aa 201D     		adds	r0, r4, #4
 5770 00ac FFF7FEFF 		bl	PI_clamp_fixdt_d_Init
 5771              	.LVL585:
3319:Src/BLDC_controller.c **** 
3320:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S61>/PI_clamp_fixdt' */
3321:Src/BLDC_controller.c **** 
3322:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S59>/Speed_Mode' */
3323:Src/BLDC_controller.c **** 
3324:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S59>/Torque_Mode' */
3325:Src/BLDC_controller.c **** 
3326:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S62>/PI_clamp_fixdt' */
3327:Src/BLDC_controller.c ****   PI_clamp_fixdt_f_Init(&rtDW->PI_clamp_fixdt_kh);
 5772              		.loc 1 3327 3 view .LVU2119
 5773 00b0 2046     		mov	r0, r4
 5774 00b2 FFF7FEFF 		bl	PI_clamp_fixdt_f_Init
 5775              	.LVL586:
3328:Src/BLDC_controller.c **** 
3329:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S62>/PI_clamp_fixdt' */
3330:Src/BLDC_controller.c **** 
3331:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S59>/Torque_Mode' */
3332:Src/BLDC_controller.c **** 
3333:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S59>/Vd_Calculation' */
3334:Src/BLDC_controller.c **** 
3335:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S63>/PI_clamp_fixdt' */
3336:Src/BLDC_controller.c ****   PI_clamp_fixdt_Init(&rtDW->PI_clamp_fixdt_i);
 5776              		.loc 1 3336 3 view .LVU2120
 5777 00b6 04F10C00 		add	r0, r4, #12
 5778 00ba FFF7FEFF 		bl	PI_clamp_fixdt_Init
 5779              	.LVL587:
3337:Src/BLDC_controller.c **** 
3338:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S63>/PI_clamp_fixdt' */
3339:Src/BLDC_controller.c **** 
3340:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S59>/Vd_Calculation' */
3341:Src/BLDC_controller.c **** 
3342:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S47>/FOC_Enabled' */
3343:Src/BLDC_controller.c **** 
3344:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<Root>/BLDC_controller' */
3345:Src/BLDC_controller.c **** }
 5780              		.loc 1 3345 1 is_stmt 0 view .LVU2121
 5781 00be 38BD     		pop	{r3, r4, r5, pc}
 5782              		.loc 1 3345 1 view .LVU2122
 5783              		.cfi_endproc
 5784              	.LFE25:
 5786              		.text
 5787              	.Letext0:
 5788              		.file 2 "Inc/rtwtypes.h"
 5789              		.file 3 "Inc/BLDC_controller.h"
ARM GAS  /tmp/ccVzdWer.s 			page 178


ARM GAS  /tmp/ccVzdWer.s 			page 179


DEFINED SYMBOLS
                            *ABS*:0000000000000000 BLDC_controller.c
     /tmp/ccVzdWer.s:16     .text.plook_u8s16_evencka:0000000000000000 $t
     /tmp/ccVzdWer.s:24     .text.plook_u8s16_evencka:0000000000000000 plook_u8s16_evencka
     /tmp/ccVzdWer.s:78     .text.plook_u8u16_evencka:0000000000000000 $t
     /tmp/ccVzdWer.s:85     .text.plook_u8u16_evencka:0000000000000000 plook_u8u16_evencka
     /tmp/ccVzdWer.s:138    .text.div_nde_s32_floor:0000000000000000 $t
     /tmp/ccVzdWer.s:145    .text.div_nde_s32_floor:0000000000000000 div_nde_s32_floor
     /tmp/ccVzdWer.s:180    .text.Counter_Init:0000000000000000 $t
     /tmp/ccVzdWer.s:187    .text.Counter_Init:0000000000000000 Counter_Init
     /tmp/ccVzdWer.s:204    .text.Counter:0000000000000000 $t
     /tmp/ccVzdWer.s:211    .text.Counter:0000000000000000 Counter
     /tmp/ccVzdWer.s:263    .text.Low_Pass_Filter_Reset:0000000000000000 $t
     /tmp/ccVzdWer.s:270    .text.Low_Pass_Filter_Reset:0000000000000000 Low_Pass_Filter_Reset
     /tmp/ccVzdWer.s:291    .text.Low_Pass_Filter:0000000000000000 $t
     /tmp/ccVzdWer.s:298    .text.Low_Pass_Filter:0000000000000000 Low_Pass_Filter
     /tmp/ccVzdWer.s:403    .text.Low_Pass_Filter:0000000000000058 $d
     /tmp/ccVzdWer.s:408    .text.Counter_b_Init:0000000000000000 $t
     /tmp/ccVzdWer.s:415    .text.Counter_b_Init:0000000000000000 Counter_b_Init
     /tmp/ccVzdWer.s:432    .text.Counter_n:0000000000000000 $t
     /tmp/ccVzdWer.s:439    .text.Counter_n:0000000000000000 Counter_n
     /tmp/ccVzdWer.s:507    .text.either_edge:0000000000000000 $t
     /tmp/ccVzdWer.s:514    .text.either_edge:0000000000000000 either_edge
     /tmp/ccVzdWer.s:540    .text.Debounce_Filter_Init:0000000000000000 $t
     /tmp/ccVzdWer.s:547    .text.Debounce_Filter_Init:0000000000000000 Debounce_Filter_Init
     /tmp/ccVzdWer.s:580    .text.Debounce_Filter:0000000000000000 $t
     /tmp/ccVzdWer.s:587    .text.Debounce_Filter:0000000000000000 Debounce_Filter
     /tmp/ccVzdWer.s:726    .text.I_backCalc_fixdt_Init:0000000000000000 $t
     /tmp/ccVzdWer.s:733    .text.I_backCalc_fixdt_Init:0000000000000000 I_backCalc_fixdt_Init
     /tmp/ccVzdWer.s:750    .text.I_backCalc_fixdt_Reset:0000000000000000 $t
     /tmp/ccVzdWer.s:757    .text.I_backCalc_fixdt_Reset:0000000000000000 I_backCalc_fixdt_Reset
     /tmp/ccVzdWer.s:778    .text.I_backCalc_fixdt:0000000000000000 $t
     /tmp/ccVzdWer.s:785    .text.I_backCalc_fixdt:0000000000000000 I_backCalc_fixdt
     /tmp/ccVzdWer.s:924    .text.PI_clamp_fixdt_Init:0000000000000000 $t
     /tmp/ccVzdWer.s:931    .text.PI_clamp_fixdt_Init:0000000000000000 PI_clamp_fixdt_Init
     /tmp/ccVzdWer.s:949    .text.PI_clamp_fixdt_Reset:0000000000000000 $t
     /tmp/ccVzdWer.s:956    .text.PI_clamp_fixdt_Reset:0000000000000000 PI_clamp_fixdt_Reset
     /tmp/ccVzdWer.s:978    .text.PI_clamp_fixdt:0000000000000000 $t
     /tmp/ccVzdWer.s:985    .text.PI_clamp_fixdt:0000000000000000 PI_clamp_fixdt
     /tmp/ccVzdWer.s:1254   .text.PI_clamp_fixdt:00000000000000ec $d
     /tmp/ccVzdWer.s:1259   .text.PI_clamp_fixdt_d_Init:0000000000000000 $t
     /tmp/ccVzdWer.s:1266   .text.PI_clamp_fixdt_d_Init:0000000000000000 PI_clamp_fixdt_d_Init
     /tmp/ccVzdWer.s:1284   .text.PI_clamp_fixdt_b_Reset:0000000000000000 $t
     /tmp/ccVzdWer.s:1291   .text.PI_clamp_fixdt_b_Reset:0000000000000000 PI_clamp_fixdt_b_Reset
     /tmp/ccVzdWer.s:1313   .text.PI_clamp_fixdt_l:0000000000000000 $t
     /tmp/ccVzdWer.s:1320   .text.PI_clamp_fixdt_l:0000000000000000 PI_clamp_fixdt_l
     /tmp/ccVzdWer.s:1591   .text.PI_clamp_fixdt_l:00000000000000f0 $d
     /tmp/ccVzdWer.s:1596   .text.PI_clamp_fixdt_f_Init:0000000000000000 $t
     /tmp/ccVzdWer.s:1603   .text.PI_clamp_fixdt_f_Init:0000000000000000 PI_clamp_fixdt_f_Init
     /tmp/ccVzdWer.s:1621   .text.PI_clamp_fixdt_g_Reset:0000000000000000 $t
     /tmp/ccVzdWer.s:1628   .text.PI_clamp_fixdt_g_Reset:0000000000000000 PI_clamp_fixdt_g_Reset
     /tmp/ccVzdWer.s:1650   .text.PI_clamp_fixdt_k:0000000000000000 $t
     /tmp/ccVzdWer.s:1657   .text.PI_clamp_fixdt_k:0000000000000000 PI_clamp_fixdt_k
     /tmp/ccVzdWer.s:1936   .text.PI_clamp_fixdt_k:00000000000000f4 $d
     /tmp/ccVzdWer.s:1941   .text.BLDC_controller_step:0000000000000000 $t
     /tmp/ccVzdWer.s:1948   .text.BLDC_controller_step:0000000000000000 BLDC_controller_step
     /tmp/ccVzdWer.s:2733   .text.BLDC_controller_step:0000000000000368 $d
ARM GAS  /tmp/ccVzdWer.s 			page 180


     /tmp/ccVzdWer.s:2741   .text.BLDC_controller_step:0000000000000378 $t
     /tmp/ccVzdWer.s:3418   .text.BLDC_controller_step:00000000000006bc $d
     /tmp/ccVzdWer.s:3425   .text.BLDC_controller_step:00000000000006c8 $t
     /tmp/ccVzdWer.s:4321   .text.BLDC_controller_step:0000000000000afc $d
     /tmp/ccVzdWer.s:4331   .text.BLDC_controller_step:0000000000000b0c $t
     /tmp/ccVzdWer.s:4696   .text.BLDC_controller_step:0000000000000cfc $d
     /tmp/ccVzdWer.s:4700   .text.BLDC_controller_step:0000000000000d0c $t
     /tmp/ccVzdWer.s:5296   .text.BLDC_controller_step:0000000000000fc8 $d
     /tmp/ccVzdWer.s:5300   .text.BLDC_controller_step:0000000000000fcc $t
     /tmp/ccVzdWer.s:5634   .text.BLDC_controller_step:000000000000116c $d
     /tmp/ccVzdWer.s:5640   .text.BLDC_controller_initialize:0000000000000000 $t
     /tmp/ccVzdWer.s:5647   .text.BLDC_controller_initialize:0000000000000000 BLDC_controller_initialize

UNDEFINED SYMBOLS
rtConstP
